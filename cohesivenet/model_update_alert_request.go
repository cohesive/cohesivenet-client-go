/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateAlertRequest struct for UpdateAlertRequest
type UpdateAlertRequest struct {
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
	WebhookId *int32 `json:"webhook_id,omitempty"`
	Events []string `json:"events,omitempty"`
	CustomProperties []AlertCustomProperty `json:"custom_properties,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewUpdateAlertRequest instantiates a new UpdateAlertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAlertRequest() *UpdateAlertRequest {
	this := UpdateAlertRequest{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewUpdateAlertRequestWithDefaults instantiates a new UpdateAlertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAlertRequestWithDefaults() *UpdateAlertRequest {
	this := UpdateAlertRequest{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAlertRequest) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UpdateAlertRequest) SetUrl(v string) {
	o.Url = &v
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetWebhookId() int32 {
	if o == nil || o.WebhookId == nil {
		var ret int32
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetWebhookIdOk() (*int32, bool) {
	if o == nil || o.WebhookId == nil {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasWebhookId() bool {
	if o != nil && o.WebhookId != nil {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given int32 and assigns it to the WebhookId field.
func (o *UpdateAlertRequest) SetWebhookId(v int32) {
	o.WebhookId = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetEvents() []string {
	if o == nil || o.Events == nil {
		var ret []string
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetEventsOk() ([]string, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []string and assigns it to the Events field.
func (o *UpdateAlertRequest) SetEvents(v []string) {
	o.Events = v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetCustomProperties() []CreateWebookRequestHeadersInner {
	if o == nil || o.CustomProperties == nil {
		var ret []CreateWebookRequestHeadersInner
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetCustomPropertiesOk() ([]CreateWebookRequestHeadersInner, bool) {
	if o == nil || o.CustomProperties == nil {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasCustomProperties() bool {
	if o != nil && o.CustomProperties != nil {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []CreateWebookRequestHeadersInner and assigns it to the CustomProperties field.
func (o *UpdateAlertRequest) SetCustomProperties(v []CreateWebookRequestHeadersInner) {
	o.CustomProperties = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateAlertRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlertRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateAlertRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateAlertRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o UpdateAlertRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.WebhookId != nil {
		toSerialize["webhook_id"] = o.WebhookId
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.CustomProperties != nil {
		toSerialize["custom_properties"] = o.CustomProperties
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAlertRequest struct {
	value *UpdateAlertRequest
	isSet bool
}

func (v NullableUpdateAlertRequest) Get() *UpdateAlertRequest {
	return v.value
}

func (v *NullableUpdateAlertRequest) Set(val *UpdateAlertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAlertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAlertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAlertRequest(val *UpdateAlertRequest) *NullableUpdateAlertRequest {
	return &NullableUpdateAlertRequest{value: val, isSet: true}
}

func (v NullableUpdateAlertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAlertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


