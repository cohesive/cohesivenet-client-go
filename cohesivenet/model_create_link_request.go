/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// CreateLinkRequest struct for CreateLinkRequest
type CreateLinkRequest struct {
	Id int32 `json:"id"` // required
	Name string `json:"name"` // required
	Conf string `json:"conf"` // required. once vns3 controller fetching supported, can use that to get next conf
	Description *string `json:"description"`
	Policies []string `json:"policies"`
	// fetching conf from vns3 not supported yet
	// Vns3Controller *string `json:"vns3_controller"`
	// Vns3Auth *string `json:"vns3_uath"`
	// AuthType *string `json:"auth_type"`
}

// NewCreateLinkRequest instantiates a new CreateLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLinkRequest(id int32, name string) *CreateLinkRequest {
	this := CreateLinkRequest{}
	this.Id = id
	this.Name = name
	this.Policies = []string{}
	return &this
}

// NewCreateLinkRequestWithDefaults instantiates a new CreateLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLinkRequestWithDefaults() *CreateLinkRequest {
	this := CreateLinkRequest{}
	this.Policies = []string{}
	return &this
}

// GetId returns the Key field value
func (o *CreateLinkRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateLinkRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateLinkRequest) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CreateLinkRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLinkRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLinkRequest) SetName(v string) {
	o.Name = v
}

// GetConf returns the Conf field value
func (o *CreateLinkRequest) GetConf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Conf
}

// GetConfOk returns a tuple with the Conf field value
// and a boolean to check if the value has been set.
func (o *CreateLinkRequest) GetConfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conf, true
}

// SetConf sets field value
func (o *CreateLinkRequest) SetConf(v string) {
	o.Conf = v
}


// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *CreateLinkRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkRequest) GetPoliciesOk() ([]AlertCustomPropertyRequest, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CreateLinkRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []AlertCustomPropertyRequest and assigns it to the Policies field.
func (o *CreateLinkRequest) SetPolicies(v []string) {
	o.Policies = v
}


// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateLinkRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLinkRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateLinkRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateLinkRequest) SetDescription(v string) {
	o.Description = &v
}

func (o CreateLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Conf != nil {
		toSerialize["conf"] = o.Conf
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if len(o.Policies) != 0 {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableCreateLinkRequest struct {
	value *CreateLinkRequest
	isSet bool
}

func (v NullableCreateLinkRequest) Get() *CreateLinkRequest {
	return v.value
}

func (v *NullableCreateLinkRequest) Set(val *CreateLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLinkRequest(val *CreateLinkRequest) *NullableCreateLinkRequest {
	return &NullableCreateLinkRequest{value: val, isSet: true}
}

func (v NullableCreateLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


