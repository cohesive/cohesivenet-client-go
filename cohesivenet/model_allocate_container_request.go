/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
	"fmt"
)

// AllocateContainerRequest - struct for AllocateContainerRequest
type AllocateContainerRequest struct {
	// Name of the new container
	Name *string `json:"name"`
	// Uuid of existing container to start
	Uuid *string `json:"uuid"`
	// Container image from which to allocate container
	ImageUuid *string `json:"image_uuid,omitempty"`
	// IP to use from plugin network
	IpAddress *string `json:"ip_address,omitempty"`
	// Optionally override the image command. Required if plugin command not defined.
	Command *string `json:"command,omitempty"`
	Description *string `json:"description,omitempty"`
	Environment *string `json:"environment,omitempty"`
}

// NewAllocateContainerRequest instantiates a new AllocateContainerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocateContainerRequest() *AllocateContainerRequest {
	this := AllocateContainerRequest{}
	return &this
}

// NewAllocateContainerRequestWithDefaults instantiates a new AllocateContainerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocateContainerRequestWithDefaults() *AllocateContainerRequest {
	this := AllocateContainerRequest{}
	return &this
}

// GetName returns the Name field value
func (o *AllocateContainerRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AllocateContainerRequest) SetName(v string) {
	o.Name = v
}

// GetUuid returns the Uuid field value
func (o *AllocateContainerRequest) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *AllocateContainerRequest) SetUuid(v string) {
	o.Uuid = v
}

// ImageUuid

// SetImageUuid sets field value
func (o *AllocateContainerRequest) SetImageUuid(v string) {
	o.ImageUuid = v
}

// GetImageUuid returns the ImageUuid field value
func (o *AllocateContainerRequest) GetImageUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageUuid
}

// GetUuidOk returns a tuple with the ImageUuid field value
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetImageUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageUuid, true
}

// SetImageUuid sets field value
func (o *AllocateContainerRequest) SetImageUuid(v string) {
	o.ImageUuid = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AllocateContainerRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AllocateContainerRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AllocateContainerRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *AllocateContainerRequest) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *AllocateContainerRequest) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *AllocateContainerRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *AllocateContainerRequest) GetCommand() string {
	if o == nil || o.Command == nil {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetCommandOk() (*string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *AllocateContainerRequest) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *AllocateContainerRequest) SetCommand(v string) {
	o.Command = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AllocateContainerRequest) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocateContainerRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AllocateContainerRequest) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AllocateContainerRequest) SetEnvironment(v string) {
	o.Environment = &v
}

func (o AllocateContainerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.ImageUuid != nil {
		toSerialize["image_uuid"] = o.ImageUuid
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	return json.Marshal(toSerialize)
}

type NullableAllocateContainerRequest struct {
	value *AllocateContainerRequest
	isSet bool
}

func (v NullableAllocateContainerRequest) Get() *AllocateContainerRequest {
	return v.value
}

func (v *NullableAllocateContainerRequest) Set(val *AllocateContainerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocateContainerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocateContainerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocateContainerRequest(val *AllocateContainerRequest) *NullableAllocateContainerRequest {
	return &NullableAllocateContainerRequest{value: val, isSet: true}
}

func (v NullableAllocateContainerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocateContainerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


