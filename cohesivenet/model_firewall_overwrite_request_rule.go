/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FirewallOverwriteRequestRule struct for FirewallOverwriteRequestRule
type FirewallOverwriteRequestRule struct {
	Rule string `json:"rule"`
	// position in resulting firewall. default position is position in list
	Position *int32 `json:"position,omitempty"`
	Comment *string `json:"comment,omitempty"`
	// optional ID to preserve groups and map errors
	Id *string `json:"id,omitempty"`
	Groups []string `json:"groups,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
}

// NewFirewallOverwriteRequestRule instantiates a new FirewallOverwriteRequestRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallOverwriteRequestRule(rule string) *FirewallOverwriteRequestRule {
	this := FirewallOverwriteRequestRule{}
	this.Rule = rule
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// NewFirewallOverwriteRequestRuleWithDefaults instantiates a new FirewallOverwriteRequestRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallOverwriteRequestRuleWithDefaults() *FirewallOverwriteRequestRule {
	this := FirewallOverwriteRequestRule{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// GetRule returns the Rule field value
func (o *FirewallOverwriteRequestRule) GetRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *FirewallOverwriteRequestRule) SetRule(v string) {
	o.Rule = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FirewallOverwriteRequestRule) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FirewallOverwriteRequestRule) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *FirewallOverwriteRequestRule) SetPosition(v int32) {
	o.Position = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *FirewallOverwriteRequestRule) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *FirewallOverwriteRequestRule) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *FirewallOverwriteRequestRule) SetComment(v string) {
	o.Comment = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FirewallOverwriteRequestRule) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FirewallOverwriteRequestRule) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FirewallOverwriteRequestRule) SetId(v string) {
	o.Id = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *FirewallOverwriteRequestRule) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetGroupsOk() ([]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *FirewallOverwriteRequestRule) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *FirewallOverwriteRequestRule) SetGroups(v []string) {
	o.Groups = v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *FirewallOverwriteRequestRule) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequestRule) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *FirewallOverwriteRequestRule) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *FirewallOverwriteRequestRule) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o FirewallOverwriteRequestRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rule"] = o.Rule
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallOverwriteRequestRule struct {
	value *FirewallOverwriteRequestRule
	isSet bool
}

func (v NullableFirewallOverwriteRequestRule) Get() *FirewallOverwriteRequestRule {
	return v.value
}

func (v *NullableFirewallOverwriteRequestRule) Set(val *FirewallOverwriteRequestRule) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallOverwriteRequestRule) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallOverwriteRequestRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallOverwriteRequestRule(val *FirewallOverwriteRequestRule) *NullableFirewallOverwriteRequestRule {
	return &NullableFirewallOverwriteRequestRule{value: val, isSet: true}
}

func (v NullableFirewallOverwriteRequestRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallOverwriteRequestRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


