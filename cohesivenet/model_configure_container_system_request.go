/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// ConfigureContainerSystemRequest struct for ConfigureContainerSystemRequest
type ConfigureContainerSystemRequest struct {
	// Subnet CIDR that will be used for the container network.
	Network string `json:"network"`
}

// NewConfigureContainerSystemRequest instantiates a new ConfigureContainerSystemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigureContainerSystemRequest(network string) *ConfigureContainerSystemRequest {
	this := ConfigureContainerSystemRequest{}
	this.Network = network
	return &this
}

// NewConfigureContainerSystemRequestWithDefaults instantiates a new ConfigureContainerSystemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigureContainerSystemRequestWithDefaults() *ConfigureContainerSystemRequest {
	this := ConfigureContainerSystemRequest{}
	return &this
}

// GetNetwork returns the Network field value
func (o *ConfigureContainerSystemRequest) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *ConfigureContainerSystemRequest) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *ConfigureContainerSystemRequest) SetNetwork(v string) {
	o.Network = v
}

func (o ConfigureContainerSystemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableConfigureContainerSystemRequest struct {
	value *ConfigureContainerSystemRequest
	isSet bool
}

func (v NullableConfigureContainerSystemRequest) Get() *ConfigureContainerSystemRequest {
	return v.value
}

func (v *NullableConfigureContainerSystemRequest) Set(val *ConfigureContainerSystemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigureContainerSystemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigureContainerSystemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigureContainerSystemRequest(val *ConfigureContainerSystemRequest) *NullableConfigureContainerSystemRequest {
	return &NullableConfigureContainerSystemRequest{value: val, isSet: true}
}

func (v NullableConfigureContainerSystemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigureContainerSystemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


