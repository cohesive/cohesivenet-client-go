/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateLinkRequest struct for UpdateLinkRequest
type UpdateLinkRequest struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	Policies *[]string `json:"policies,omitempty"`
}

// NewUpdateLinkRequest instantiates a new UpdateLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLinkRequest() *UpdateLinkRequest {
	this := UpdateLinkRequest{}
	return &this
}

// NewUpdateLinkRequestWithDefaults instantiates a new UpdateLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLinkRequestWithDefaults() *UpdateLinkRequest {
	this := UpdateLinkRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLinkRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLinkRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateLinkRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLinkRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateLinkRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLinkRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateLinkRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateLinkRequest) SetDescription(v string) {
	o.Description = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *UpdateLinkRequest) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLinkRequest) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *UpdateLinkRequest) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *UpdateLinkRequest) SetConnected(v bool) {
	o.Connected = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *UpdateLinkRequest) GetPolicies() []string {
	if o == nil || o.Policies == nil {
		var ret []string
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLinkRequest) GetPoliciesOk() (*[]string, bool) {
	if o == nil || o.Policies == nil {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *UpdateLinkRequest) HasPolicies() bool {
	if o != nil && o.Policies != nil {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *UpdateLinkRequest) SetPolicies(v []string) {
	o.Policies = &v
}

func (o UpdateLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateLinkRequest struct {
	value *UpdateLinkRequest
	isSet bool
}

func (v NullableUpdateLinkRequest) Get() *UpdateLinkRequest {
	return v.value
}

func (v *NullableUpdateLinkRequest) Set(val *UpdateLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLinkRequest(val *UpdateLinkRequest) *NullableUpdateLinkRequest {
	return &NullableUpdateLinkRequest{value: val, isSet: true}
}

func (v NullableUpdateLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


