/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FirewallV1OverwriteRequest struct for FirewallV1OverwriteRequest
type FirewallV1OverwriteRequest struct {
	Rules string `json:"rules"`
}

// NewFirewallV1OverwriteRequest instantiates a new FirewallV1OverwriteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallV1OverwriteRequest(rules string) *FirewallV1OverwriteRequest {
	this := FirewallV1OverwriteRequest{}
	this.Rules = rules
	return &this
}

// NewFirewallV1OverwriteRequestWithDefaults instantiates a new FirewallV1OverwriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallV1OverwriteRequestWithDefaults() *FirewallV1OverwriteRequest {
	this := FirewallV1OverwriteRequest{}
	return &this
}

// GetRules returns the Rules field value
func (o *FirewallV1OverwriteRequest) GetRules() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *FirewallV1OverwriteRequest) GetRulesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *FirewallV1OverwriteRequest) SetRules(v string) {
	o.Rules = v
}

func (o FirewallV1OverwriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallV1OverwriteRequest struct {
	value *FirewallV1OverwriteRequest
	isSet bool
}

func (v NullableFirewallV1OverwriteRequest) Get() *FirewallV1OverwriteRequest {
	return v.value
}

func (v *NullableFirewallV1OverwriteRequest) Set(val *FirewallV1OverwriteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallV1OverwriteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallV1OverwriteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallV1OverwriteRequest(val *FirewallV1OverwriteRequest) *NullableFirewallV1OverwriteRequest {
	return &NullableFirewallV1OverwriteRequest{value: val, isSet: true}
}

func (v NullableFirewallV1OverwriteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallV1OverwriteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


