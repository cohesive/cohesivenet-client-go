/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// PluginInstance struct for PluginInstance
type PluginInstance struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Url *string `json:"url,omitempty"`
	Command *string `json:"command,omitempty"`
	ImageId *int32 `json:"image_id,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Status *string `json:"status,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	StatusMessage *string `json:"status_message,omitempty"`
	Environment *string `json:"environment,omitempty"`
	ImageName *string `json:"image_name,omitempty"`
	Firewall []PluginInstanceFirewallRule `json:"firewall,omitempty"`
	// Map of plugin ports -> VNS3 ports
	PortMaps *map[string]int32 `json:"port_maps,omitempty"`
	Manager *PluginManagerConf `json:"manager,omitempty"`
	Data *Container `json:"data,omitempty"`
}

// NewPluginInstance instantiates a new PluginInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginInstance() *PluginInstance {
	this := PluginInstance{}
	return &this
}

// NewPluginInstanceWithDefaults instantiates a new PluginInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginInstanceWithDefaults() *PluginInstance {
	this := PluginInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PluginInstance) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PluginInstance) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PluginInstance) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PluginInstance) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PluginInstance) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PluginInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PluginInstance) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PluginInstance) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PluginInstance) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PluginInstance) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PluginInstance) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PluginInstance) SetUrl(v string) {
	o.Url = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *PluginInstance) GetCommand() string {
	if o == nil || o.Command == nil {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetCommandOk() (*string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *PluginInstance) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *PluginInstance) SetCommand(v string) {
	o.Command = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *PluginInstance) GetImageId() int32 {
	if o == nil || o.ImageId == nil {
		var ret int32
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetImageIdOk() (*int32, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *PluginInstance) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given int32 and assigns it to the ImageId field.
func (o *PluginInstance) SetImageId(v int32) {
	o.ImageId = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PluginInstance) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PluginInstance) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PluginInstance) SetUuid(v string) {
	o.Uuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PluginInstance) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PluginInstance) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PluginInstance) SetStatus(v string) {
	o.Status = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *PluginInstance) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *PluginInstance) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *PluginInstance) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PluginInstance) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PluginInstance) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PluginInstance) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PluginInstance) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PluginInstance) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *PluginInstance) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *PluginInstance) GetStatusMessage() string {
	if o == nil || o.StatusMessage == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetStatusMessageOk() (*string, bool) {
	if o == nil || o.StatusMessage == nil {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *PluginInstance) HasStatusMessage() bool {
	if o != nil && o.StatusMessage != nil {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *PluginInstance) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *PluginInstance) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *PluginInstance) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *PluginInstance) SetEnvironment(v string) {
	o.Environment = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *PluginInstance) GetImageName() string {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetImageNameOk() (*string, bool) {
	if o == nil || o.ImageName == nil {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *PluginInstance) HasImageName() bool {
	if o != nil && o.ImageName != nil {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *PluginInstance) SetImageName(v string) {
	o.ImageName = &v
}

// GetFirewall returns the Firewall field value if set, zero value otherwise.
func (o *PluginInstance) GetFirewall() []PluginInstanceFirewallRule {
	if o == nil || o.Firewall == nil {
		var ret []PluginInstanceFirewallRule
		return ret
	}
	return o.Firewall
}

// GetFirewallOk returns a tuple with the Firewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetFirewallOk() ([]PluginInstanceFirewallRule, bool) {
	if o == nil || o.Firewall == nil {
		return nil, false
	}
	return o.Firewall, true
}

// HasFirewall returns a boolean if a field has been set.
func (o *PluginInstance) HasFirewall() bool {
	if o != nil && o.Firewall != nil {
		return true
	}

	return false
}

// SetFirewall gets a reference to the given []PluginInstanceFirewallRule and assigns it to the Firewall field.
func (o *PluginInstance) SetFirewall(v []PluginInstanceFirewallRule) {
	o.Firewall = v
}

// GetPortMaps returns the PortMaps field value if set, zero value otherwise.
func (o *PluginInstance) GetPortMaps() map[string]int32 {
	if o == nil || o.PortMaps == nil {
		var ret map[string]int32
		return ret
	}
	return *o.PortMaps
}

// GetPortMapsOk returns a tuple with the PortMaps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetPortMapsOk() (*map[string]int32, bool) {
	if o == nil || o.PortMaps == nil {
		return nil, false
	}
	return o.PortMaps, true
}

// HasPortMaps returns a boolean if a field has been set.
func (o *PluginInstance) HasPortMaps() bool {
	if o != nil && o.PortMaps != nil {
		return true
	}

	return false
}

// SetPortMaps gets a reference to the given map[string]int32 and assigns it to the PortMaps field.
func (o *PluginInstance) SetPortMaps(v map[string]int32) {
	o.PortMaps = &v
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *PluginInstance) GetManager() PluginManagerConf {
	if o == nil || o.Manager == nil {
		var ret PluginManagerConf
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetManagerOk() (*PluginManagerConf, bool) {
	if o == nil || o.Manager == nil {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *PluginInstance) HasManager() bool {
	if o != nil && o.Manager != nil {
		return true
	}

	return false
}

// SetManager gets a reference to the given PluginManagerConf and assigns it to the Manager field.
func (o *PluginInstance) SetManager(v PluginManagerConf) {
	o.Manager = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PluginInstance) GetData() Container {
	if o == nil || o.Data == nil {
		var ret Container
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstance) GetDataOk() (*Container, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PluginInstance) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given Container and assigns it to the Data field.
func (o *PluginInstance) SetData(v Container) {
	o.Data = &v
}

func (o PluginInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.ImageId != nil {
		toSerialize["image_id"] = o.ImageId
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.StatusMessage != nil {
		toSerialize["status_message"] = o.StatusMessage
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.ImageName != nil {
		toSerialize["image_name"] = o.ImageName
	}
	if o.Firewall != nil {
		toSerialize["firewall"] = o.Firewall
	}
	if o.PortMaps != nil {
		toSerialize["port_maps"] = o.PortMaps
	}
	if o.Manager != nil {
		toSerialize["manager"] = o.Manager
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePluginInstance struct {
	value *PluginInstance
	isSet bool
}

func (v NullablePluginInstance) Get() *PluginInstance {
	return v.value
}

func (v *NullablePluginInstance) Set(val *PluginInstance) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginInstance) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginInstance(val *PluginInstance) *NullablePluginInstance {
	return &NullablePluginInstance{value: val, isSet: true}
}

func (v NullablePluginInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


