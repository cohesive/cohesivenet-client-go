/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FirewallV1RuleRequest struct for FirewallV1RuleRequest
type FirewallV1RuleRequest struct {
	Rule string `json:"rule"`
	// Position of rule in subtable. -1 indicates the end of the subtable
	Position *int32 `json:"position,omitempty"`
}

// NewFirewallV1RuleRequest instantiates a new FirewallV1RuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallV1RuleRequest(rule string) *FirewallV1RuleRequest {
	this := FirewallV1RuleRequest{}
	this.Rule = rule
	var position int32 = -1
	this.Position = &position
	return &this
}

// NewFirewallV1RuleRequestWithDefaults instantiates a new FirewallV1RuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallV1RuleRequestWithDefaults() *FirewallV1RuleRequest {
	this := FirewallV1RuleRequest{}
	var position int32 = -1
	this.Position = &position
	return &this
}

// GetRule returns the Rule field value
func (o *FirewallV1RuleRequest) GetRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *FirewallV1RuleRequest) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *FirewallV1RuleRequest) SetRule(v string) {
	o.Rule = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FirewallV1RuleRequest) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallV1RuleRequest) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FirewallV1RuleRequest) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *FirewallV1RuleRequest) SetPosition(v int32) {
	o.Position = &v
}

func (o FirewallV1RuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rule"] = o.Rule
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallV1RuleRequest struct {
	value *FirewallV1RuleRequest
	isSet bool
}

func (v NullableFirewallV1RuleRequest) Get() *FirewallV1RuleRequest {
	return v.value
}

func (v *NullableFirewallV1RuleRequest) Set(val *FirewallV1RuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallV1RuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallV1RuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallV1RuleRequest(val *FirewallV1RuleRequest) *NullableFirewallV1RuleRequest {
	return &NullableFirewallV1RuleRequest{value: val, isSet: true}
}

func (v NullableFirewallV1RuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallV1RuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


