/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FirewallV1DeleteRuleRequest struct for FirewallV1DeleteRuleRequest
type FirewallV1DeleteRuleRequest struct {
	// Rule to be deleted
	Rule string `json:"rule"`
}

// NewFirewallV1DeleteRuleRequest instantiates a new FirewallV1DeleteRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallV1DeleteRuleRequest(rule string) *FirewallV1DeleteRuleRequest {
	this := FirewallV1DeleteRuleRequest{}
	this.Rule = rule
	return &this
}

// NewFirewallV1DeleteRuleRequestWithDefaults instantiates a new FirewallV1DeleteRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallV1DeleteRuleRequestWithDefaults() *FirewallV1DeleteRuleRequest {
	this := FirewallV1DeleteRuleRequest{}
	return &this
}

// GetRule returns the Rule field value
func (o *FirewallV1DeleteRuleRequest) GetRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *FirewallV1DeleteRuleRequest) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *FirewallV1DeleteRuleRequest) SetRule(v string) {
	o.Rule = v
}

func (o FirewallV1DeleteRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rule"] = o.Rule
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallV1DeleteRuleRequest struct {
	value *FirewallV1DeleteRuleRequest
	isSet bool
}

func (v NullableFirewallV1DeleteRuleRequest) Get() *FirewallV1DeleteRuleRequest {
	return v.value
}

func (v *NullableFirewallV1DeleteRuleRequest) Set(val *FirewallV1DeleteRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallV1DeleteRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallV1DeleteRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallV1DeleteRuleRequest(val *FirewallV1DeleteRuleRequest) *NullableFirewallV1DeleteRuleRequest {
	return &NullableFirewallV1DeleteRuleRequest{value: val, isSet: true}
}

func (v NullableFirewallV1DeleteRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallV1DeleteRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


