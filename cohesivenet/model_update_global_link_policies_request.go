/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateGlobalLinkPoliciesRequest struct for UpdateGlobalLinkPoliciesRequest
type UpdateGlobalLinkPoliciesRequest struct {
	Type string `json:"type,omitempty"`
	Policies []string `json:"policies"`
}

// NewUpdateGlobalLinkPoliciesRequest instantiates a new UpdateGlobalLinkPoliciesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGlobalLinkPoliciesRequest(type_ string, policies []string) *UpdateGlobalLinkPoliciesRequest {
	this := UpdateGlobalLinkPoliciesRequest{}
	this.Type = type_
	this.Policies = policies
	return &this
}

// NewUpdateGlobalLinkPoliciesRequestWithDefaults instantiates a new UpdateGlobalLinkPoliciesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGlobalLinkPoliciesRequestWithDefaults() *UpdateGlobalLinkPoliciesRequest {
	this := UpdateGlobalLinkPoliciesRequest{}
	var type_ string = "openvpn"
	this.Type = type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateGlobalLinkPoliciesRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGlobalLinkPoliciesRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateGlobalLinkPoliciesRequest) SetType(v string) {
	o.Type = v
}

// GetPolicies returns the Policies field value
func (o *UpdateGlobalLinkPoliciesRequest) GetPolicies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value
// and a boolean to check if the value has been set.
func (o *UpdateGlobalLinkPoliciesRequest) GetPoliciesOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policies, true
}

// SetPolicies sets field value
func (o *UpdateGlobalLinkPoliciesRequest) SetPolicies(v []string) {
	o.Policies = v
}

func (o UpdateGlobalLinkPoliciesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["policies"] = o.Policies
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateGlobalLinkPoliciesRequest struct {
	value *UpdateGlobalLinkPoliciesRequest
	isSet bool
}

func (v NullableUpdateGlobalLinkPoliciesRequest) Get() *UpdateGlobalLinkPoliciesRequest {
	return v.value
}

func (v *NullableUpdateGlobalLinkPoliciesRequest) Set(val *UpdateGlobalLinkPoliciesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGlobalLinkPoliciesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGlobalLinkPoliciesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGlobalLinkPoliciesRequest(val *UpdateGlobalLinkPoliciesRequest) *NullableUpdateGlobalLinkPoliciesRequest {
	return &NullableUpdateGlobalLinkPoliciesRequest{value: val, isSet: true}
}

func (v NullableUpdateGlobalLinkPoliciesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGlobalLinkPoliciesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


