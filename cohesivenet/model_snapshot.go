/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// Snapshot struct for Snapshot
type Snapshot struct {
	Sha1Checksum *string `json:"sha1_checksum,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CreatedAtI *int32 `json:"created_at_i,omitempty"`
	Size *int32 `json:"size,omitempty"`
	// Status of snapshot, pending, finished_ok, finished_failed or invalid
	Status *string `json:"status,omitempty"`
	// Token if snapshot task is still pending for polling
	Token *string `json:"token,omitempty"`
}

// NewSnapshot instantiates a new Snapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshot() *Snapshot {
	this := Snapshot{}
	return &this
}

// NewSnapshotWithDefaults instantiates a new Snapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotWithDefaults() *Snapshot {
	this := Snapshot{}
	return &this
}

// GetSha1Checksum returns the Sha1Checksum field value if set, zero value otherwise.
func (o *Snapshot) GetSha1Checksum() string {
	if o == nil || o.Sha1Checksum == nil {
		var ret string
		return ret
	}
	return *o.Sha1Checksum
}

// GetSha1ChecksumOk returns a tuple with the Sha1Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetSha1ChecksumOk() (*string, bool) {
	if o == nil || o.Sha1Checksum == nil {
		return nil, false
	}
	return o.Sha1Checksum, true
}

// HasSha1Checksum returns a boolean if a field has been set.
func (o *Snapshot) HasSha1Checksum() bool {
	if o != nil && o.Sha1Checksum != nil {
		return true
	}

	return false
}

// SetSha1Checksum gets a reference to the given string and assigns it to the Sha1Checksum field.
func (o *Snapshot) SetSha1Checksum(v string) {
	o.Sha1Checksum = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Snapshot) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Snapshot) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Snapshot) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedAtI returns the CreatedAtI field value if set, zero value otherwise.
func (o *Snapshot) GetCreatedAtI() int32 {
	if o == nil || o.CreatedAtI == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAtI
}

// GetCreatedAtIOk returns a tuple with the CreatedAtI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetCreatedAtIOk() (*int32, bool) {
	if o == nil || o.CreatedAtI == nil {
		return nil, false
	}
	return o.CreatedAtI, true
}

// HasCreatedAtI returns a boolean if a field has been set.
func (o *Snapshot) HasCreatedAtI() bool {
	if o != nil && o.CreatedAtI != nil {
		return true
	}

	return false
}

// SetCreatedAtI gets a reference to the given int32 and assigns it to the CreatedAtI field.
func (o *Snapshot) SetCreatedAtI(v int32) {
	o.CreatedAtI = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Snapshot) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Snapshot) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *Snapshot) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Snapshot) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Snapshot) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Snapshot) SetStatus(v string) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *Snapshot) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snapshot) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *Snapshot) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *Snapshot) SetToken(v string) {
	o.Token = &v
}

func (o Snapshot) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sha1Checksum != nil {
		toSerialize["sha1_checksum"] = o.Sha1Checksum
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedAtI != nil {
		toSerialize["created_at_i"] = o.CreatedAtI
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshot struct {
	value *Snapshot
	isSet bool
}

func (v NullableSnapshot) Get() *Snapshot {
	return v.value
}

func (v *NullableSnapshot) Set(val *Snapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshot(val *Snapshot) *NullableSnapshot {
	return &NullableSnapshot{value: val, isSet: true}
}

func (v NullableSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


