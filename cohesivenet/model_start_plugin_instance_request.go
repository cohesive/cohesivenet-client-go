/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// StartPluginInstanceRequest struct for StartPluginInstanceRequest
type StartPluginInstanceRequest struct {
	// Name of the new plugin instance
	Name string `json:"name"`
	// ID of plugin
	PluginId int32 `json:"plugin_id"`
	Description *string `json:"description,omitempty"`
	// IP to use from plugin network
	IpAddress *string `json:"ip_address,omitempty"`
	// Optionally override the plugins command. Required if plugin command not defined.
	Command *string `json:"command,omitempty"`
	ManagerConfig *PluginManagerConf `json:"manager_config,omitempty"`
	Environment []KeyValuePair `json:"environment,omitempty"`
}

// NewStartPluginInstanceRequest instantiates a new StartPluginInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartPluginInstanceRequest(name string, pluginId int32) *StartPluginInstanceRequest {
	this := StartPluginInstanceRequest{}
	this.Name = name
	this.PluginId = pluginId
	return &this
}

// NewStartPluginInstanceRequestWithDefaults instantiates a new StartPluginInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartPluginInstanceRequestWithDefaults() *StartPluginInstanceRequest {
	this := StartPluginInstanceRequest{}
	return &this
}

// GetName returns the Name field value
func (o *StartPluginInstanceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StartPluginInstanceRequest) SetName(v string) {
	o.Name = v
}

// GetPluginId returns the PluginId field value
func (o *StartPluginInstanceRequest) GetPluginId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetPluginIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluginId, true
}

// SetPluginId sets field value
func (o *StartPluginInstanceRequest) SetPluginId(v int32) {
	o.PluginId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StartPluginInstanceRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StartPluginInstanceRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StartPluginInstanceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *StartPluginInstanceRequest) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *StartPluginInstanceRequest) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *StartPluginInstanceRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *StartPluginInstanceRequest) GetCommand() string {
	if o == nil || o.Command == nil {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetCommandOk() (*string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *StartPluginInstanceRequest) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *StartPluginInstanceRequest) SetCommand(v string) {
	o.Command = &v
}

// GetManagerConfig returns the ManagerConfig field value if set, zero value otherwise.
func (o *StartPluginInstanceRequest) GetManagerConfig() PluginManagerConf {
	if o == nil || o.ManagerConfig == nil {
		var ret PluginManagerConf
		return ret
	}
	return *o.ManagerConfig
}

// GetManagerConfigOk returns a tuple with the ManagerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetManagerConfigOk() (*PluginManagerConf, bool) {
	if o == nil || o.ManagerConfig == nil {
		return nil, false
	}
	return o.ManagerConfig, true
}

// HasManagerConfig returns a boolean if a field has been set.
func (o *StartPluginInstanceRequest) HasManagerConfig() bool {
	if o != nil && o.ManagerConfig != nil {
		return true
	}

	return false
}

// SetManagerConfig gets a reference to the given PluginManagerConf and assigns it to the ManagerConfig field.
func (o *StartPluginInstanceRequest) SetManagerConfig(v PluginManagerConf) {
	o.ManagerConfig = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *StartPluginInstanceRequest) GetEnvironment() []KeyValuePair {
	if o == nil || o.Environment == nil {
		var ret []KeyValuePair
		return ret
	}
	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartPluginInstanceRequest) GetEnvironmentOk() ([]KeyValuePair, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *StartPluginInstanceRequest) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given []KeyValuePair and assigns it to the Environment field.
func (o *StartPluginInstanceRequest) SetEnvironment(v []KeyValuePair) {
	o.Environment = v
}

func (o StartPluginInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["plugin_id"] = o.PluginId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.ManagerConfig != nil {
		toSerialize["manager_config"] = o.ManagerConfig
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	return json.Marshal(toSerialize)
}

type NullableStartPluginInstanceRequest struct {
	value *StartPluginInstanceRequest
	isSet bool
}

func (v NullableStartPluginInstanceRequest) Get() *StartPluginInstanceRequest {
	return v.value
}

func (v *NullableStartPluginInstanceRequest) Set(val *StartPluginInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartPluginInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartPluginInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartPluginInstanceRequest(val *StartPluginInstanceRequest) *NullableStartPluginInstanceRequest {
	return &NullableStartPluginInstanceRequest{value: val, isSet: true}
}

func (v NullableStartPluginInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartPluginInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


