/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FetchSnapshotParamsRequest struct for FetchSnapshotParamsRequest
type FetchSnapshotParamsRequest struct {
	// fetches snapshot from source manager
	Source *string `json:"source,omitempty"`
	// host
	User *string `json:"host"`
	// password
	Password *string `json:"password,omitempty"`
	// timeout
	Timeout *int `json:"timeout,omitempty"`
}

// FetchSnapshotParamsRequest instantiates a new FetchSnapshotParamsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchSnapshotParamsRequest(source string) *FetchSnapshotParamsRequest {
	this := FetchSnapshotParamsRequest{}
	this.Source = &source
	return &this
}

// NewFetchSnapshotParamsRequestWithDefaults instantiates a new FetchSnapshotParamsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchSnapshotParamsRequestWithDefaults() *FetchSnapshotParamsRequest {
	this := FetchSnapshotParamsRequest{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *FetchSnapshotParamsRequest) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchSnapshotParamsRequest) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *FetchSnapshotParamsRequest) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *FetchSnapshotParamsRequest) SetSource(v string) {
	o.Source = &v
}

// GetToken returns the Token field value
func (o *FetchSnapshotParamsRequest) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.User
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FetchSnapshotParamsRequest) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.User, true
}

// SetToken sets field value
func (o *FetchSnapshotParamsRequest) SetUser(v string) {
	o.User = &v
}

// SetTopologyName gets a reference to the given string and assigns it to the TopologyName field.
func (o *FetchSnapshotParamsRequest) SetPassword(v string) {
	o.Password = &v
}

// GetTopologyName returns the TopologyName field value if set, zero value otherwise.
func (o *FetchSnapshotParamsRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetTopologyNameOk returns a tuple with the TopologyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchSnapshotParamsRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasTopologyName returns a boolean if a field has been set.
func (o *FetchSnapshotParamsRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetTopologyName gets a reference to the given string and assigns it to the TopologyName field.
func (o *FetchSnapshotParamsRequest) SetTimeout(v int) {
	o.Timeout = &v
}

// GetTopologyName returns the TopologyName field value if set, zero value otherwise.
func (o *FetchSnapshotParamsRequest) GetTimeoout() int {
	if o == nil || o.Timeout == nil {
		return 120
	}
	return *o.Timeout
}

// GetTopologyNameOk returns a tuple with the TopologyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchSnapshotParamsRequest) GetTimeoutOk() (*int, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTopologyName returns a boolean if a field has been set.
func (o *FetchSnapshotParamsRequest) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

func (o FetchSnapshotParamsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.User!= nil {
		toSerialize["user"] = o.User
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableFetchSnapshotParamsRequest struct {
	value *FetchSnapshotParamsRequest
	isSet bool
}

func (v NullableFetchSnapshotParamsRequest) Get() *FetchSnapshotParamsRequest {
	return v.value
}

func (v *NullableFetchSnapshotParamsRequest) Set(val *FetchSnapshotParamsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchSnapshotParamsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchSnapshotParamsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchSnapshotParamsRequest(val *FetchSnapshotParamsRequest) *NullableFetchSnapshotParamsRequest {
	return &NullableFetchSnapshotParamsRequest{value: val, isSet: true}
}

func (v NullableFetchSnapshotParamsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchSnapshotParamsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

