/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// GREEndpointParams struct for GREEndpointParams
type GREEndpointParams struct {
	EndpointName *string `json:"endpoint_name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	IpInternal NullableString `json:"ip_internal,omitempty"`
	Mtu *int32 `json:"mtu,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	MaskBits NullableString `json:"mask_bits,omitempty"`
	Gateway NullableString `json:"gateway,omitempty"`
	SystemDefault *bool `json:"system_default,omitempty"`
	LocalConnectionIp NullableString `json:"local_connection_ip,omitempty"`
	RemoteConnectionIp NullableString `json:"remote_connection_ip,omitempty"`
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewGREEndpointParams instantiates a new GREEndpointParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGREEndpointParams() *GREEndpointParams {
	this := GREEndpointParams{}
	var enabled bool = false
	this.Enabled = &enabled
	var systemDefault bool = false
	this.SystemDefault = &systemDefault
	var ttl int32 = 255
	this.Ttl = &ttl
	return &this
}

// NewGREEndpointParamsWithDefaults instantiates a new GREEndpointParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGREEndpointParamsWithDefaults() *GREEndpointParams {
	this := GREEndpointParams{}
	var enabled bool = false
	this.Enabled = &enabled
	var systemDefault bool = false
	this.SystemDefault = &systemDefault
	var ttl int32 = 255
	this.Ttl = &ttl
	return &this
}

// GetEndpointName returns the EndpointName field value if set, zero value otherwise.
func (o *GREEndpointParams) GetEndpointName() string {
	if o == nil || o.EndpointName == nil {
		var ret string
		return ret
	}
	return *o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointParams) GetEndpointNameOk() (*string, bool) {
	if o == nil || o.EndpointName == nil {
		return nil, false
	}
	return o.EndpointName, true
}

// HasEndpointName returns a boolean if a field has been set.
func (o *GREEndpointParams) HasEndpointName() bool {
	if o != nil && o.EndpointName != nil {
		return true
	}

	return false
}

// SetEndpointName gets a reference to the given string and assigns it to the EndpointName field.
func (o *GREEndpointParams) SetEndpointName(v string) {
	o.EndpointName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GREEndpointParams) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GREEndpointParams) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GREEndpointParams) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GREEndpointParams) UnsetDescription() {
	o.Description.Unset()
}

// GetIpInternal returns the IpInternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetIpInternal() string {
	if o == nil || o.IpInternal.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpInternal.Get()
}

// GetIpInternalOk returns a tuple with the IpInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetIpInternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpInternal.Get(), o.IpInternal.IsSet()
}

// HasIpInternal returns a boolean if a field has been set.
func (o *GREEndpointParams) HasIpInternal() bool {
	if o != nil && o.IpInternal.IsSet() {
		return true
	}

	return false
}

// SetIpInternal gets a reference to the given NullableString and assigns it to the IpInternal field.
func (o *GREEndpointParams) SetIpInternal(v string) {
	o.IpInternal.Set(&v)
}
// SetIpInternalNil sets the value for IpInternal to be an explicit nil
func (o *GREEndpointParams) SetIpInternalNil() {
	o.IpInternal.Set(nil)
}

// UnsetIpInternal ensures that no value is present for IpInternal, not even an explicit nil
func (o *GREEndpointParams) UnsetIpInternal() {
	o.IpInternal.Unset()
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *GREEndpointParams) GetMtu() int32 {
	if o == nil || o.Mtu == nil {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointParams) GetMtuOk() (*int32, bool) {
	if o == nil || o.Mtu == nil {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *GREEndpointParams) HasMtu() bool {
	if o != nil && o.Mtu != nil {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *GREEndpointParams) SetMtu(v int32) {
	o.Mtu = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GREEndpointParams) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointParams) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GREEndpointParams) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GREEndpointParams) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaskBits returns the MaskBits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetMaskBits() string {
	if o == nil || o.MaskBits.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaskBits.Get()
}

// GetMaskBitsOk returns a tuple with the MaskBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetMaskBitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaskBits.Get(), o.MaskBits.IsSet()
}

// HasMaskBits returns a boolean if a field has been set.
func (o *GREEndpointParams) HasMaskBits() bool {
	if o != nil && o.MaskBits.IsSet() {
		return true
	}

	return false
}

// SetMaskBits gets a reference to the given NullableString and assigns it to the MaskBits field.
func (o *GREEndpointParams) SetMaskBits(v string) {
	o.MaskBits.Set(&v)
}
// SetMaskBitsNil sets the value for MaskBits to be an explicit nil
func (o *GREEndpointParams) SetMaskBitsNil() {
	o.MaskBits.Set(nil)
}

// UnsetMaskBits ensures that no value is present for MaskBits, not even an explicit nil
func (o *GREEndpointParams) UnsetMaskBits() {
	o.MaskBits.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *GREEndpointParams) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *GREEndpointParams) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *GREEndpointParams) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *GREEndpointParams) UnsetGateway() {
	o.Gateway.Unset()
}

// GetSystemDefault returns the SystemDefault field value if set, zero value otherwise.
func (o *GREEndpointParams) GetSystemDefault() bool {
	if o == nil || o.SystemDefault == nil {
		var ret bool
		return ret
	}
	return *o.SystemDefault
}

// GetSystemDefaultOk returns a tuple with the SystemDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointParams) GetSystemDefaultOk() (*bool, bool) {
	if o == nil || o.SystemDefault == nil {
		return nil, false
	}
	return o.SystemDefault, true
}

// HasSystemDefault returns a boolean if a field has been set.
func (o *GREEndpointParams) HasSystemDefault() bool {
	if o != nil && o.SystemDefault != nil {
		return true
	}

	return false
}

// SetSystemDefault gets a reference to the given bool and assigns it to the SystemDefault field.
func (o *GREEndpointParams) SetSystemDefault(v bool) {
	o.SystemDefault = &v
}

// GetLocalConnectionIp returns the LocalConnectionIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetLocalConnectionIp() string {
	if o == nil || o.LocalConnectionIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalConnectionIp.Get()
}

// GetLocalConnectionIpOk returns a tuple with the LocalConnectionIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetLocalConnectionIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalConnectionIp.Get(), o.LocalConnectionIp.IsSet()
}

// HasLocalConnectionIp returns a boolean if a field has been set.
func (o *GREEndpointParams) HasLocalConnectionIp() bool {
	if o != nil && o.LocalConnectionIp.IsSet() {
		return true
	}

	return false
}

// SetLocalConnectionIp gets a reference to the given NullableString and assigns it to the LocalConnectionIp field.
func (o *GREEndpointParams) SetLocalConnectionIp(v string) {
	o.LocalConnectionIp.Set(&v)
}
// SetLocalConnectionIpNil sets the value for LocalConnectionIp to be an explicit nil
func (o *GREEndpointParams) SetLocalConnectionIpNil() {
	o.LocalConnectionIp.Set(nil)
}

// UnsetLocalConnectionIp ensures that no value is present for LocalConnectionIp, not even an explicit nil
func (o *GREEndpointParams) UnsetLocalConnectionIp() {
	o.LocalConnectionIp.Unset()
}

// GetRemoteConnectionIp returns the RemoteConnectionIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointParams) GetRemoteConnectionIp() string {
	if o == nil || o.RemoteConnectionIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteConnectionIp.Get()
}

// GetRemoteConnectionIpOk returns a tuple with the RemoteConnectionIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointParams) GetRemoteConnectionIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteConnectionIp.Get(), o.RemoteConnectionIp.IsSet()
}

// HasRemoteConnectionIp returns a boolean if a field has been set.
func (o *GREEndpointParams) HasRemoteConnectionIp() bool {
	if o != nil && o.RemoteConnectionIp.IsSet() {
		return true
	}

	return false
}

// SetRemoteConnectionIp gets a reference to the given NullableString and assigns it to the RemoteConnectionIp field.
func (o *GREEndpointParams) SetRemoteConnectionIp(v string) {
	o.RemoteConnectionIp.Set(&v)
}
// SetRemoteConnectionIpNil sets the value for RemoteConnectionIp to be an explicit nil
func (o *GREEndpointParams) SetRemoteConnectionIpNil() {
	o.RemoteConnectionIp.Set(nil)
}

// UnsetRemoteConnectionIp ensures that no value is present for RemoteConnectionIp, not even an explicit nil
func (o *GREEndpointParams) UnsetRemoteConnectionIp() {
	o.RemoteConnectionIp.Unset()
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GREEndpointParams) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointParams) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GREEndpointParams) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GREEndpointParams) SetTtl(v int32) {
	o.Ttl = &v
}

func (o GREEndpointParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndpointName != nil {
		toSerialize["endpoint_name"] = o.EndpointName
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IpInternal.IsSet() {
		toSerialize["ip_internal"] = o.IpInternal.Get()
	}
	if o.Mtu != nil {
		toSerialize["mtu"] = o.Mtu
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MaskBits.IsSet() {
		toSerialize["mask_bits"] = o.MaskBits.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.SystemDefault != nil {
		toSerialize["system_default"] = o.SystemDefault
	}
	if o.LocalConnectionIp.IsSet() {
		toSerialize["local_connection_ip"] = o.LocalConnectionIp.Get()
	}
	if o.RemoteConnectionIp.IsSet() {
		toSerialize["remote_connection_ip"] = o.RemoteConnectionIp.Get()
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	return json.Marshal(toSerialize)
}

type NullableGREEndpointParams struct {
	value *GREEndpointParams
	isSet bool
}

func (v NullableGREEndpointParams) Get() *GREEndpointParams {
	return v.value
}

func (v *NullableGREEndpointParams) Set(val *GREEndpointParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGREEndpointParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGREEndpointParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGREEndpointParams(val *GREEndpointParams) *NullableGREEndpointParams {
	return &NullableGREEndpointParams{value: val, isSet: true}
}

func (v NullableGREEndpointParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGREEndpointParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


