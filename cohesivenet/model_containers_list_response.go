/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// ContainersListResponse struct for ContainersListResponse
type ContainersListResponse struct {
	Response *ContainersList `json:"response,omitempty"`
}

// NewContainersListResponse instantiates a new ContainersListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainersListResponse() *ContainersListResponse {
	this := ContainersListResponse{}
	return &this
}

// NewContainersListResponseWithDefaults instantiates a new ContainersListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainersListResponseWithDefaults() *ContainersListResponse {
	this := ContainersListResponse{}
	return &this
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *ContainersListResponse) GetResponse() ContainersList {
	if o == nil || o.Response == nil {
		var ret ContainersList
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainersListResponse) GetResponseOk() (*ContainersList, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *ContainersListResponse) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given ContainersList and assigns it to the Response field.
func (o *ContainersListResponse) SetResponse(v ContainersList) {
	o.Response = &v
}

func (o ContainersListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	return json.Marshal(toSerialize)
}

type NullableContainersListResponse struct {
	value *ContainersListResponse
	isSet bool
}

func (v NullableContainersListResponse) Get() *ContainersListResponse {
	return v.value
}

func (v *NullableContainersListResponse) Set(val *ContainersListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainersListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainersListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainersListResponse(val *ContainersListResponse) *NullableContainersListResponse {
	return &NullableContainersListResponse{value: val, isSet: true}
}

func (v NullableContainersListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainersListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


