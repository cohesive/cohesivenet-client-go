/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// PluginInstanceUserRequest struct for PluginInstanceUserRequest
type PluginInstanceUserRequest struct {
	Username *string `json:"username,omitempty"`
	// password for ssh login
	Password *string `json:"password,omitempty"`
	PublicKey *string `json:"public_key,omitempty"`
	RequirePublicKey *bool `json:"require_public_key,omitempty"`
}

// NewPluginInstanceUserRequest instantiates a new PluginInstanceUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginInstanceUserRequest() *PluginInstanceUserRequest {
	this := PluginInstanceUserRequest{}
	return &this
}

// NewPluginInstanceUserRequestWithDefaults instantiates a new PluginInstanceUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginInstanceUserRequestWithDefaults() *PluginInstanceUserRequest {
	this := PluginInstanceUserRequest{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *PluginInstanceUserRequest) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstanceUserRequest) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *PluginInstanceUserRequest) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *PluginInstanceUserRequest) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PluginInstanceUserRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstanceUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PluginInstanceUserRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PluginInstanceUserRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *PluginInstanceUserRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstanceUserRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *PluginInstanceUserRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *PluginInstanceUserRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetRequirePublicKey returns the RequirePublicKey field value if set, zero value otherwise.
func (o *PluginInstanceUserRequest) GetRequirePublicKey() bool {
	if o == nil || o.RequirePublicKey == nil {
		var ret bool
		return ret
	}
	return *o.RequirePublicKey
}

// GetRequirePublicKeyOk returns a tuple with the RequirePublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInstanceUserRequest) GetRequirePublicKeyOk() (*bool, bool) {
	if o == nil || o.RequirePublicKey == nil {
		return nil, false
	}
	return o.RequirePublicKey, true
}

// HasRequirePublicKey returns a boolean if a field has been set.
func (o *PluginInstanceUserRequest) HasRequirePublicKey() bool {
	if o != nil && o.RequirePublicKey != nil {
		return true
	}

	return false
}

// SetRequirePublicKey gets a reference to the given bool and assigns it to the RequirePublicKey field.
func (o *PluginInstanceUserRequest) SetRequirePublicKey(v bool) {
	o.RequirePublicKey = &v
}

func (o PluginInstanceUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	if o.RequirePublicKey != nil {
		toSerialize["require_public_key"] = o.RequirePublicKey
	}
	return json.Marshal(toSerialize)
}

type NullablePluginInstanceUserRequest struct {
	value *PluginInstanceUserRequest
	isSet bool
}

func (v NullablePluginInstanceUserRequest) Get() *PluginInstanceUserRequest {
	return v.value
}

func (v *NullablePluginInstanceUserRequest) Set(val *PluginInstanceUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginInstanceUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginInstanceUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginInstanceUserRequest(val *PluginInstanceUserRequest) *NullablePluginInstanceUserRequest {
	return &NullablePluginInstanceUserRequest{value: val, isSet: true}
}

func (v NullablePluginInstanceUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginInstanceUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


