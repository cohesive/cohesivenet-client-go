/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateInterfaceAddressRequest struct for UpdateInterfaceAddressRequest
type UpdateInterfaceAddressRequest struct {
	Label *string `json:"label,omitempty"`
	Description *string `json:"description,omitempty"`
	IpInternal *string `json:"ip_internal,omitempty"`
	IpExternal NullableString `json:"ip_external,omitempty"`
	// between 1 and 32 inclusive
	MaskBits *int32 `json:"mask_bits,omitempty"`
	Gateway NullableString `json:"gateway,omitempty"`
}

// NewUpdateInterfaceAddressRequest instantiates a new UpdateInterfaceAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInterfaceAddressRequest() *UpdateInterfaceAddressRequest {
	this := UpdateInterfaceAddressRequest{}
	var maskBits int32 = 32
	this.MaskBits = &maskBits
	return &this
}

// NewUpdateInterfaceAddressRequestWithDefaults instantiates a new UpdateInterfaceAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInterfaceAddressRequestWithDefaults() *UpdateInterfaceAddressRequest {
	this := UpdateInterfaceAddressRequest{}
	var maskBits int32 = 32
	this.MaskBits = &maskBits
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *UpdateInterfaceAddressRequest) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInterfaceAddressRequest) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *UpdateInterfaceAddressRequest) SetLabel(v string) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateInterfaceAddressRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInterfaceAddressRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateInterfaceAddressRequest) SetDescription(v string) {
	o.Description = &v
}

// GetIpInternal returns the IpInternal field value if set, zero value otherwise.
func (o *UpdateInterfaceAddressRequest) GetIpInternal() string {
	if o == nil || o.IpInternal == nil {
		var ret string
		return ret
	}
	return *o.IpInternal
}

// GetIpInternalOk returns a tuple with the IpInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInterfaceAddressRequest) GetIpInternalOk() (*string, bool) {
	if o == nil || o.IpInternal == nil {
		return nil, false
	}
	return o.IpInternal, true
}

// HasIpInternal returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasIpInternal() bool {
	if o != nil && o.IpInternal != nil {
		return true
	}

	return false
}

// SetIpInternal gets a reference to the given string and assigns it to the IpInternal field.
func (o *UpdateInterfaceAddressRequest) SetIpInternal(v string) {
	o.IpInternal = &v
}

// GetIpExternal returns the IpExternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateInterfaceAddressRequest) GetIpExternal() string {
	if o == nil || o.IpExternal.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpExternal.Get()
}

// GetIpExternalOk returns a tuple with the IpExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateInterfaceAddressRequest) GetIpExternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpExternal.Get(), o.IpExternal.IsSet()
}

// HasIpExternal returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasIpExternal() bool {
	if o != nil && o.IpExternal.IsSet() {
		return true
	}

	return false
}

// SetIpExternal gets a reference to the given NullableString and assigns it to the IpExternal field.
func (o *UpdateInterfaceAddressRequest) SetIpExternal(v string) {
	o.IpExternal.Set(&v)
}
// SetIpExternalNil sets the value for IpExternal to be an explicit nil
func (o *UpdateInterfaceAddressRequest) SetIpExternalNil() {
	o.IpExternal.Set(nil)
}

// UnsetIpExternal ensures that no value is present for IpExternal, not even an explicit nil
func (o *UpdateInterfaceAddressRequest) UnsetIpExternal() {
	o.IpExternal.Unset()
}

// GetMaskBits returns the MaskBits field value if set, zero value otherwise.
func (o *UpdateInterfaceAddressRequest) GetMaskBits() int32 {
	if o == nil || o.MaskBits == nil {
		var ret int32
		return ret
	}
	return *o.MaskBits
}

// GetMaskBitsOk returns a tuple with the MaskBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInterfaceAddressRequest) GetMaskBitsOk() (*int32, bool) {
	if o == nil || o.MaskBits == nil {
		return nil, false
	}
	return o.MaskBits, true
}

// HasMaskBits returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasMaskBits() bool {
	if o != nil && o.MaskBits != nil {
		return true
	}

	return false
}

// SetMaskBits gets a reference to the given int32 and assigns it to the MaskBits field.
func (o *UpdateInterfaceAddressRequest) SetMaskBits(v int32) {
	o.MaskBits = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateInterfaceAddressRequest) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateInterfaceAddressRequest) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *UpdateInterfaceAddressRequest) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *UpdateInterfaceAddressRequest) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *UpdateInterfaceAddressRequest) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *UpdateInterfaceAddressRequest) UnsetGateway() {
	o.Gateway.Unset()
}

func (o UpdateInterfaceAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IpInternal != nil {
		toSerialize["ip_internal"] = o.IpInternal
	}
	if o.IpExternal.IsSet() {
		toSerialize["ip_external"] = o.IpExternal.Get()
	}
	if o.MaskBits != nil {
		toSerialize["mask_bits"] = o.MaskBits
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateInterfaceAddressRequest struct {
	value *UpdateInterfaceAddressRequest
	isSet bool
}

func (v NullableUpdateInterfaceAddressRequest) Get() *UpdateInterfaceAddressRequest {
	return v.value
}

func (v *NullableUpdateInterfaceAddressRequest) Set(val *UpdateInterfaceAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInterfaceAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInterfaceAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInterfaceAddressRequest(val *UpdateInterfaceAddressRequest) *NullableUpdateInterfaceAddressRequest {
	return &NullableUpdateInterfaceAddressRequest{value: val, isSet: true}
}

func (v NullableUpdateInterfaceAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInterfaceAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


