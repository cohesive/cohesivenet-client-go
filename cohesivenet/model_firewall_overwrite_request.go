/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// FirewallOverwriteRequest struct for FirewallOverwriteRequest
type FirewallOverwriteRequest struct {
	Rules []FirewallOverwriteRequestRule `json:"rules"`
}

// NewFirewallOverwriteRequest instantiates a new FirewallOverwriteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallOverwriteRequest(rules []FirewallOverwriteRequestRule) *FirewallOverwriteRequest {
	this := FirewallOverwriteRequest{}
	this.Rules = rules
	return &this
}

// NewFirewallOverwriteRequestWithDefaults instantiates a new FirewallOverwriteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallOverwriteRequestWithDefaults() *FirewallOverwriteRequest {
	this := FirewallOverwriteRequest{}
	return &this
}

// GetRules returns the Rules field value
func (o *FirewallOverwriteRequest) GetRules() []FirewallOverwriteRequestRule {
	if o == nil {
		var ret []FirewallOverwriteRequestRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *FirewallOverwriteRequest) GetRulesOk() (*[]FirewallOverwriteRequestRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *FirewallOverwriteRequest) SetRules(v []FirewallOverwriteRequestRule) {
	o.Rules = v
}

func (o FirewallOverwriteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallOverwriteRequest struct {
	value *FirewallOverwriteRequest
	isSet bool
}

func (v NullableFirewallOverwriteRequest) Get() *FirewallOverwriteRequest {
	return v.value
}

func (v *NullableFirewallOverwriteRequest) Set(val *FirewallOverwriteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallOverwriteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallOverwriteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallOverwriteRequest(val *FirewallOverwriteRequest) *NullableFirewallOverwriteRequest {
	return &NullableFirewallOverwriteRequest{value: val, isSet: true}
}

func (v NullableFirewallOverwriteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallOverwriteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


