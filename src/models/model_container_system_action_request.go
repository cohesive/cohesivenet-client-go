/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ContainerSystemActionRequest struct for ContainerSystemActionRequest
type ContainerSystemActionRequest struct {
	// argument to pass
	Action string `json:"action"`
}

// NewContainerSystemActionRequest instantiates a new ContainerSystemActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSystemActionRequest(action string) *ContainerSystemActionRequest {
	this := ContainerSystemActionRequest{}
	this.Action = action
	return &this
}

// NewContainerSystemActionRequestWithDefaults instantiates a new ContainerSystemActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSystemActionRequestWithDefaults() *ContainerSystemActionRequest {
	this := ContainerSystemActionRequest{}
	return &this
}

// GetAction returns the Action field value
func (o *ContainerSystemActionRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ContainerSystemActionRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ContainerSystemActionRequest) SetAction(v string) {
	o.Action = v
}

func (o ContainerSystemActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableContainerSystemActionRequest struct {
	value *ContainerSystemActionRequest
	isSet bool
}

func (v NullableContainerSystemActionRequest) Get() *ContainerSystemActionRequest {
	return v.value
}

func (v *NullableContainerSystemActionRequest) Set(val *ContainerSystemActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSystemActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSystemActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSystemActionRequest(val *ContainerSystemActionRequest) *NullableContainerSystemActionRequest {
	return &NullableContainerSystemActionRequest{value: val, isSet: true}
}

func (v NullableContainerSystemActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSystemActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


