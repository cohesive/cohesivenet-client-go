/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// UpdateContainerImageDetail struct for UpdateContainerImageDetail
type UpdateContainerImageDetail struct {
	Uuid *string `json:"uuid,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewUpdateContainerImageDetail instantiates a new UpdateContainerImageDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateContainerImageDetail() *UpdateContainerImageDetail {
	this := UpdateContainerImageDetail{}
	return &this
}

// NewUpdateContainerImageDetailWithDefaults instantiates a new UpdateContainerImageDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateContainerImageDetailWithDefaults() *UpdateContainerImageDetail {
	this := UpdateContainerImageDetail{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *UpdateContainerImageDetail) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateContainerImageDetail) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *UpdateContainerImageDetail) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *UpdateContainerImageDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateContainerImageDetail) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateContainerImageDetail) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateContainerImageDetail) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateContainerImageDetail) SetStatus(v string) {
	o.Status = &v
}

func (o UpdateContainerImageDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateContainerImageDetail struct {
	value *UpdateContainerImageDetail
	isSet bool
}

func (v NullableUpdateContainerImageDetail) Get() *UpdateContainerImageDetail {
	return v.value
}

func (v *NullableUpdateContainerImageDetail) Set(val *UpdateContainerImageDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateContainerImageDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateContainerImageDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateContainerImageDetail(val *UpdateContainerImageDetail) *NullableUpdateContainerImageDetail {
	return &NullableUpdateContainerImageDetail{value: val, isSet: true}
}

func (v NullableUpdateContainerImageDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateContainerImageDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


