/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PluginListResponse struct for PluginListResponse
type PluginListResponse struct {
	Response []Plugin `json:"response,omitempty"`
}

// NewPluginListResponse instantiates a new PluginListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginListResponse() *PluginListResponse {
	this := PluginListResponse{}
	return &this
}

// NewPluginListResponseWithDefaults instantiates a new PluginListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginListResponseWithDefaults() *PluginListResponse {
	this := PluginListResponse{}
	return &this
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *PluginListResponse) GetResponse() []Plugin {
	if o == nil || o.Response == nil {
		var ret []Plugin
		return ret
	}
	return o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginListResponse) GetResponseOk() ([]Plugin, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *PluginListResponse) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given []Plugin and assigns it to the Response field.
func (o *PluginListResponse) SetResponse(v []Plugin) {
	o.Response = v
}

func (o PluginListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	return json.Marshal(toSerialize)
}

type NullablePluginListResponse struct {
	value *PluginListResponse
	isSet bool
}

func (v NullablePluginListResponse) Get() *PluginListResponse {
	return v.value
}

func (v *NullablePluginListResponse) Set(val *PluginListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginListResponse(val *PluginListResponse) *NullablePluginListResponse {
	return &NullablePluginListResponse{value: val, isSet: true}
}

func (v NullablePluginListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


