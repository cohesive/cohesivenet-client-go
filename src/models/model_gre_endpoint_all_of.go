/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GREEndpointAllOf struct for GREEndpointAllOf
type GREEndpointAllOf struct {
	Id *int32 `json:"id,omitempty"`
	InterfaceId *int32 `json:"interface_id,omitempty"`
	IpExternal NullableString `json:"ip_external,omitempty"`
	Name *string `json:"name,omitempty"`
	// system or system_virtual
	InterfaceType *string `json:"interface_type,omitempty"`
	// Availability of interface, Up or Down
	Status *string `json:"status,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewGREEndpointAllOf instantiates a new GREEndpointAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGREEndpointAllOf() *GREEndpointAllOf {
	this := GREEndpointAllOf{}
	return &this
}

// NewGREEndpointAllOfWithDefaults instantiates a new GREEndpointAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGREEndpointAllOfWithDefaults() *GREEndpointAllOf {
	this := GREEndpointAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GREEndpointAllOf) SetId(v int32) {
	o.Id = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetInterfaceId() int32 {
	if o == nil || o.InterfaceId == nil {
		var ret int32
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetInterfaceIdOk() (*int32, bool) {
	if o == nil || o.InterfaceId == nil {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasInterfaceId() bool {
	if o != nil && o.InterfaceId != nil {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given int32 and assigns it to the InterfaceId field.
func (o *GREEndpointAllOf) SetInterfaceId(v int32) {
	o.InterfaceId = &v
}

// GetIpExternal returns the IpExternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpointAllOf) GetIpExternal() string {
	if o == nil || o.IpExternal.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpExternal.Get()
}

// GetIpExternalOk returns a tuple with the IpExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpointAllOf) GetIpExternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpExternal.Get(), o.IpExternal.IsSet()
}

// HasIpExternal returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasIpExternal() bool {
	if o != nil && o.IpExternal.IsSet() {
		return true
	}

	return false
}

// SetIpExternal gets a reference to the given NullableString and assigns it to the IpExternal field.
func (o *GREEndpointAllOf) SetIpExternal(v string) {
	o.IpExternal.Set(&v)
}
// SetIpExternalNil sets the value for IpExternal to be an explicit nil
func (o *GREEndpointAllOf) SetIpExternalNil() {
	o.IpExternal.Set(nil)
}

// UnsetIpExternal ensures that no value is present for IpExternal, not even an explicit nil
func (o *GREEndpointAllOf) UnsetIpExternal() {
	o.IpExternal.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GREEndpointAllOf) SetName(v string) {
	o.Name = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetInterfaceType() string {
	if o == nil || o.InterfaceType == nil {
		var ret string
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetInterfaceTypeOk() (*string, bool) {
	if o == nil || o.InterfaceType == nil {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasInterfaceType() bool {
	if o != nil && o.InterfaceType != nil {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given string and assigns it to the InterfaceType field.
func (o *GREEndpointAllOf) SetInterfaceType(v string) {
	o.InterfaceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GREEndpointAllOf) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GREEndpointAllOf) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpointAllOf) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GREEndpointAllOf) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GREEndpointAllOf) SetTags(v []string) {
	o.Tags = v
}

func (o GREEndpointAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InterfaceId != nil {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if o.IpExternal.IsSet() {
		toSerialize["ip_external"] = o.IpExternal.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InterfaceType != nil {
		toSerialize["interface_type"] = o.InterfaceType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableGREEndpointAllOf struct {
	value *GREEndpointAllOf
	isSet bool
}

func (v NullableGREEndpointAllOf) Get() *GREEndpointAllOf {
	return v.value
}

func (v *NullableGREEndpointAllOf) Set(val *GREEndpointAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGREEndpointAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGREEndpointAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGREEndpointAllOf(val *GREEndpointAllOf) *NullableGREEndpointAllOf {
	return &NullableGREEndpointAllOf{value: val, isSet: true}
}

func (v NullableGREEndpointAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGREEndpointAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


