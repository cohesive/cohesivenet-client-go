/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// FirewallFwsetDeleteRequest struct for FirewallFwsetDeleteRequest
type FirewallFwsetDeleteRequest struct {
	// Chained firewall rules seperated by \"\\n\"
	Rules *string `json:"rules,omitempty"`
	// Name of the Fwset. Must be valid chain that begins with one of the following: NETS_, PORTS_, LIST_. 
	Name *string `json:"name,omitempty"`
}

// NewFirewallFwsetDeleteRequest instantiates a new FirewallFwsetDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallFwsetDeleteRequest() *FirewallFwsetDeleteRequest {
	this := FirewallFwsetDeleteRequest{}
	return &this
}

// NewFirewallFwsetDeleteRequestWithDefaults instantiates a new FirewallFwsetDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallFwsetDeleteRequestWithDefaults() *FirewallFwsetDeleteRequest {
	this := FirewallFwsetDeleteRequest{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *FirewallFwsetDeleteRequest) GetRules() string {
	if o == nil || o.Rules == nil {
		var ret string
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwsetDeleteRequest) GetRulesOk() (*string, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *FirewallFwsetDeleteRequest) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given string and assigns it to the Rules field.
func (o *FirewallFwsetDeleteRequest) SetRules(v string) {
	o.Rules = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FirewallFwsetDeleteRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwsetDeleteRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FirewallFwsetDeleteRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FirewallFwsetDeleteRequest) SetName(v string) {
	o.Name = &v
}

func (o FirewallFwsetDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallFwsetDeleteRequest struct {
	value *FirewallFwsetDeleteRequest
	isSet bool
}

func (v NullableFirewallFwsetDeleteRequest) Get() *FirewallFwsetDeleteRequest {
	return v.value
}

func (v *NullableFirewallFwsetDeleteRequest) Set(val *FirewallFwsetDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallFwsetDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallFwsetDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallFwsetDeleteRequest(val *FirewallFwsetDeleteRequest) *NullableFirewallFwsetDeleteRequest {
	return &NullableFirewallFwsetDeleteRequest{value: val, isSet: true}
}

func (v NullableFirewallFwsetDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallFwsetDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


