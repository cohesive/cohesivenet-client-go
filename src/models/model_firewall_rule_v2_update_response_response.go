/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// FirewallRuleV2UpdateResponseResponse struct for FirewallRuleV2UpdateResponseResponse
type FirewallRuleV2UpdateResponseResponse struct {
	// unique random id
	Id *string `json:"id,omitempty"`
	// Unresolved rule
	Rule *string `json:"rule,omitempty"`
	// Rule with variables resolved
	RuleResolved *string `json:"rule_resolved,omitempty"`
	Table *string `json:"table,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Comment *string `json:"comment,omitempty"`
	LastResolved *string `json:"last_resolved,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// List of groups that this rule is in
	Groups []string `json:"groups,omitempty"`
	// The actuall firewall rules enforced at the operating system level
	OsRules []FirewallRuleV2OsRulesInner `json:"os_rules,omitempty"`
	Errors []string `json:"errors,omitempty"`
}

// NewFirewallRuleV2UpdateResponseResponse instantiates a new FirewallRuleV2UpdateResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleV2UpdateResponseResponse() *FirewallRuleV2UpdateResponseResponse {
	this := FirewallRuleV2UpdateResponseResponse{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// NewFirewallRuleV2UpdateResponseResponseWithDefaults instantiates a new FirewallRuleV2UpdateResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleV2UpdateResponseResponseWithDefaults() *FirewallRuleV2UpdateResponseResponse {
	this := FirewallRuleV2UpdateResponseResponse{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FirewallRuleV2UpdateResponseResponse) SetId(v string) {
	o.Id = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetRule() string {
	if o == nil || o.Rule == nil {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetRuleOk() (*string, bool) {
	if o == nil || o.Rule == nil {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasRule() bool {
	if o != nil && o.Rule != nil {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
func (o *FirewallRuleV2UpdateResponseResponse) SetRule(v string) {
	o.Rule = &v
}

// GetRuleResolved returns the RuleResolved field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetRuleResolved() string {
	if o == nil || o.RuleResolved == nil {
		var ret string
		return ret
	}
	return *o.RuleResolved
}

// GetRuleResolvedOk returns a tuple with the RuleResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetRuleResolvedOk() (*string, bool) {
	if o == nil || o.RuleResolved == nil {
		return nil, false
	}
	return o.RuleResolved, true
}

// HasRuleResolved returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasRuleResolved() bool {
	if o != nil && o.RuleResolved != nil {
		return true
	}

	return false
}

// SetRuleResolved gets a reference to the given string and assigns it to the RuleResolved field.
func (o *FirewallRuleV2UpdateResponseResponse) SetRuleResolved(v string) {
	o.RuleResolved = &v
}

// GetTable returns the Table field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetTable() string {
	if o == nil || o.Table == nil {
		var ret string
		return ret
	}
	return *o.Table
}

// GetTableOk returns a tuple with the Table field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetTableOk() (*string, bool) {
	if o == nil || o.Table == nil {
		return nil, false
	}
	return o.Table, true
}

// HasTable returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasTable() bool {
	if o != nil && o.Table != nil {
		return true
	}

	return false
}

// SetTable gets a reference to the given string and assigns it to the Table field.
func (o *FirewallRuleV2UpdateResponseResponse) SetTable(v string) {
	o.Table = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *FirewallRuleV2UpdateResponseResponse) SetPosition(v int32) {
	o.Position = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *FirewallRuleV2UpdateResponseResponse) SetComment(v string) {
	o.Comment = &v
}

// GetLastResolved returns the LastResolved field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetLastResolved() string {
	if o == nil || o.LastResolved == nil {
		var ret string
		return ret
	}
	return *o.LastResolved
}

// GetLastResolvedOk returns a tuple with the LastResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetLastResolvedOk() (*string, bool) {
	if o == nil || o.LastResolved == nil {
		return nil, false
	}
	return o.LastResolved, true
}

// HasLastResolved returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasLastResolved() bool {
	if o != nil && o.LastResolved != nil {
		return true
	}

	return false
}

// SetLastResolved gets a reference to the given string and assigns it to the LastResolved field.
func (o *FirewallRuleV2UpdateResponseResponse) SetLastResolved(v string) {
	o.LastResolved = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *FirewallRuleV2UpdateResponseResponse) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FirewallRuleV2UpdateResponseResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetGroupsOk() ([]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *FirewallRuleV2UpdateResponseResponse) SetGroups(v []string) {
	o.Groups = v
}

// GetOsRules returns the OsRules field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetOsRules() []FirewallRuleV2OsRulesInner {
	if o == nil || o.OsRules == nil {
		var ret []FirewallRuleV2OsRulesInner
		return ret
	}
	return o.OsRules
}

// GetOsRulesOk returns a tuple with the OsRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetOsRulesOk() ([]FirewallRuleV2OsRulesInner, bool) {
	if o == nil || o.OsRules == nil {
		return nil, false
	}
	return o.OsRules, true
}

// HasOsRules returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasOsRules() bool {
	if o != nil && o.OsRules != nil {
		return true
	}

	return false
}

// SetOsRules gets a reference to the given []FirewallRuleV2OsRulesInner and assigns it to the OsRules field.
func (o *FirewallRuleV2UpdateResponseResponse) SetOsRules(v []FirewallRuleV2OsRulesInner) {
	o.OsRules = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *FirewallRuleV2UpdateResponseResponse) GetErrors() []string {
	if o == nil || o.Errors == nil {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleV2UpdateResponseResponse) GetErrorsOk() ([]string, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *FirewallRuleV2UpdateResponseResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *FirewallRuleV2UpdateResponseResponse) SetErrors(v []string) {
	o.Errors = v
}

func (o FirewallRuleV2UpdateResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Rule != nil {
		toSerialize["rule"] = o.Rule
	}
	if o.RuleResolved != nil {
		toSerialize["rule_resolved"] = o.RuleResolved
	}
	if o.Table != nil {
		toSerialize["table"] = o.Table
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.LastResolved != nil {
		toSerialize["last_resolved"] = o.LastResolved
	}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.OsRules != nil {
		toSerialize["os_rules"] = o.OsRules
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallRuleV2UpdateResponseResponse struct {
	value *FirewallRuleV2UpdateResponseResponse
	isSet bool
}

func (v NullableFirewallRuleV2UpdateResponseResponse) Get() *FirewallRuleV2UpdateResponseResponse {
	return v.value
}

func (v *NullableFirewallRuleV2UpdateResponseResponse) Set(val *FirewallRuleV2UpdateResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleV2UpdateResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleV2UpdateResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleV2UpdateResponseResponse(val *FirewallRuleV2UpdateResponseResponse) *NullableFirewallRuleV2UpdateResponseResponse {
	return &NullableFirewallRuleV2UpdateResponseResponse{value: val, isSet: true}
}

func (v NullableFirewallRuleV2UpdateResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleV2UpdateResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


