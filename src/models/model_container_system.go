/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ContainerSystem struct for ContainerSystem
type ContainerSystem struct {
	ContainerSystemRunning *bool `json:"container_system_running,omitempty"`
	ImagesLimit *int32 `json:"images_limit,omitempty"`
	ImagesStored *int32 `json:"images_stored,omitempty"`
	ContainersLimit *int32 `json:"containers_limit,omitempty"`
	ContainersActive *int32 `json:"containers_active,omitempty"`
	ContainerNetwork *string `json:"container_network,omitempty"`
}

// NewContainerSystem instantiates a new ContainerSystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSystem() *ContainerSystem {
	this := ContainerSystem{}
	return &this
}

// NewContainerSystemWithDefaults instantiates a new ContainerSystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSystemWithDefaults() *ContainerSystem {
	this := ContainerSystem{}
	return &this
}

// GetContainerSystemRunning returns the ContainerSystemRunning field value if set, zero value otherwise.
func (o *ContainerSystem) GetContainerSystemRunning() bool {
	if o == nil || o.ContainerSystemRunning == nil {
		var ret bool
		return ret
	}
	return *o.ContainerSystemRunning
}

// GetContainerSystemRunningOk returns a tuple with the ContainerSystemRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetContainerSystemRunningOk() (*bool, bool) {
	if o == nil || o.ContainerSystemRunning == nil {
		return nil, false
	}
	return o.ContainerSystemRunning, true
}

// HasContainerSystemRunning returns a boolean if a field has been set.
func (o *ContainerSystem) HasContainerSystemRunning() bool {
	if o != nil && o.ContainerSystemRunning != nil {
		return true
	}

	return false
}

// SetContainerSystemRunning gets a reference to the given bool and assigns it to the ContainerSystemRunning field.
func (o *ContainerSystem) SetContainerSystemRunning(v bool) {
	o.ContainerSystemRunning = &v
}

// GetImagesLimit returns the ImagesLimit field value if set, zero value otherwise.
func (o *ContainerSystem) GetImagesLimit() int32 {
	if o == nil || o.ImagesLimit == nil {
		var ret int32
		return ret
	}
	return *o.ImagesLimit
}

// GetImagesLimitOk returns a tuple with the ImagesLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetImagesLimitOk() (*int32, bool) {
	if o == nil || o.ImagesLimit == nil {
		return nil, false
	}
	return o.ImagesLimit, true
}

// HasImagesLimit returns a boolean if a field has been set.
func (o *ContainerSystem) HasImagesLimit() bool {
	if o != nil && o.ImagesLimit != nil {
		return true
	}

	return false
}

// SetImagesLimit gets a reference to the given int32 and assigns it to the ImagesLimit field.
func (o *ContainerSystem) SetImagesLimit(v int32) {
	o.ImagesLimit = &v
}

// GetImagesStored returns the ImagesStored field value if set, zero value otherwise.
func (o *ContainerSystem) GetImagesStored() int32 {
	if o == nil || o.ImagesStored == nil {
		var ret int32
		return ret
	}
	return *o.ImagesStored
}

// GetImagesStoredOk returns a tuple with the ImagesStored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetImagesStoredOk() (*int32, bool) {
	if o == nil || o.ImagesStored == nil {
		return nil, false
	}
	return o.ImagesStored, true
}

// HasImagesStored returns a boolean if a field has been set.
func (o *ContainerSystem) HasImagesStored() bool {
	if o != nil && o.ImagesStored != nil {
		return true
	}

	return false
}

// SetImagesStored gets a reference to the given int32 and assigns it to the ImagesStored field.
func (o *ContainerSystem) SetImagesStored(v int32) {
	o.ImagesStored = &v
}

// GetContainersLimit returns the ContainersLimit field value if set, zero value otherwise.
func (o *ContainerSystem) GetContainersLimit() int32 {
	if o == nil || o.ContainersLimit == nil {
		var ret int32
		return ret
	}
	return *o.ContainersLimit
}

// GetContainersLimitOk returns a tuple with the ContainersLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetContainersLimitOk() (*int32, bool) {
	if o == nil || o.ContainersLimit == nil {
		return nil, false
	}
	return o.ContainersLimit, true
}

// HasContainersLimit returns a boolean if a field has been set.
func (o *ContainerSystem) HasContainersLimit() bool {
	if o != nil && o.ContainersLimit != nil {
		return true
	}

	return false
}

// SetContainersLimit gets a reference to the given int32 and assigns it to the ContainersLimit field.
func (o *ContainerSystem) SetContainersLimit(v int32) {
	o.ContainersLimit = &v
}

// GetContainersActive returns the ContainersActive field value if set, zero value otherwise.
func (o *ContainerSystem) GetContainersActive() int32 {
	if o == nil || o.ContainersActive == nil {
		var ret int32
		return ret
	}
	return *o.ContainersActive
}

// GetContainersActiveOk returns a tuple with the ContainersActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetContainersActiveOk() (*int32, bool) {
	if o == nil || o.ContainersActive == nil {
		return nil, false
	}
	return o.ContainersActive, true
}

// HasContainersActive returns a boolean if a field has been set.
func (o *ContainerSystem) HasContainersActive() bool {
	if o != nil && o.ContainersActive != nil {
		return true
	}

	return false
}

// SetContainersActive gets a reference to the given int32 and assigns it to the ContainersActive field.
func (o *ContainerSystem) SetContainersActive(v int32) {
	o.ContainersActive = &v
}

// GetContainerNetwork returns the ContainerNetwork field value if set, zero value otherwise.
func (o *ContainerSystem) GetContainerNetwork() string {
	if o == nil || o.ContainerNetwork == nil {
		var ret string
		return ret
	}
	return *o.ContainerNetwork
}

// GetContainerNetworkOk returns a tuple with the ContainerNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystem) GetContainerNetworkOk() (*string, bool) {
	if o == nil || o.ContainerNetwork == nil {
		return nil, false
	}
	return o.ContainerNetwork, true
}

// HasContainerNetwork returns a boolean if a field has been set.
func (o *ContainerSystem) HasContainerNetwork() bool {
	if o != nil && o.ContainerNetwork != nil {
		return true
	}

	return false
}

// SetContainerNetwork gets a reference to the given string and assigns it to the ContainerNetwork field.
func (o *ContainerSystem) SetContainerNetwork(v string) {
	o.ContainerNetwork = &v
}

func (o ContainerSystem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerSystemRunning != nil {
		toSerialize["container_system_running"] = o.ContainerSystemRunning
	}
	if o.ImagesLimit != nil {
		toSerialize["images_limit"] = o.ImagesLimit
	}
	if o.ImagesStored != nil {
		toSerialize["images_stored"] = o.ImagesStored
	}
	if o.ContainersLimit != nil {
		toSerialize["containers_limit"] = o.ContainersLimit
	}
	if o.ContainersActive != nil {
		toSerialize["containers_active"] = o.ContainersActive
	}
	if o.ContainerNetwork != nil {
		toSerialize["container_network"] = o.ContainerNetwork
	}
	return json.Marshal(toSerialize)
}

type NullableContainerSystem struct {
	value *ContainerSystem
	isSet bool
}

func (v NullableContainerSystem) Get() *ContainerSystem {
	return v.value
}

func (v *NullableContainerSystem) Set(val *ContainerSystem) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSystem(val *ContainerSystem) *NullableContainerSystem {
	return &NullableContainerSystem{value: val, isSet: true}
}

func (v NullableContainerSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


