/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ContainerSystemStatus struct for ContainerSystemStatus
type ContainerSystemStatus struct {
	// Local network in CIDR notation container system is running on
	Network *string `json:"network,omitempty"`
	Running *ContainerSystemStatusRunning `json:"running,omitempty"`
}

// NewContainerSystemStatus instantiates a new ContainerSystemStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSystemStatus() *ContainerSystemStatus {
	this := ContainerSystemStatus{}
	return &this
}

// NewContainerSystemStatusWithDefaults instantiates a new ContainerSystemStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSystemStatusWithDefaults() *ContainerSystemStatus {
	this := ContainerSystemStatus{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *ContainerSystemStatus) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystemStatus) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *ContainerSystemStatus) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *ContainerSystemStatus) SetNetwork(v string) {
	o.Network = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *ContainerSystemStatus) GetRunning() ContainerSystemStatusRunning {
	if o == nil || o.Running == nil {
		var ret ContainerSystemStatusRunning
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystemStatus) GetRunningOk() (*ContainerSystemStatusRunning, bool) {
	if o == nil || o.Running == nil {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *ContainerSystemStatus) HasRunning() bool {
	if o != nil && o.Running != nil {
		return true
	}

	return false
}

// SetRunning gets a reference to the given ContainerSystemStatusRunning and assigns it to the Running field.
func (o *ContainerSystemStatus) SetRunning(v ContainerSystemStatusRunning) {
	o.Running = &v
}

func (o ContainerSystemStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.Running != nil {
		toSerialize["running"] = o.Running
	}
	return json.Marshal(toSerialize)
}

type NullableContainerSystemStatus struct {
	value *ContainerSystemStatus
	isSet bool
}

func (v NullableContainerSystemStatus) Get() *ContainerSystemStatus {
	return v.value
}

func (v *NullableContainerSystemStatus) Set(val *ContainerSystemStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSystemStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSystemStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSystemStatus(val *ContainerSystemStatus) *NullableContainerSystemStatus {
	return &NullableContainerSystemStatus{value: val, isSet: true}
}

func (v NullableContainerSystemStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSystemStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


