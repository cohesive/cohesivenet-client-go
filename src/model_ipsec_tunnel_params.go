/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// IpsecTunnelParams struct for IpsecTunnelParams
type IpsecTunnelParams struct {
	Phase2 *string `json:"phase2,omitempty"`
	OutboundSpi *string `json:"outbound_spi,omitempty"`
	InboundSpi *string `json:"inbound_spi,omitempty"`
	BytesIn *string `json:"bytes_in,omitempty"`
	BytesOut *string `json:"bytes_out,omitempty"`
	EspTimeRemaining *string `json:"esp_time_remaining,omitempty"`
	EspPort *string `json:"esp_port,omitempty"`
	Phase2Algo *string `json:"phase2_algo,omitempty"`
	Phase2Hash *string `json:"phase2_hash,omitempty"`
	NatT *string `json:"nat_t,omitempty"`
	Dpd *string `json:"dpd,omitempty"`
	PfsDhGroup NullableString `json:"pfs_dh_group,omitempty"`
	Phase1 *string `json:"phase1,omitempty"`
	IsakmpPort *string `json:"isakmp_port,omitempty"`
	IsakmpTimeRemaining *string `json:"isakmp_time_remaining,omitempty"`
	LastDpd *string `json:"last_dpd,omitempty"`
	Phase1Cipher NullableString `json:"phase1_cipher,omitempty"`
	Phase1Prf NullableString `json:"phase1_prf,omitempty"`
	Phase1DhGroup NullableString `json:"phase1_dh_group,omitempty"`
	IkeVersion *string `json:"ike_version,omitempty"`
}

// NewIpsecTunnelParams instantiates a new IpsecTunnelParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpsecTunnelParams() *IpsecTunnelParams {
	this := IpsecTunnelParams{}
	return &this
}

// NewIpsecTunnelParamsWithDefaults instantiates a new IpsecTunnelParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpsecTunnelParamsWithDefaults() *IpsecTunnelParams {
	this := IpsecTunnelParams{}
	return &this
}

// GetPhase2 returns the Phase2 field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetPhase2() string {
	if o == nil || o.Phase2 == nil {
		var ret string
		return ret
	}
	return *o.Phase2
}

// GetPhase2Ok returns a tuple with the Phase2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetPhase2Ok() (*string, bool) {
	if o == nil || o.Phase2 == nil {
		return nil, false
	}
	return o.Phase2, true
}

// HasPhase2 returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase2() bool {
	if o != nil && o.Phase2 != nil {
		return true
	}

	return false
}

// SetPhase2 gets a reference to the given string and assigns it to the Phase2 field.
func (o *IpsecTunnelParams) SetPhase2(v string) {
	o.Phase2 = &v
}

// GetOutboundSpi returns the OutboundSpi field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetOutboundSpi() string {
	if o == nil || o.OutboundSpi == nil {
		var ret string
		return ret
	}
	return *o.OutboundSpi
}

// GetOutboundSpiOk returns a tuple with the OutboundSpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetOutboundSpiOk() (*string, bool) {
	if o == nil || o.OutboundSpi == nil {
		return nil, false
	}
	return o.OutboundSpi, true
}

// HasOutboundSpi returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasOutboundSpi() bool {
	if o != nil && o.OutboundSpi != nil {
		return true
	}

	return false
}

// SetOutboundSpi gets a reference to the given string and assigns it to the OutboundSpi field.
func (o *IpsecTunnelParams) SetOutboundSpi(v string) {
	o.OutboundSpi = &v
}

// GetInboundSpi returns the InboundSpi field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetInboundSpi() string {
	if o == nil || o.InboundSpi == nil {
		var ret string
		return ret
	}
	return *o.InboundSpi
}

// GetInboundSpiOk returns a tuple with the InboundSpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetInboundSpiOk() (*string, bool) {
	if o == nil || o.InboundSpi == nil {
		return nil, false
	}
	return o.InboundSpi, true
}

// HasInboundSpi returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasInboundSpi() bool {
	if o != nil && o.InboundSpi != nil {
		return true
	}

	return false
}

// SetInboundSpi gets a reference to the given string and assigns it to the InboundSpi field.
func (o *IpsecTunnelParams) SetInboundSpi(v string) {
	o.InboundSpi = &v
}

// GetBytesIn returns the BytesIn field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetBytesIn() string {
	if o == nil || o.BytesIn == nil {
		var ret string
		return ret
	}
	return *o.BytesIn
}

// GetBytesInOk returns a tuple with the BytesIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetBytesInOk() (*string, bool) {
	if o == nil || o.BytesIn == nil {
		return nil, false
	}
	return o.BytesIn, true
}

// HasBytesIn returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasBytesIn() bool {
	if o != nil && o.BytesIn != nil {
		return true
	}

	return false
}

// SetBytesIn gets a reference to the given string and assigns it to the BytesIn field.
func (o *IpsecTunnelParams) SetBytesIn(v string) {
	o.BytesIn = &v
}

// GetBytesOut returns the BytesOut field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetBytesOut() string {
	if o == nil || o.BytesOut == nil {
		var ret string
		return ret
	}
	return *o.BytesOut
}

// GetBytesOutOk returns a tuple with the BytesOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetBytesOutOk() (*string, bool) {
	if o == nil || o.BytesOut == nil {
		return nil, false
	}
	return o.BytesOut, true
}

// HasBytesOut returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasBytesOut() bool {
	if o != nil && o.BytesOut != nil {
		return true
	}

	return false
}

// SetBytesOut gets a reference to the given string and assigns it to the BytesOut field.
func (o *IpsecTunnelParams) SetBytesOut(v string) {
	o.BytesOut = &v
}

// GetEspTimeRemaining returns the EspTimeRemaining field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetEspTimeRemaining() string {
	if o == nil || o.EspTimeRemaining == nil {
		var ret string
		return ret
	}
	return *o.EspTimeRemaining
}

// GetEspTimeRemainingOk returns a tuple with the EspTimeRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetEspTimeRemainingOk() (*string, bool) {
	if o == nil || o.EspTimeRemaining == nil {
		return nil, false
	}
	return o.EspTimeRemaining, true
}

// HasEspTimeRemaining returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasEspTimeRemaining() bool {
	if o != nil && o.EspTimeRemaining != nil {
		return true
	}

	return false
}

// SetEspTimeRemaining gets a reference to the given string and assigns it to the EspTimeRemaining field.
func (o *IpsecTunnelParams) SetEspTimeRemaining(v string) {
	o.EspTimeRemaining = &v
}

// GetEspPort returns the EspPort field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetEspPort() string {
	if o == nil || o.EspPort == nil {
		var ret string
		return ret
	}
	return *o.EspPort
}

// GetEspPortOk returns a tuple with the EspPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetEspPortOk() (*string, bool) {
	if o == nil || o.EspPort == nil {
		return nil, false
	}
	return o.EspPort, true
}

// HasEspPort returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasEspPort() bool {
	if o != nil && o.EspPort != nil {
		return true
	}

	return false
}

// SetEspPort gets a reference to the given string and assigns it to the EspPort field.
func (o *IpsecTunnelParams) SetEspPort(v string) {
	o.EspPort = &v
}

// GetPhase2Algo returns the Phase2Algo field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetPhase2Algo() string {
	if o == nil || o.Phase2Algo == nil {
		var ret string
		return ret
	}
	return *o.Phase2Algo
}

// GetPhase2AlgoOk returns a tuple with the Phase2Algo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetPhase2AlgoOk() (*string, bool) {
	if o == nil || o.Phase2Algo == nil {
		return nil, false
	}
	return o.Phase2Algo, true
}

// HasPhase2Algo returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase2Algo() bool {
	if o != nil && o.Phase2Algo != nil {
		return true
	}

	return false
}

// SetPhase2Algo gets a reference to the given string and assigns it to the Phase2Algo field.
func (o *IpsecTunnelParams) SetPhase2Algo(v string) {
	o.Phase2Algo = &v
}

// GetPhase2Hash returns the Phase2Hash field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetPhase2Hash() string {
	if o == nil || o.Phase2Hash == nil {
		var ret string
		return ret
	}
	return *o.Phase2Hash
}

// GetPhase2HashOk returns a tuple with the Phase2Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetPhase2HashOk() (*string, bool) {
	if o == nil || o.Phase2Hash == nil {
		return nil, false
	}
	return o.Phase2Hash, true
}

// HasPhase2Hash returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase2Hash() bool {
	if o != nil && o.Phase2Hash != nil {
		return true
	}

	return false
}

// SetPhase2Hash gets a reference to the given string and assigns it to the Phase2Hash field.
func (o *IpsecTunnelParams) SetPhase2Hash(v string) {
	o.Phase2Hash = &v
}

// GetNatT returns the NatT field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetNatT() string {
	if o == nil || o.NatT == nil {
		var ret string
		return ret
	}
	return *o.NatT
}

// GetNatTOk returns a tuple with the NatT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetNatTOk() (*string, bool) {
	if o == nil || o.NatT == nil {
		return nil, false
	}
	return o.NatT, true
}

// HasNatT returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasNatT() bool {
	if o != nil && o.NatT != nil {
		return true
	}

	return false
}

// SetNatT gets a reference to the given string and assigns it to the NatT field.
func (o *IpsecTunnelParams) SetNatT(v string) {
	o.NatT = &v
}

// GetDpd returns the Dpd field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetDpd() string {
	if o == nil || o.Dpd == nil {
		var ret string
		return ret
	}
	return *o.Dpd
}

// GetDpdOk returns a tuple with the Dpd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetDpdOk() (*string, bool) {
	if o == nil || o.Dpd == nil {
		return nil, false
	}
	return o.Dpd, true
}

// HasDpd returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasDpd() bool {
	if o != nil && o.Dpd != nil {
		return true
	}

	return false
}

// SetDpd gets a reference to the given string and assigns it to the Dpd field.
func (o *IpsecTunnelParams) SetDpd(v string) {
	o.Dpd = &v
}

// GetPfsDhGroup returns the PfsDhGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpsecTunnelParams) GetPfsDhGroup() string {
	if o == nil || o.PfsDhGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.PfsDhGroup.Get()
}

// GetPfsDhGroupOk returns a tuple with the PfsDhGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpsecTunnelParams) GetPfsDhGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PfsDhGroup.Get(), o.PfsDhGroup.IsSet()
}

// HasPfsDhGroup returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPfsDhGroup() bool {
	if o != nil && o.PfsDhGroup.IsSet() {
		return true
	}

	return false
}

// SetPfsDhGroup gets a reference to the given NullableString and assigns it to the PfsDhGroup field.
func (o *IpsecTunnelParams) SetPfsDhGroup(v string) {
	o.PfsDhGroup.Set(&v)
}
// SetPfsDhGroupNil sets the value for PfsDhGroup to be an explicit nil
func (o *IpsecTunnelParams) SetPfsDhGroupNil() {
	o.PfsDhGroup.Set(nil)
}

// UnsetPfsDhGroup ensures that no value is present for PfsDhGroup, not even an explicit nil
func (o *IpsecTunnelParams) UnsetPfsDhGroup() {
	o.PfsDhGroup.Unset()
}

// GetPhase1 returns the Phase1 field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetPhase1() string {
	if o == nil || o.Phase1 == nil {
		var ret string
		return ret
	}
	return *o.Phase1
}

// GetPhase1Ok returns a tuple with the Phase1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetPhase1Ok() (*string, bool) {
	if o == nil || o.Phase1 == nil {
		return nil, false
	}
	return o.Phase1, true
}

// HasPhase1 returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase1() bool {
	if o != nil && o.Phase1 != nil {
		return true
	}

	return false
}

// SetPhase1 gets a reference to the given string and assigns it to the Phase1 field.
func (o *IpsecTunnelParams) SetPhase1(v string) {
	o.Phase1 = &v
}

// GetIsakmpPort returns the IsakmpPort field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetIsakmpPort() string {
	if o == nil || o.IsakmpPort == nil {
		var ret string
		return ret
	}
	return *o.IsakmpPort
}

// GetIsakmpPortOk returns a tuple with the IsakmpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetIsakmpPortOk() (*string, bool) {
	if o == nil || o.IsakmpPort == nil {
		return nil, false
	}
	return o.IsakmpPort, true
}

// HasIsakmpPort returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasIsakmpPort() bool {
	if o != nil && o.IsakmpPort != nil {
		return true
	}

	return false
}

// SetIsakmpPort gets a reference to the given string and assigns it to the IsakmpPort field.
func (o *IpsecTunnelParams) SetIsakmpPort(v string) {
	o.IsakmpPort = &v
}

// GetIsakmpTimeRemaining returns the IsakmpTimeRemaining field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetIsakmpTimeRemaining() string {
	if o == nil || o.IsakmpTimeRemaining == nil {
		var ret string
		return ret
	}
	return *o.IsakmpTimeRemaining
}

// GetIsakmpTimeRemainingOk returns a tuple with the IsakmpTimeRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetIsakmpTimeRemainingOk() (*string, bool) {
	if o == nil || o.IsakmpTimeRemaining == nil {
		return nil, false
	}
	return o.IsakmpTimeRemaining, true
}

// HasIsakmpTimeRemaining returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasIsakmpTimeRemaining() bool {
	if o != nil && o.IsakmpTimeRemaining != nil {
		return true
	}

	return false
}

// SetIsakmpTimeRemaining gets a reference to the given string and assigns it to the IsakmpTimeRemaining field.
func (o *IpsecTunnelParams) SetIsakmpTimeRemaining(v string) {
	o.IsakmpTimeRemaining = &v
}

// GetLastDpd returns the LastDpd field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetLastDpd() string {
	if o == nil || o.LastDpd == nil {
		var ret string
		return ret
	}
	return *o.LastDpd
}

// GetLastDpdOk returns a tuple with the LastDpd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetLastDpdOk() (*string, bool) {
	if o == nil || o.LastDpd == nil {
		return nil, false
	}
	return o.LastDpd, true
}

// HasLastDpd returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasLastDpd() bool {
	if o != nil && o.LastDpd != nil {
		return true
	}

	return false
}

// SetLastDpd gets a reference to the given string and assigns it to the LastDpd field.
func (o *IpsecTunnelParams) SetLastDpd(v string) {
	o.LastDpd = &v
}

// GetPhase1Cipher returns the Phase1Cipher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpsecTunnelParams) GetPhase1Cipher() string {
	if o == nil || o.Phase1Cipher.Get() == nil {
		var ret string
		return ret
	}
	return *o.Phase1Cipher.Get()
}

// GetPhase1CipherOk returns a tuple with the Phase1Cipher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpsecTunnelParams) GetPhase1CipherOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase1Cipher.Get(), o.Phase1Cipher.IsSet()
}

// HasPhase1Cipher returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase1Cipher() bool {
	if o != nil && o.Phase1Cipher.IsSet() {
		return true
	}

	return false
}

// SetPhase1Cipher gets a reference to the given NullableString and assigns it to the Phase1Cipher field.
func (o *IpsecTunnelParams) SetPhase1Cipher(v string) {
	o.Phase1Cipher.Set(&v)
}
// SetPhase1CipherNil sets the value for Phase1Cipher to be an explicit nil
func (o *IpsecTunnelParams) SetPhase1CipherNil() {
	o.Phase1Cipher.Set(nil)
}

// UnsetPhase1Cipher ensures that no value is present for Phase1Cipher, not even an explicit nil
func (o *IpsecTunnelParams) UnsetPhase1Cipher() {
	o.Phase1Cipher.Unset()
}

// GetPhase1Prf returns the Phase1Prf field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpsecTunnelParams) GetPhase1Prf() string {
	if o == nil || o.Phase1Prf.Get() == nil {
		var ret string
		return ret
	}
	return *o.Phase1Prf.Get()
}

// GetPhase1PrfOk returns a tuple with the Phase1Prf field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpsecTunnelParams) GetPhase1PrfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase1Prf.Get(), o.Phase1Prf.IsSet()
}

// HasPhase1Prf returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase1Prf() bool {
	if o != nil && o.Phase1Prf.IsSet() {
		return true
	}

	return false
}

// SetPhase1Prf gets a reference to the given NullableString and assigns it to the Phase1Prf field.
func (o *IpsecTunnelParams) SetPhase1Prf(v string) {
	o.Phase1Prf.Set(&v)
}
// SetPhase1PrfNil sets the value for Phase1Prf to be an explicit nil
func (o *IpsecTunnelParams) SetPhase1PrfNil() {
	o.Phase1Prf.Set(nil)
}

// UnsetPhase1Prf ensures that no value is present for Phase1Prf, not even an explicit nil
func (o *IpsecTunnelParams) UnsetPhase1Prf() {
	o.Phase1Prf.Unset()
}

// GetPhase1DhGroup returns the Phase1DhGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpsecTunnelParams) GetPhase1DhGroup() string {
	if o == nil || o.Phase1DhGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.Phase1DhGroup.Get()
}

// GetPhase1DhGroupOk returns a tuple with the Phase1DhGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpsecTunnelParams) GetPhase1DhGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phase1DhGroup.Get(), o.Phase1DhGroup.IsSet()
}

// HasPhase1DhGroup returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasPhase1DhGroup() bool {
	if o != nil && o.Phase1DhGroup.IsSet() {
		return true
	}

	return false
}

// SetPhase1DhGroup gets a reference to the given NullableString and assigns it to the Phase1DhGroup field.
func (o *IpsecTunnelParams) SetPhase1DhGroup(v string) {
	o.Phase1DhGroup.Set(&v)
}
// SetPhase1DhGroupNil sets the value for Phase1DhGroup to be an explicit nil
func (o *IpsecTunnelParams) SetPhase1DhGroupNil() {
	o.Phase1DhGroup.Set(nil)
}

// UnsetPhase1DhGroup ensures that no value is present for Phase1DhGroup, not even an explicit nil
func (o *IpsecTunnelParams) UnsetPhase1DhGroup() {
	o.Phase1DhGroup.Unset()
}

// GetIkeVersion returns the IkeVersion field value if set, zero value otherwise.
func (o *IpsecTunnelParams) GetIkeVersion() string {
	if o == nil || o.IkeVersion == nil {
		var ret string
		return ret
	}
	return *o.IkeVersion
}

// GetIkeVersionOk returns a tuple with the IkeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpsecTunnelParams) GetIkeVersionOk() (*string, bool) {
	if o == nil || o.IkeVersion == nil {
		return nil, false
	}
	return o.IkeVersion, true
}

// HasIkeVersion returns a boolean if a field has been set.
func (o *IpsecTunnelParams) HasIkeVersion() bool {
	if o != nil && o.IkeVersion != nil {
		return true
	}

	return false
}

// SetIkeVersion gets a reference to the given string and assigns it to the IkeVersion field.
func (o *IpsecTunnelParams) SetIkeVersion(v string) {
	o.IkeVersion = &v
}

func (o IpsecTunnelParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Phase2 != nil {
		toSerialize["phase2"] = o.Phase2
	}
	if o.OutboundSpi != nil {
		toSerialize["outbound_spi"] = o.OutboundSpi
	}
	if o.InboundSpi != nil {
		toSerialize["inbound_spi"] = o.InboundSpi
	}
	if o.BytesIn != nil {
		toSerialize["bytes_in"] = o.BytesIn
	}
	if o.BytesOut != nil {
		toSerialize["bytes_out"] = o.BytesOut
	}
	if o.EspTimeRemaining != nil {
		toSerialize["esp_time_remaining"] = o.EspTimeRemaining
	}
	if o.EspPort != nil {
		toSerialize["esp_port"] = o.EspPort
	}
	if o.Phase2Algo != nil {
		toSerialize["phase2_algo"] = o.Phase2Algo
	}
	if o.Phase2Hash != nil {
		toSerialize["phase2_hash"] = o.Phase2Hash
	}
	if o.NatT != nil {
		toSerialize["nat_t"] = o.NatT
	}
	if o.Dpd != nil {
		toSerialize["dpd"] = o.Dpd
	}
	if o.PfsDhGroup.IsSet() {
		toSerialize["pfs_dh_group"] = o.PfsDhGroup.Get()
	}
	if o.Phase1 != nil {
		toSerialize["phase1"] = o.Phase1
	}
	if o.IsakmpPort != nil {
		toSerialize["isakmp_port"] = o.IsakmpPort
	}
	if o.IsakmpTimeRemaining != nil {
		toSerialize["isakmp_time_remaining"] = o.IsakmpTimeRemaining
	}
	if o.LastDpd != nil {
		toSerialize["last_dpd"] = o.LastDpd
	}
	if o.Phase1Cipher.IsSet() {
		toSerialize["phase1_cipher"] = o.Phase1Cipher.Get()
	}
	if o.Phase1Prf.IsSet() {
		toSerialize["phase1_prf"] = o.Phase1Prf.Get()
	}
	if o.Phase1DhGroup.IsSet() {
		toSerialize["phase1_dh_group"] = o.Phase1DhGroup.Get()
	}
	if o.IkeVersion != nil {
		toSerialize["ike_version"] = o.IkeVersion
	}
	return json.Marshal(toSerialize)
}

type NullableIpsecTunnelParams struct {
	value *IpsecTunnelParams
	isSet bool
}

func (v NullableIpsecTunnelParams) Get() *IpsecTunnelParams {
	return v.value
}

func (v *NullableIpsecTunnelParams) Set(val *IpsecTunnelParams) {
	v.value = val
	v.isSet = true
}

func (v NullableIpsecTunnelParams) IsSet() bool {
	return v.isSet
}

func (v *NullableIpsecTunnelParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpsecTunnelParams(val *IpsecTunnelParams) *NullableIpsecTunnelParams {
	return &NullableIpsecTunnelParams{value: val, isSet: true}
}

func (v NullableIpsecTunnelParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpsecTunnelParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


