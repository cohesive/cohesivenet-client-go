/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
	"time"
)

// WebhookIntegration struct for WebhookIntegration
type WebhookIntegration struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ValidateCert *bool `json:"validate_cert,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	System *bool `json:"system,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Body NullableString `json:"body,omitempty"`
	CustomProperties []WebhookCustomProperty `json:"custom_properties,omitempty"`
	Headers []WebhookHeader `json:"headers,omitempty"`
	Parameters []WebhookParameter `json:"parameters,omitempty"`
	Events []string `json:"events,omitempty"`
}

// NewWebhookIntegration instantiates a new WebhookIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookIntegration() *WebhookIntegration {
	this := WebhookIntegration{}
	return &this
}

// NewWebhookIntegrationWithDefaults instantiates a new WebhookIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookIntegrationWithDefaults() *WebhookIntegration {
	this := WebhookIntegration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookIntegration) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookIntegration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WebhookIntegration) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebhookIntegration) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebhookIntegration) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebhookIntegration) SetName(v string) {
	o.Name = &v
}

// GetValidateCert returns the ValidateCert field value if set, zero value otherwise.
func (o *WebhookIntegration) GetValidateCert() bool {
	if o == nil || o.ValidateCert == nil {
		var ret bool
		return ret
	}
	return *o.ValidateCert
}

// GetValidateCertOk returns a tuple with the ValidateCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetValidateCertOk() (*bool, bool) {
	if o == nil || o.ValidateCert == nil {
		return nil, false
	}
	return o.ValidateCert, true
}

// HasValidateCert returns a boolean if a field has been set.
func (o *WebhookIntegration) HasValidateCert() bool {
	if o != nil && o.ValidateCert != nil {
		return true
	}

	return false
}

// SetValidateCert gets a reference to the given bool and assigns it to the ValidateCert field.
func (o *WebhookIntegration) SetValidateCert(v bool) {
	o.ValidateCert = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WebhookIntegration) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WebhookIntegration) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *WebhookIntegration) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WebhookIntegration) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WebhookIntegration) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *WebhookIntegration) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *WebhookIntegration) GetSystem() bool {
	if o == nil || o.System == nil {
		var ret bool
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetSystemOk() (*bool, bool) {
	if o == nil || o.System == nil {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *WebhookIntegration) HasSystem() bool {
	if o != nil && o.System != nil {
		return true
	}

	return false
}

// SetSystem gets a reference to the given bool and assigns it to the System field.
func (o *WebhookIntegration) SetSystem(v bool) {
	o.System = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookIntegration) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookIntegration) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *WebhookIntegration) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *WebhookIntegration) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *WebhookIntegration) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *WebhookIntegration) UnsetUrl() {
	o.Url.Unset()
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookIntegration) GetBody() string {
	if o == nil || o.Body.Get() == nil {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookIntegration) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *WebhookIntegration) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *WebhookIntegration) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *WebhookIntegration) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *WebhookIntegration) UnsetBody() {
	o.Body.Unset()
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *WebhookIntegration) GetCustomProperties() []WebhookCustomProperty {
	if o == nil || o.CustomProperties == nil {
		var ret []WebhookCustomProperty
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetCustomPropertiesOk() ([]WebhookCustomProperty, bool) {
	if o == nil || o.CustomProperties == nil {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *WebhookIntegration) HasCustomProperties() bool {
	if o != nil && o.CustomProperties != nil {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []WebhookCustomProperty and assigns it to the CustomProperties field.
func (o *WebhookIntegration) SetCustomProperties(v []WebhookCustomProperty) {
	o.CustomProperties = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *WebhookIntegration) GetHeaders() []WebhookHeader {
	if o == nil || o.Headers == nil {
		var ret []WebhookHeader
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetHeadersOk() ([]WebhookHeader, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebhookIntegration) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []WebhookHeader and assigns it to the Headers field.
func (o *WebhookIntegration) SetHeaders(v []WebhookHeader) {
	o.Headers = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *WebhookIntegration) GetParameters() []WebhookParameter {
	if o == nil || o.Parameters == nil {
		var ret []WebhookParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetParametersOk() ([]WebhookParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *WebhookIntegration) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []WebhookParameter and assigns it to the Parameters field.
func (o *WebhookIntegration) SetParameters(v []WebhookParameter) {
	o.Parameters = v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *WebhookIntegration) GetEvents() []string {
	if o == nil || o.Events == nil {
		var ret []string
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookIntegration) GetEventsOk() ([]string, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *WebhookIntegration) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []string and assigns it to the Events field.
func (o *WebhookIntegration) SetEvents(v []string) {
	o.Events = v
}

func (o WebhookIntegration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ValidateCert != nil {
		toSerialize["validate_cert"] = o.ValidateCert
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.System != nil {
		toSerialize["system"] = o.System
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	if o.CustomProperties != nil {
		toSerialize["custom_properties"] = o.CustomProperties
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookIntegration struct {
	value *WebhookIntegration
	isSet bool
}

func (v NullableWebhookIntegration) Get() *WebhookIntegration {
	return v.value
}

func (v *NullableWebhookIntegration) Set(val *WebhookIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookIntegration(val *WebhookIntegration) *NullableWebhookIntegration {
	return &NullableWebhookIntegration{value: val, isSet: true}
}

func (v NullableWebhookIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


