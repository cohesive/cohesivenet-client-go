/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
	"time"
)

// InterfaceAddress struct for InterfaceAddress
type InterfaceAddress struct {
	IpInternal *string `json:"ip_internal,omitempty"`
	IpExternal *string `json:"ip_external,omitempty"`
	Description *string `json:"description,omitempty"`
	Gateway *string `json:"gateway,omitempty"`
	MaskBits *int32 `json:"mask_bits,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewInterfaceAddress instantiates a new InterfaceAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceAddress() *InterfaceAddress {
	this := InterfaceAddress{}
	return &this
}

// NewInterfaceAddressWithDefaults instantiates a new InterfaceAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceAddressWithDefaults() *InterfaceAddress {
	this := InterfaceAddress{}
	return &this
}

// GetIpInternal returns the IpInternal field value if set, zero value otherwise.
func (o *InterfaceAddress) GetIpInternal() string {
	if o == nil || o.IpInternal == nil {
		var ret string
		return ret
	}
	return *o.IpInternal
}

// GetIpInternalOk returns a tuple with the IpInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetIpInternalOk() (*string, bool) {
	if o == nil || o.IpInternal == nil {
		return nil, false
	}
	return o.IpInternal, true
}

// HasIpInternal returns a boolean if a field has been set.
func (o *InterfaceAddress) HasIpInternal() bool {
	if o != nil && o.IpInternal != nil {
		return true
	}

	return false
}

// SetIpInternal gets a reference to the given string and assigns it to the IpInternal field.
func (o *InterfaceAddress) SetIpInternal(v string) {
	o.IpInternal = &v
}

// GetIpExternal returns the IpExternal field value if set, zero value otherwise.
func (o *InterfaceAddress) GetIpExternal() string {
	if o == nil || o.IpExternal == nil {
		var ret string
		return ret
	}
	return *o.IpExternal
}

// GetIpExternalOk returns a tuple with the IpExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetIpExternalOk() (*string, bool) {
	if o == nil || o.IpExternal == nil {
		return nil, false
	}
	return o.IpExternal, true
}

// HasIpExternal returns a boolean if a field has been set.
func (o *InterfaceAddress) HasIpExternal() bool {
	if o != nil && o.IpExternal != nil {
		return true
	}

	return false
}

// SetIpExternal gets a reference to the given string and assigns it to the IpExternal field.
func (o *InterfaceAddress) SetIpExternal(v string) {
	o.IpExternal = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InterfaceAddress) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InterfaceAddress) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InterfaceAddress) SetDescription(v string) {
	o.Description = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *InterfaceAddress) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *InterfaceAddress) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *InterfaceAddress) SetGateway(v string) {
	o.Gateway = &v
}

// GetMaskBits returns the MaskBits field value if set, zero value otherwise.
func (o *InterfaceAddress) GetMaskBits() int32 {
	if o == nil || o.MaskBits == nil {
		var ret int32
		return ret
	}
	return *o.MaskBits
}

// GetMaskBitsOk returns a tuple with the MaskBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetMaskBitsOk() (*int32, bool) {
	if o == nil || o.MaskBits == nil {
		return nil, false
	}
	return o.MaskBits, true
}

// HasMaskBits returns a boolean if a field has been set.
func (o *InterfaceAddress) HasMaskBits() bool {
	if o != nil && o.MaskBits != nil {
		return true
	}

	return false
}

// SetMaskBits gets a reference to the given int32 and assigns it to the MaskBits field.
func (o *InterfaceAddress) SetMaskBits(v int32) {
	o.MaskBits = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InterfaceAddress) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InterfaceAddress) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *InterfaceAddress) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *InterfaceAddress) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceAddress) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InterfaceAddress) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *InterfaceAddress) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o InterfaceAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpInternal != nil {
		toSerialize["ip_internal"] = o.IpInternal
	}
	if o.IpExternal != nil {
		toSerialize["ip_external"] = o.IpExternal
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.MaskBits != nil {
		toSerialize["mask_bits"] = o.MaskBits
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableInterfaceAddress struct {
	value *InterfaceAddress
	isSet bool
}

func (v NullableInterfaceAddress) Get() *InterfaceAddress {
	return v.value
}

func (v *NullableInterfaceAddress) Set(val *InterfaceAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceAddress(val *InterfaceAddress) *NullableInterfaceAddress {
	return &NullableInterfaceAddress{value: val, isSet: true}
}

func (v NullableInterfaceAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


