/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// CreateContainerImageDetail struct for CreateContainerImageDetail
type CreateContainerImageDetail struct {
	// ID of the new image
	Uuid *string `json:"uuid,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewCreateContainerImageDetail instantiates a new CreateContainerImageDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContainerImageDetail() *CreateContainerImageDetail {
	this := CreateContainerImageDetail{}
	return &this
}

// NewCreateContainerImageDetailWithDefaults instantiates a new CreateContainerImageDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContainerImageDetailWithDefaults() *CreateContainerImageDetail {
	this := CreateContainerImageDetail{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *CreateContainerImageDetail) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerImageDetail) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *CreateContainerImageDetail) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *CreateContainerImageDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateContainerImageDetail) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContainerImageDetail) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateContainerImageDetail) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateContainerImageDetail) SetName(v string) {
	o.Name = &v
}

func (o CreateContainerImageDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCreateContainerImageDetail struct {
	value *CreateContainerImageDetail
	isSet bool
}

func (v NullableCreateContainerImageDetail) Get() *CreateContainerImageDetail {
	return v.value
}

func (v *NullableCreateContainerImageDetail) Set(val *CreateContainerImageDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContainerImageDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContainerImageDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContainerImageDetail(val *CreateContainerImageDetail) *NullableCreateContainerImageDetail {
	return &NullableCreateContainerImageDetail{value: val, isSet: true}
}

func (v NullableCreateContainerImageDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContainerImageDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


