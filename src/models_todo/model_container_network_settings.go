/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// ContainerNetworkSettings struct for ContainerNetworkSettings
type ContainerNetworkSettings struct {
	Gateway *string `json:"Gateway,omitempty"`
	SandboxID *string `json:"SandboxID,omitempty"`
	HairpinMode *bool `json:"HairpinMode,omitempty"`
	Bridge *string `json:"Bridge,omitempty"`
	LinkLocalIPv6Address *string `json:"LinkLocalIPv6Address,omitempty"`
	LinkLocalIPv6PrefixLen *int32 `json:"LinkLocalIPv6PrefixLen,omitempty"`
	SandboxKey *string `json:"SandboxKey,omitempty"`
	SecondaryIPAddresses NullableString `json:"SecondaryIPAddresses,omitempty"`
	SecondaryIPv6Addresses NullableString `json:"SecondaryIPv6Addresses,omitempty"`
	EndpointID *string `json:"EndpointID,omitempty"`
	GlobalIPv6Address *string `json:"GlobalIPv6Address,omitempty"`
	GlobalIPv6PrefixLen *int32 `json:"GlobalIPv6PrefixLen,omitempty"`
	IPAddress *string `json:"IPAddress,omitempty"`
	IPPrefixLen *int32 `json:"IPPrefixLen,omitempty"`
	IPv6Gateway *string `json:"IPv6Gateway,omitempty"`
	MacAddress *string `json:"MacAddress,omitempty"`
	PortMapping map[string]interface{} `json:"PortMapping,omitempty"`
	Ports map[string]interface{} `json:"Ports,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ContainerNetworkSettings ContainerNetworkSettings

// NewContainerNetworkSettings instantiates a new ContainerNetworkSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerNetworkSettings() *ContainerNetworkSettings {
	this := ContainerNetworkSettings{}
	return &this
}

// NewContainerNetworkSettingsWithDefaults instantiates a new ContainerNetworkSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerNetworkSettingsWithDefaults() *ContainerNetworkSettings {
	this := ContainerNetworkSettings{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *ContainerNetworkSettings) SetGateway(v string) {
	o.Gateway = &v
}

// GetSandboxID returns the SandboxID field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetSandboxID() string {
	if o == nil || o.SandboxID == nil {
		var ret string
		return ret
	}
	return *o.SandboxID
}

// GetSandboxIDOk returns a tuple with the SandboxID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetSandboxIDOk() (*string, bool) {
	if o == nil || o.SandboxID == nil {
		return nil, false
	}
	return o.SandboxID, true
}

// HasSandboxID returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasSandboxID() bool {
	if o != nil && o.SandboxID != nil {
		return true
	}

	return false
}

// SetSandboxID gets a reference to the given string and assigns it to the SandboxID field.
func (o *ContainerNetworkSettings) SetSandboxID(v string) {
	o.SandboxID = &v
}

// GetHairpinMode returns the HairpinMode field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetHairpinMode() bool {
	if o == nil || o.HairpinMode == nil {
		var ret bool
		return ret
	}
	return *o.HairpinMode
}

// GetHairpinModeOk returns a tuple with the HairpinMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetHairpinModeOk() (*bool, bool) {
	if o == nil || o.HairpinMode == nil {
		return nil, false
	}
	return o.HairpinMode, true
}

// HasHairpinMode returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasHairpinMode() bool {
	if o != nil && o.HairpinMode != nil {
		return true
	}

	return false
}

// SetHairpinMode gets a reference to the given bool and assigns it to the HairpinMode field.
func (o *ContainerNetworkSettings) SetHairpinMode(v bool) {
	o.HairpinMode = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetBridge() string {
	if o == nil || o.Bridge == nil {
		var ret string
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetBridgeOk() (*string, bool) {
	if o == nil || o.Bridge == nil {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasBridge() bool {
	if o != nil && o.Bridge != nil {
		return true
	}

	return false
}

// SetBridge gets a reference to the given string and assigns it to the Bridge field.
func (o *ContainerNetworkSettings) SetBridge(v string) {
	o.Bridge = &v
}

// GetLinkLocalIPv6Address returns the LinkLocalIPv6Address field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetLinkLocalIPv6Address() string {
	if o == nil || o.LinkLocalIPv6Address == nil {
		var ret string
		return ret
	}
	return *o.LinkLocalIPv6Address
}

// GetLinkLocalIPv6AddressOk returns a tuple with the LinkLocalIPv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetLinkLocalIPv6AddressOk() (*string, bool) {
	if o == nil || o.LinkLocalIPv6Address == nil {
		return nil, false
	}
	return o.LinkLocalIPv6Address, true
}

// HasLinkLocalIPv6Address returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasLinkLocalIPv6Address() bool {
	if o != nil && o.LinkLocalIPv6Address != nil {
		return true
	}

	return false
}

// SetLinkLocalIPv6Address gets a reference to the given string and assigns it to the LinkLocalIPv6Address field.
func (o *ContainerNetworkSettings) SetLinkLocalIPv6Address(v string) {
	o.LinkLocalIPv6Address = &v
}

// GetLinkLocalIPv6PrefixLen returns the LinkLocalIPv6PrefixLen field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetLinkLocalIPv6PrefixLen() int32 {
	if o == nil || o.LinkLocalIPv6PrefixLen == nil {
		var ret int32
		return ret
	}
	return *o.LinkLocalIPv6PrefixLen
}

// GetLinkLocalIPv6PrefixLenOk returns a tuple with the LinkLocalIPv6PrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetLinkLocalIPv6PrefixLenOk() (*int32, bool) {
	if o == nil || o.LinkLocalIPv6PrefixLen == nil {
		return nil, false
	}
	return o.LinkLocalIPv6PrefixLen, true
}

// HasLinkLocalIPv6PrefixLen returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasLinkLocalIPv6PrefixLen() bool {
	if o != nil && o.LinkLocalIPv6PrefixLen != nil {
		return true
	}

	return false
}

// SetLinkLocalIPv6PrefixLen gets a reference to the given int32 and assigns it to the LinkLocalIPv6PrefixLen field.
func (o *ContainerNetworkSettings) SetLinkLocalIPv6PrefixLen(v int32) {
	o.LinkLocalIPv6PrefixLen = &v
}

// GetSandboxKey returns the SandboxKey field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetSandboxKey() string {
	if o == nil || o.SandboxKey == nil {
		var ret string
		return ret
	}
	return *o.SandboxKey
}

// GetSandboxKeyOk returns a tuple with the SandboxKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetSandboxKeyOk() (*string, bool) {
	if o == nil || o.SandboxKey == nil {
		return nil, false
	}
	return o.SandboxKey, true
}

// HasSandboxKey returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasSandboxKey() bool {
	if o != nil && o.SandboxKey != nil {
		return true
	}

	return false
}

// SetSandboxKey gets a reference to the given string and assigns it to the SandboxKey field.
func (o *ContainerNetworkSettings) SetSandboxKey(v string) {
	o.SandboxKey = &v
}

// GetSecondaryIPAddresses returns the SecondaryIPAddresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerNetworkSettings) GetSecondaryIPAddresses() string {
	if o == nil || o.SecondaryIPAddresses.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecondaryIPAddresses.Get()
}

// GetSecondaryIPAddressesOk returns a tuple with the SecondaryIPAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerNetworkSettings) GetSecondaryIPAddressesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryIPAddresses.Get(), o.SecondaryIPAddresses.IsSet()
}

// HasSecondaryIPAddresses returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasSecondaryIPAddresses() bool {
	if o != nil && o.SecondaryIPAddresses.IsSet() {
		return true
	}

	return false
}

// SetSecondaryIPAddresses gets a reference to the given NullableString and assigns it to the SecondaryIPAddresses field.
func (o *ContainerNetworkSettings) SetSecondaryIPAddresses(v string) {
	o.SecondaryIPAddresses.Set(&v)
}
// SetSecondaryIPAddressesNil sets the value for SecondaryIPAddresses to be an explicit nil
func (o *ContainerNetworkSettings) SetSecondaryIPAddressesNil() {
	o.SecondaryIPAddresses.Set(nil)
}

// UnsetSecondaryIPAddresses ensures that no value is present for SecondaryIPAddresses, not even an explicit nil
func (o *ContainerNetworkSettings) UnsetSecondaryIPAddresses() {
	o.SecondaryIPAddresses.Unset()
}

// GetSecondaryIPv6Addresses returns the SecondaryIPv6Addresses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerNetworkSettings) GetSecondaryIPv6Addresses() string {
	if o == nil || o.SecondaryIPv6Addresses.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecondaryIPv6Addresses.Get()
}

// GetSecondaryIPv6AddressesOk returns a tuple with the SecondaryIPv6Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerNetworkSettings) GetSecondaryIPv6AddressesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryIPv6Addresses.Get(), o.SecondaryIPv6Addresses.IsSet()
}

// HasSecondaryIPv6Addresses returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasSecondaryIPv6Addresses() bool {
	if o != nil && o.SecondaryIPv6Addresses.IsSet() {
		return true
	}

	return false
}

// SetSecondaryIPv6Addresses gets a reference to the given NullableString and assigns it to the SecondaryIPv6Addresses field.
func (o *ContainerNetworkSettings) SetSecondaryIPv6Addresses(v string) {
	o.SecondaryIPv6Addresses.Set(&v)
}
// SetSecondaryIPv6AddressesNil sets the value for SecondaryIPv6Addresses to be an explicit nil
func (o *ContainerNetworkSettings) SetSecondaryIPv6AddressesNil() {
	o.SecondaryIPv6Addresses.Set(nil)
}

// UnsetSecondaryIPv6Addresses ensures that no value is present for SecondaryIPv6Addresses, not even an explicit nil
func (o *ContainerNetworkSettings) UnsetSecondaryIPv6Addresses() {
	o.SecondaryIPv6Addresses.Unset()
}

// GetEndpointID returns the EndpointID field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetEndpointID() string {
	if o == nil || o.EndpointID == nil {
		var ret string
		return ret
	}
	return *o.EndpointID
}

// GetEndpointIDOk returns a tuple with the EndpointID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetEndpointIDOk() (*string, bool) {
	if o == nil || o.EndpointID == nil {
		return nil, false
	}
	return o.EndpointID, true
}

// HasEndpointID returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasEndpointID() bool {
	if o != nil && o.EndpointID != nil {
		return true
	}

	return false
}

// SetEndpointID gets a reference to the given string and assigns it to the EndpointID field.
func (o *ContainerNetworkSettings) SetEndpointID(v string) {
	o.EndpointID = &v
}

// GetGlobalIPv6Address returns the GlobalIPv6Address field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetGlobalIPv6Address() string {
	if o == nil || o.GlobalIPv6Address == nil {
		var ret string
		return ret
	}
	return *o.GlobalIPv6Address
}

// GetGlobalIPv6AddressOk returns a tuple with the GlobalIPv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetGlobalIPv6AddressOk() (*string, bool) {
	if o == nil || o.GlobalIPv6Address == nil {
		return nil, false
	}
	return o.GlobalIPv6Address, true
}

// HasGlobalIPv6Address returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasGlobalIPv6Address() bool {
	if o != nil && o.GlobalIPv6Address != nil {
		return true
	}

	return false
}

// SetGlobalIPv6Address gets a reference to the given string and assigns it to the GlobalIPv6Address field.
func (o *ContainerNetworkSettings) SetGlobalIPv6Address(v string) {
	o.GlobalIPv6Address = &v
}

// GetGlobalIPv6PrefixLen returns the GlobalIPv6PrefixLen field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetGlobalIPv6PrefixLen() int32 {
	if o == nil || o.GlobalIPv6PrefixLen == nil {
		var ret int32
		return ret
	}
	return *o.GlobalIPv6PrefixLen
}

// GetGlobalIPv6PrefixLenOk returns a tuple with the GlobalIPv6PrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetGlobalIPv6PrefixLenOk() (*int32, bool) {
	if o == nil || o.GlobalIPv6PrefixLen == nil {
		return nil, false
	}
	return o.GlobalIPv6PrefixLen, true
}

// HasGlobalIPv6PrefixLen returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasGlobalIPv6PrefixLen() bool {
	if o != nil && o.GlobalIPv6PrefixLen != nil {
		return true
	}

	return false
}

// SetGlobalIPv6PrefixLen gets a reference to the given int32 and assigns it to the GlobalIPv6PrefixLen field.
func (o *ContainerNetworkSettings) SetGlobalIPv6PrefixLen(v int32) {
	o.GlobalIPv6PrefixLen = &v
}

// GetIPAddress returns the IPAddress field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetIPAddress() string {
	if o == nil || o.IPAddress == nil {
		var ret string
		return ret
	}
	return *o.IPAddress
}

// GetIPAddressOk returns a tuple with the IPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetIPAddressOk() (*string, bool) {
	if o == nil || o.IPAddress == nil {
		return nil, false
	}
	return o.IPAddress, true
}

// HasIPAddress returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasIPAddress() bool {
	if o != nil && o.IPAddress != nil {
		return true
	}

	return false
}

// SetIPAddress gets a reference to the given string and assigns it to the IPAddress field.
func (o *ContainerNetworkSettings) SetIPAddress(v string) {
	o.IPAddress = &v
}

// GetIPPrefixLen returns the IPPrefixLen field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetIPPrefixLen() int32 {
	if o == nil || o.IPPrefixLen == nil {
		var ret int32
		return ret
	}
	return *o.IPPrefixLen
}

// GetIPPrefixLenOk returns a tuple with the IPPrefixLen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetIPPrefixLenOk() (*int32, bool) {
	if o == nil || o.IPPrefixLen == nil {
		return nil, false
	}
	return o.IPPrefixLen, true
}

// HasIPPrefixLen returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasIPPrefixLen() bool {
	if o != nil && o.IPPrefixLen != nil {
		return true
	}

	return false
}

// SetIPPrefixLen gets a reference to the given int32 and assigns it to the IPPrefixLen field.
func (o *ContainerNetworkSettings) SetIPPrefixLen(v int32) {
	o.IPPrefixLen = &v
}

// GetIPv6Gateway returns the IPv6Gateway field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetIPv6Gateway() string {
	if o == nil || o.IPv6Gateway == nil {
		var ret string
		return ret
	}
	return *o.IPv6Gateway
}

// GetIPv6GatewayOk returns a tuple with the IPv6Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetIPv6GatewayOk() (*string, bool) {
	if o == nil || o.IPv6Gateway == nil {
		return nil, false
	}
	return o.IPv6Gateway, true
}

// HasIPv6Gateway returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasIPv6Gateway() bool {
	if o != nil && o.IPv6Gateway != nil {
		return true
	}

	return false
}

// SetIPv6Gateway gets a reference to the given string and assigns it to the IPv6Gateway field.
func (o *ContainerNetworkSettings) SetIPv6Gateway(v string) {
	o.IPv6Gateway = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ContainerNetworkSettings) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerNetworkSettings) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ContainerNetworkSettings) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetPortMapping returns the PortMapping field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerNetworkSettings) GetPortMapping() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.PortMapping
}

// GetPortMappingOk returns a tuple with the PortMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerNetworkSettings) GetPortMappingOk() (map[string]interface{}, bool) {
	if o == nil || o.PortMapping == nil {
		return nil, false
	}
	return o.PortMapping, true
}

// HasPortMapping returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasPortMapping() bool {
	if o != nil && o.PortMapping != nil {
		return true
	}

	return false
}

// SetPortMapping gets a reference to the given map[string]interface{} and assigns it to the PortMapping field.
func (o *ContainerNetworkSettings) SetPortMapping(v map[string]interface{}) {
	o.PortMapping = v
}

// GetPorts returns the Ports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerNetworkSettings) GetPorts() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerNetworkSettings) GetPortsOk() (map[string]interface{}, bool) {
	if o == nil || o.Ports == nil {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ContainerNetworkSettings) HasPorts() bool {
	if o != nil && o.Ports != nil {
		return true
	}

	return false
}

// SetPorts gets a reference to the given map[string]interface{} and assigns it to the Ports field.
func (o *ContainerNetworkSettings) SetPorts(v map[string]interface{}) {
	o.Ports = v
}

func (o ContainerNetworkSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Gateway != nil {
		toSerialize["Gateway"] = o.Gateway
	}
	if o.SandboxID != nil {
		toSerialize["SandboxID"] = o.SandboxID
	}
	if o.HairpinMode != nil {
		toSerialize["HairpinMode"] = o.HairpinMode
	}
	if o.Bridge != nil {
		toSerialize["Bridge"] = o.Bridge
	}
	if o.LinkLocalIPv6Address != nil {
		toSerialize["LinkLocalIPv6Address"] = o.LinkLocalIPv6Address
	}
	if o.LinkLocalIPv6PrefixLen != nil {
		toSerialize["LinkLocalIPv6PrefixLen"] = o.LinkLocalIPv6PrefixLen
	}
	if o.SandboxKey != nil {
		toSerialize["SandboxKey"] = o.SandboxKey
	}
	if o.SecondaryIPAddresses.IsSet() {
		toSerialize["SecondaryIPAddresses"] = o.SecondaryIPAddresses.Get()
	}
	if o.SecondaryIPv6Addresses.IsSet() {
		toSerialize["SecondaryIPv6Addresses"] = o.SecondaryIPv6Addresses.Get()
	}
	if o.EndpointID != nil {
		toSerialize["EndpointID"] = o.EndpointID
	}
	if o.GlobalIPv6Address != nil {
		toSerialize["GlobalIPv6Address"] = o.GlobalIPv6Address
	}
	if o.GlobalIPv6PrefixLen != nil {
		toSerialize["GlobalIPv6PrefixLen"] = o.GlobalIPv6PrefixLen
	}
	if o.IPAddress != nil {
		toSerialize["IPAddress"] = o.IPAddress
	}
	if o.IPPrefixLen != nil {
		toSerialize["IPPrefixLen"] = o.IPPrefixLen
	}
	if o.IPv6Gateway != nil {
		toSerialize["IPv6Gateway"] = o.IPv6Gateway
	}
	if o.MacAddress != nil {
		toSerialize["MacAddress"] = o.MacAddress
	}
	if o.PortMapping != nil {
		toSerialize["PortMapping"] = o.PortMapping
	}
	if o.Ports != nil {
		toSerialize["Ports"] = o.Ports
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ContainerNetworkSettings) UnmarshalJSON(bytes []byte) (err error) {
	varContainerNetworkSettings := _ContainerNetworkSettings{}

	if err = json.Unmarshal(bytes, &varContainerNetworkSettings); err == nil {
		*o = ContainerNetworkSettings(varContainerNetworkSettings)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Gateway")
		delete(additionalProperties, "SandboxID")
		delete(additionalProperties, "HairpinMode")
		delete(additionalProperties, "Bridge")
		delete(additionalProperties, "LinkLocalIPv6Address")
		delete(additionalProperties, "LinkLocalIPv6PrefixLen")
		delete(additionalProperties, "SandboxKey")
		delete(additionalProperties, "SecondaryIPAddresses")
		delete(additionalProperties, "SecondaryIPv6Addresses")
		delete(additionalProperties, "EndpointID")
		delete(additionalProperties, "GlobalIPv6Address")
		delete(additionalProperties, "GlobalIPv6PrefixLen")
		delete(additionalProperties, "IPAddress")
		delete(additionalProperties, "IPPrefixLen")
		delete(additionalProperties, "IPv6Gateway")
		delete(additionalProperties, "MacAddress")
		delete(additionalProperties, "PortMapping")
		delete(additionalProperties, "Ports")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContainerNetworkSettings struct {
	value *ContainerNetworkSettings
	isSet bool
}

func (v NullableContainerNetworkSettings) Get() *ContainerNetworkSettings {
	return v.value
}

func (v *NullableContainerNetworkSettings) Set(val *ContainerNetworkSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerNetworkSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerNetworkSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerNetworkSettings(val *ContainerNetworkSettings) *NullableContainerNetworkSettings {
	return &NullableContainerNetworkSettings{value: val, isSet: true}
}

func (v NullableContainerNetworkSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerNetworkSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


