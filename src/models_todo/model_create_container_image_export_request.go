/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// CreateContainerImageExportRequest struct for CreateContainerImageExportRequest
type CreateContainerImageExportRequest struct {
	// Name of the exported file
	Name string `json:"name"`
}

// NewCreateContainerImageExportRequest instantiates a new CreateContainerImageExportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContainerImageExportRequest(name string) *CreateContainerImageExportRequest {
	this := CreateContainerImageExportRequest{}
	this.Name = name
	return &this
}

// NewCreateContainerImageExportRequestWithDefaults instantiates a new CreateContainerImageExportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContainerImageExportRequestWithDefaults() *CreateContainerImageExportRequest {
	this := CreateContainerImageExportRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateContainerImageExportRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateContainerImageExportRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateContainerImageExportRequest) SetName(v string) {
	o.Name = v
}

func (o CreateContainerImageExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCreateContainerImageExportRequest struct {
	value *CreateContainerImageExportRequest
	isSet bool
}

func (v NullableCreateContainerImageExportRequest) Get() *CreateContainerImageExportRequest {
	return v.value
}

func (v *NullableCreateContainerImageExportRequest) Set(val *CreateContainerImageExportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContainerImageExportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContainerImageExportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContainerImageExportRequest(val *CreateContainerImageExportRequest) *NullableCreateContainerImageExportRequest {
	return &NullableCreateContainerImageExportRequest{value: val, isSet: true}
}

func (v NullableCreateContainerImageExportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContainerImageExportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


