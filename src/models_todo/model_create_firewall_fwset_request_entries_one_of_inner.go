/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// CreateFirewallFwsetRequestEntriesOneOfInner - struct for CreateFirewallFwsetRequestEntriesOneOfInner
type CreateFirewallFwsetRequestEntriesOneOfInner struct {
	CreateFirewallFwsetRequestEntriesOneOfInnerOneOf *CreateFirewallFwsetRequestEntriesOneOfInnerOneOf
	String *string
}

// CreateFirewallFwsetRequestEntriesOneOfInnerOneOfAsCreateFirewallFwsetRequestEntriesOneOfInner is a convenience function that returns CreateFirewallFwsetRequestEntriesOneOfInnerOneOf wrapped in CreateFirewallFwsetRequestEntriesOneOfInner
func CreateFirewallFwsetRequestEntriesOneOfInnerOneOfAsCreateFirewallFwsetRequestEntriesOneOfInner(v *CreateFirewallFwsetRequestEntriesOneOfInnerOneOf) CreateFirewallFwsetRequestEntriesOneOfInner {
	return CreateFirewallFwsetRequestEntriesOneOfInner{
		CreateFirewallFwsetRequestEntriesOneOfInnerOneOf: v,
	}
}

// stringAsCreateFirewallFwsetRequestEntriesOneOfInner is a convenience function that returns string wrapped in CreateFirewallFwsetRequestEntriesOneOfInner
func StringAsCreateFirewallFwsetRequestEntriesOneOfInner(v *string) CreateFirewallFwsetRequestEntriesOneOfInner {
	return CreateFirewallFwsetRequestEntriesOneOfInner{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateFirewallFwsetRequestEntriesOneOfInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CreateFirewallFwsetRequestEntriesOneOfInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf)
	if err == nil {
		jsonCreateFirewallFwsetRequestEntriesOneOfInnerOneOf, _ := json.Marshal(dst.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf)
		if string(jsonCreateFirewallFwsetRequestEntriesOneOfInnerOneOf) == "{}" { // empty struct
			dst.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf = nil
		} else {
			match++
		}
	} else {
		dst.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf = nil
		dst.String = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(CreateFirewallFwsetRequestEntriesOneOfInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(CreateFirewallFwsetRequestEntriesOneOfInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateFirewallFwsetRequestEntriesOneOfInner) MarshalJSON() ([]byte, error) {
	if src.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf != nil {
		return json.Marshal(&src.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateFirewallFwsetRequestEntriesOneOfInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf != nil {
		return obj.CreateFirewallFwsetRequestEntriesOneOfInnerOneOf
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateFirewallFwsetRequestEntriesOneOfInner struct {
	value *CreateFirewallFwsetRequestEntriesOneOfInner
	isSet bool
}

func (v NullableCreateFirewallFwsetRequestEntriesOneOfInner) Get() *CreateFirewallFwsetRequestEntriesOneOfInner {
	return v.value
}

func (v *NullableCreateFirewallFwsetRequestEntriesOneOfInner) Set(val *CreateFirewallFwsetRequestEntriesOneOfInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirewallFwsetRequestEntriesOneOfInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirewallFwsetRequestEntriesOneOfInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirewallFwsetRequestEntriesOneOfInner(val *CreateFirewallFwsetRequestEntriesOneOfInner) *NullableCreateFirewallFwsetRequestEntriesOneOfInner {
	return &NullableCreateFirewallFwsetRequestEntriesOneOfInner{value: val, isSet: true}
}

func (v NullableCreateFirewallFwsetRequestEntriesOneOfInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirewallFwsetRequestEntriesOneOfInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


