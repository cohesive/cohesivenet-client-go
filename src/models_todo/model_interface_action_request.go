/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// InterfaceActionRequest struct for InterfaceActionRequest
type InterfaceActionRequest struct {
	// Run discovery for new primary adapters
	DiscoverNewPrimaryAdapters *bool `json:"discover_new_primary_adapters,omitempty"`
	DiscoverIps *bool `json:"discover_ips,omitempty"`
	ManageOverlayInterfaces *bool `json:"manage_overlay_interfaces,omitempty"`
	DiscoverLinks *bool `json:"discover_links,omitempty"`
}

// NewInterfaceActionRequest instantiates a new InterfaceActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceActionRequest() *InterfaceActionRequest {
	this := InterfaceActionRequest{}
	return &this
}

// NewInterfaceActionRequestWithDefaults instantiates a new InterfaceActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceActionRequestWithDefaults() *InterfaceActionRequest {
	this := InterfaceActionRequest{}
	return &this
}

// GetDiscoverNewPrimaryAdapters returns the DiscoverNewPrimaryAdapters field value if set, zero value otherwise.
func (o *InterfaceActionRequest) GetDiscoverNewPrimaryAdapters() bool {
	if o == nil || o.DiscoverNewPrimaryAdapters == nil {
		var ret bool
		return ret
	}
	return *o.DiscoverNewPrimaryAdapters
}

// GetDiscoverNewPrimaryAdaptersOk returns a tuple with the DiscoverNewPrimaryAdapters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceActionRequest) GetDiscoverNewPrimaryAdaptersOk() (*bool, bool) {
	if o == nil || o.DiscoverNewPrimaryAdapters == nil {
		return nil, false
	}
	return o.DiscoverNewPrimaryAdapters, true
}

// HasDiscoverNewPrimaryAdapters returns a boolean if a field has been set.
func (o *InterfaceActionRequest) HasDiscoverNewPrimaryAdapters() bool {
	if o != nil && o.DiscoverNewPrimaryAdapters != nil {
		return true
	}

	return false
}

// SetDiscoverNewPrimaryAdapters gets a reference to the given bool and assigns it to the DiscoverNewPrimaryAdapters field.
func (o *InterfaceActionRequest) SetDiscoverNewPrimaryAdapters(v bool) {
	o.DiscoverNewPrimaryAdapters = &v
}

// GetDiscoverIps returns the DiscoverIps field value if set, zero value otherwise.
func (o *InterfaceActionRequest) GetDiscoverIps() bool {
	if o == nil || o.DiscoverIps == nil {
		var ret bool
		return ret
	}
	return *o.DiscoverIps
}

// GetDiscoverIpsOk returns a tuple with the DiscoverIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceActionRequest) GetDiscoverIpsOk() (*bool, bool) {
	if o == nil || o.DiscoverIps == nil {
		return nil, false
	}
	return o.DiscoverIps, true
}

// HasDiscoverIps returns a boolean if a field has been set.
func (o *InterfaceActionRequest) HasDiscoverIps() bool {
	if o != nil && o.DiscoverIps != nil {
		return true
	}

	return false
}

// SetDiscoverIps gets a reference to the given bool and assigns it to the DiscoverIps field.
func (o *InterfaceActionRequest) SetDiscoverIps(v bool) {
	o.DiscoverIps = &v
}

// GetManageOverlayInterfaces returns the ManageOverlayInterfaces field value if set, zero value otherwise.
func (o *InterfaceActionRequest) GetManageOverlayInterfaces() bool {
	if o == nil || o.ManageOverlayInterfaces == nil {
		var ret bool
		return ret
	}
	return *o.ManageOverlayInterfaces
}

// GetManageOverlayInterfacesOk returns a tuple with the ManageOverlayInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceActionRequest) GetManageOverlayInterfacesOk() (*bool, bool) {
	if o == nil || o.ManageOverlayInterfaces == nil {
		return nil, false
	}
	return o.ManageOverlayInterfaces, true
}

// HasManageOverlayInterfaces returns a boolean if a field has been set.
func (o *InterfaceActionRequest) HasManageOverlayInterfaces() bool {
	if o != nil && o.ManageOverlayInterfaces != nil {
		return true
	}

	return false
}

// SetManageOverlayInterfaces gets a reference to the given bool and assigns it to the ManageOverlayInterfaces field.
func (o *InterfaceActionRequest) SetManageOverlayInterfaces(v bool) {
	o.ManageOverlayInterfaces = &v
}

// GetDiscoverLinks returns the DiscoverLinks field value if set, zero value otherwise.
func (o *InterfaceActionRequest) GetDiscoverLinks() bool {
	if o == nil || o.DiscoverLinks == nil {
		var ret bool
		return ret
	}
	return *o.DiscoverLinks
}

// GetDiscoverLinksOk returns a tuple with the DiscoverLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceActionRequest) GetDiscoverLinksOk() (*bool, bool) {
	if o == nil || o.DiscoverLinks == nil {
		return nil, false
	}
	return o.DiscoverLinks, true
}

// HasDiscoverLinks returns a boolean if a field has been set.
func (o *InterfaceActionRequest) HasDiscoverLinks() bool {
	if o != nil && o.DiscoverLinks != nil {
		return true
	}

	return false
}

// SetDiscoverLinks gets a reference to the given bool and assigns it to the DiscoverLinks field.
func (o *InterfaceActionRequest) SetDiscoverLinks(v bool) {
	o.DiscoverLinks = &v
}

func (o InterfaceActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DiscoverNewPrimaryAdapters != nil {
		toSerialize["discover_new_primary_adapters"] = o.DiscoverNewPrimaryAdapters
	}
	if o.DiscoverIps != nil {
		toSerialize["discover_ips"] = o.DiscoverIps
	}
	if o.ManageOverlayInterfaces != nil {
		toSerialize["manage_overlay_interfaces"] = o.ManageOverlayInterfaces
	}
	if o.DiscoverLinks != nil {
		toSerialize["discover_links"] = o.DiscoverLinks
	}
	return json.Marshal(toSerialize)
}

type NullableInterfaceActionRequest struct {
	value *InterfaceActionRequest
	isSet bool
}

func (v NullableInterfaceActionRequest) Get() *InterfaceActionRequest {
	return v.value
}

func (v *NullableInterfaceActionRequest) Set(val *InterfaceActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceActionRequest(val *InterfaceActionRequest) *NullableInterfaceActionRequest {
	return &NullableInterfaceActionRequest{value: val, isSet: true}
}

func (v NullableInterfaceActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


