/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientpackDetail struct for ClientpackDetail
type ClientpackDetail struct {
	Clientpack *ClientpackList `json:"clientpack,omitempty"`
}

// NewClientpackDetail instantiates a new ClientpackDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientpackDetail() *ClientpackDetail {
	this := ClientpackDetail{}
	return &this
}

// NewClientpackDetailWithDefaults instantiates a new ClientpackDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientpackDetailWithDefaults() *ClientpackDetail {
	this := ClientpackDetail{}
	return &this
}

// GetClientpack returns the Clientpack field value if set, zero value otherwise.
func (o *ClientpackDetail) GetClientpack() ClientpackList {
	if o == nil || o.Clientpack == nil {
		var ret ClientpackList
		return ret
	}
	return *o.Clientpack
}

// GetClientpackOk returns a tuple with the Clientpack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientpackDetail) GetClientpackOk() (*ClientpackList, bool) {
	if o == nil || o.Clientpack == nil {
		return nil, false
	}
	return o.Clientpack, true
}

// HasClientpack returns a boolean if a field has been set.
func (o *ClientpackDetail) HasClientpack() bool {
	if o != nil && o.Clientpack != nil {
		return true
	}

	return false
}

// SetClientpack gets a reference to the given ClientpackList and assigns it to the Clientpack field.
func (o *ClientpackDetail) SetClientpack(v ClientpackList) {
	o.Clientpack = &v
}

func (o ClientpackDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Clientpack != nil {
		toSerialize["clientpack"] = o.Clientpack
	}
	return json.Marshal(toSerialize)
}

type NullableClientpackDetail struct {
	value *ClientpackDetail
	isSet bool
}

func (v NullableClientpackDetail) Get() *ClientpackDetail {
	return v.value
}

func (v *NullableClientpackDetail) Set(val *ClientpackDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableClientpackDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableClientpackDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientpackDetail(val *ClientpackDetail) *NullableClientpackDetail {
	return &NullableClientpackDetail{value: val, isSet: true}
}

func (v NullableClientpackDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientpackDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


