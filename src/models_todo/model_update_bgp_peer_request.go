/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateBGPPeerRequest struct for UpdateBGPPeerRequest
type UpdateBGPPeerRequest struct {
	// IP address of the desired BGP peer.
	Ipaddress string `json:"ipaddress"`
	// Autonomous system number assigned to device at ipaddress
	Asn int32 `json:"asn"`
	// Autonomous system number alias
	LocalAsnAlias *int32 `json:"local_asn_alias,omitempty"`
	// List of \"in permit CIDR\" and/or \"out permit CIDR\" statements in a string delimited by \"\\n\"
	AccessList *string `json:"access_list,omitempty"`
	// String to be agreed upon by both peers as a simple password.
	BgpPassword *string `json:"bgp_password,omitempty"`
	// Enable network distance for BGP peer
	AddNetworkDistance *bool `json:"add_network_distance,omitempty"`
	// Add distance direction for BGP peer, in or out
	AddNetworkDistanceDirection *string `json:"add_network_distance_direction,omitempty"`
	// Distance metric weight indicating distance in hops for BGP peer
	AddNetworkDistanceHops *int32 `json:"add_network_distance_hops,omitempty"`
	HoldTime *int32 `json:"hold_time,omitempty"`
	// Distance metric weight indicating distance in hops for BGP peer
	KeepaliveInterval *int32 `json:"keepalive_interval,omitempty"`
}

// NewUpdateBGPPeerRequest instantiates a new UpdateBGPPeerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBGPPeerRequest(ipaddress string, asn int32) *UpdateBGPPeerRequest {
	this := UpdateBGPPeerRequest{}
	this.Ipaddress = ipaddress
	this.Asn = asn
	return &this
}

// NewUpdateBGPPeerRequestWithDefaults instantiates a new UpdateBGPPeerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBGPPeerRequestWithDefaults() *UpdateBGPPeerRequest {
	this := UpdateBGPPeerRequest{}
	return &this
}

// GetIpaddress returns the Ipaddress field value
func (o *UpdateBGPPeerRequest) GetIpaddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ipaddress
}

// GetIpaddressOk returns a tuple with the Ipaddress field value
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetIpaddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipaddress, true
}

// SetIpaddress sets field value
func (o *UpdateBGPPeerRequest) SetIpaddress(v string) {
	o.Ipaddress = v
}

// GetAsn returns the Asn field value
func (o *UpdateBGPPeerRequest) GetAsn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Asn
}

// GetAsnOk returns a tuple with the Asn field value
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetAsnOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asn, true
}

// SetAsn sets field value
func (o *UpdateBGPPeerRequest) SetAsn(v int32) {
	o.Asn = v
}

// GetLocalAsnAlias returns the LocalAsnAlias field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetLocalAsnAlias() int32 {
	if o == nil || o.LocalAsnAlias == nil {
		var ret int32
		return ret
	}
	return *o.LocalAsnAlias
}

// GetLocalAsnAliasOk returns a tuple with the LocalAsnAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetLocalAsnAliasOk() (*int32, bool) {
	if o == nil || o.LocalAsnAlias == nil {
		return nil, false
	}
	return o.LocalAsnAlias, true
}

// HasLocalAsnAlias returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasLocalAsnAlias() bool {
	if o != nil && o.LocalAsnAlias != nil {
		return true
	}

	return false
}

// SetLocalAsnAlias gets a reference to the given int32 and assigns it to the LocalAsnAlias field.
func (o *UpdateBGPPeerRequest) SetLocalAsnAlias(v int32) {
	o.LocalAsnAlias = &v
}

// GetAccessList returns the AccessList field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetAccessList() string {
	if o == nil || o.AccessList == nil {
		var ret string
		return ret
	}
	return *o.AccessList
}

// GetAccessListOk returns a tuple with the AccessList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetAccessListOk() (*string, bool) {
	if o == nil || o.AccessList == nil {
		return nil, false
	}
	return o.AccessList, true
}

// HasAccessList returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasAccessList() bool {
	if o != nil && o.AccessList != nil {
		return true
	}

	return false
}

// SetAccessList gets a reference to the given string and assigns it to the AccessList field.
func (o *UpdateBGPPeerRequest) SetAccessList(v string) {
	o.AccessList = &v
}

// GetBgpPassword returns the BgpPassword field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetBgpPassword() string {
	if o == nil || o.BgpPassword == nil {
		var ret string
		return ret
	}
	return *o.BgpPassword
}

// GetBgpPasswordOk returns a tuple with the BgpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetBgpPasswordOk() (*string, bool) {
	if o == nil || o.BgpPassword == nil {
		return nil, false
	}
	return o.BgpPassword, true
}

// HasBgpPassword returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasBgpPassword() bool {
	if o != nil && o.BgpPassword != nil {
		return true
	}

	return false
}

// SetBgpPassword gets a reference to the given string and assigns it to the BgpPassword field.
func (o *UpdateBGPPeerRequest) SetBgpPassword(v string) {
	o.BgpPassword = &v
}

// GetAddNetworkDistance returns the AddNetworkDistance field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistance() bool {
	if o == nil || o.AddNetworkDistance == nil {
		var ret bool
		return ret
	}
	return *o.AddNetworkDistance
}

// GetAddNetworkDistanceOk returns a tuple with the AddNetworkDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistanceOk() (*bool, bool) {
	if o == nil || o.AddNetworkDistance == nil {
		return nil, false
	}
	return o.AddNetworkDistance, true
}

// HasAddNetworkDistance returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasAddNetworkDistance() bool {
	if o != nil && o.AddNetworkDistance != nil {
		return true
	}

	return false
}

// SetAddNetworkDistance gets a reference to the given bool and assigns it to the AddNetworkDistance field.
func (o *UpdateBGPPeerRequest) SetAddNetworkDistance(v bool) {
	o.AddNetworkDistance = &v
}

// GetAddNetworkDistanceDirection returns the AddNetworkDistanceDirection field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistanceDirection() string {
	if o == nil || o.AddNetworkDistanceDirection == nil {
		var ret string
		return ret
	}
	return *o.AddNetworkDistanceDirection
}

// GetAddNetworkDistanceDirectionOk returns a tuple with the AddNetworkDistanceDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistanceDirectionOk() (*string, bool) {
	if o == nil || o.AddNetworkDistanceDirection == nil {
		return nil, false
	}
	return o.AddNetworkDistanceDirection, true
}

// HasAddNetworkDistanceDirection returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasAddNetworkDistanceDirection() bool {
	if o != nil && o.AddNetworkDistanceDirection != nil {
		return true
	}

	return false
}

// SetAddNetworkDistanceDirection gets a reference to the given string and assigns it to the AddNetworkDistanceDirection field.
func (o *UpdateBGPPeerRequest) SetAddNetworkDistanceDirection(v string) {
	o.AddNetworkDistanceDirection = &v
}

// GetAddNetworkDistanceHops returns the AddNetworkDistanceHops field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistanceHops() int32 {
	if o == nil || o.AddNetworkDistanceHops == nil {
		var ret int32
		return ret
	}
	return *o.AddNetworkDistanceHops
}

// GetAddNetworkDistanceHopsOk returns a tuple with the AddNetworkDistanceHops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetAddNetworkDistanceHopsOk() (*int32, bool) {
	if o == nil || o.AddNetworkDistanceHops == nil {
		return nil, false
	}
	return o.AddNetworkDistanceHops, true
}

// HasAddNetworkDistanceHops returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasAddNetworkDistanceHops() bool {
	if o != nil && o.AddNetworkDistanceHops != nil {
		return true
	}

	return false
}

// SetAddNetworkDistanceHops gets a reference to the given int32 and assigns it to the AddNetworkDistanceHops field.
func (o *UpdateBGPPeerRequest) SetAddNetworkDistanceHops(v int32) {
	o.AddNetworkDistanceHops = &v
}

// GetHoldTime returns the HoldTime field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetHoldTime() int32 {
	if o == nil || o.HoldTime == nil {
		var ret int32
		return ret
	}
	return *o.HoldTime
}

// GetHoldTimeOk returns a tuple with the HoldTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetHoldTimeOk() (*int32, bool) {
	if o == nil || o.HoldTime == nil {
		return nil, false
	}
	return o.HoldTime, true
}

// HasHoldTime returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasHoldTime() bool {
	if o != nil && o.HoldTime != nil {
		return true
	}

	return false
}

// SetHoldTime gets a reference to the given int32 and assigns it to the HoldTime field.
func (o *UpdateBGPPeerRequest) SetHoldTime(v int32) {
	o.HoldTime = &v
}

// GetKeepaliveInterval returns the KeepaliveInterval field value if set, zero value otherwise.
func (o *UpdateBGPPeerRequest) GetKeepaliveInterval() int32 {
	if o == nil || o.KeepaliveInterval == nil {
		var ret int32
		return ret
	}
	return *o.KeepaliveInterval
}

// GetKeepaliveIntervalOk returns a tuple with the KeepaliveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBGPPeerRequest) GetKeepaliveIntervalOk() (*int32, bool) {
	if o == nil || o.KeepaliveInterval == nil {
		return nil, false
	}
	return o.KeepaliveInterval, true
}

// HasKeepaliveInterval returns a boolean if a field has been set.
func (o *UpdateBGPPeerRequest) HasKeepaliveInterval() bool {
	if o != nil && o.KeepaliveInterval != nil {
		return true
	}

	return false
}

// SetKeepaliveInterval gets a reference to the given int32 and assigns it to the KeepaliveInterval field.
func (o *UpdateBGPPeerRequest) SetKeepaliveInterval(v int32) {
	o.KeepaliveInterval = &v
}

func (o UpdateBGPPeerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ipaddress"] = o.Ipaddress
	}
	if true {
		toSerialize["asn"] = o.Asn
	}
	if o.LocalAsnAlias != nil {
		toSerialize["local_asn_alias"] = o.LocalAsnAlias
	}
	if o.AccessList != nil {
		toSerialize["access_list"] = o.AccessList
	}
	if o.BgpPassword != nil {
		toSerialize["bgp_password"] = o.BgpPassword
	}
	if o.AddNetworkDistance != nil {
		toSerialize["add_network_distance"] = o.AddNetworkDistance
	}
	if o.AddNetworkDistanceDirection != nil {
		toSerialize["add_network_distance_direction"] = o.AddNetworkDistanceDirection
	}
	if o.AddNetworkDistanceHops != nil {
		toSerialize["add_network_distance_hops"] = o.AddNetworkDistanceHops
	}
	if o.HoldTime != nil {
		toSerialize["hold_time"] = o.HoldTime
	}
	if o.KeepaliveInterval != nil {
		toSerialize["keepalive_interval"] = o.KeepaliveInterval
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateBGPPeerRequest struct {
	value *UpdateBGPPeerRequest
	isSet bool
}

func (v NullableUpdateBGPPeerRequest) Get() *UpdateBGPPeerRequest {
	return v.value
}

func (v *NullableUpdateBGPPeerRequest) Set(val *UpdateBGPPeerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBGPPeerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBGPPeerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBGPPeerRequest(val *UpdateBGPPeerRequest) *NullableUpdateBGPPeerRequest {
	return &NullableUpdateBGPPeerRequest{value: val, isSet: true}
}

func (v NullableUpdateBGPPeerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBGPPeerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


