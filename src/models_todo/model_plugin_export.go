/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// PluginExport struct for PluginExport
type PluginExport struct {
	Name *string `json:"name,omitempty"`
	Basename *string `json:"basename,omitempty"`
	// Size of export (bytes)
	Size *int32 `json:"size,omitempty"`
	Mtime *string `json:"mtime,omitempty"`
	Status *string `json:"status,omitempty"`
	Token *string `json:"token,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewPluginExport instantiates a new PluginExport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginExport() *PluginExport {
	this := PluginExport{}
	return &this
}

// NewPluginExportWithDefaults instantiates a new PluginExport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginExportWithDefaults() *PluginExport {
	this := PluginExport{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PluginExport) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PluginExport) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PluginExport) SetName(v string) {
	o.Name = &v
}

// GetBasename returns the Basename field value if set, zero value otherwise.
func (o *PluginExport) GetBasename() string {
	if o == nil || o.Basename == nil {
		var ret string
		return ret
	}
	return *o.Basename
}

// GetBasenameOk returns a tuple with the Basename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetBasenameOk() (*string, bool) {
	if o == nil || o.Basename == nil {
		return nil, false
	}
	return o.Basename, true
}

// HasBasename returns a boolean if a field has been set.
func (o *PluginExport) HasBasename() bool {
	if o != nil && o.Basename != nil {
		return true
	}

	return false
}

// SetBasename gets a reference to the given string and assigns it to the Basename field.
func (o *PluginExport) SetBasename(v string) {
	o.Basename = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *PluginExport) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PluginExport) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *PluginExport) SetSize(v int32) {
	o.Size = &v
}

// GetMtime returns the Mtime field value if set, zero value otherwise.
func (o *PluginExport) GetMtime() string {
	if o == nil || o.Mtime == nil {
		var ret string
		return ret
	}
	return *o.Mtime
}

// GetMtimeOk returns a tuple with the Mtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetMtimeOk() (*string, bool) {
	if o == nil || o.Mtime == nil {
		return nil, false
	}
	return o.Mtime, true
}

// HasMtime returns a boolean if a field has been set.
func (o *PluginExport) HasMtime() bool {
	if o != nil && o.Mtime != nil {
		return true
	}

	return false
}

// SetMtime gets a reference to the given string and assigns it to the Mtime field.
func (o *PluginExport) SetMtime(v string) {
	o.Mtime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PluginExport) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PluginExport) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PluginExport) SetStatus(v string) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PluginExport) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PluginExport) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PluginExport) SetToken(v string) {
	o.Token = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PluginExport) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginExport) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PluginExport) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PluginExport) SetUrl(v string) {
	o.Url = &v
}

func (o PluginExport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Basename != nil {
		toSerialize["basename"] = o.Basename
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Mtime != nil {
		toSerialize["mtime"] = o.Mtime
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullablePluginExport struct {
	value *PluginExport
	isSet bool
}

func (v NullablePluginExport) Get() *PluginExport {
	return v.value
}

func (v *NullablePluginExport) Set(val *PluginExport) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginExport) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginExport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginExport(val *PluginExport) *NullablePluginExport {
	return &NullablePluginExport{value: val, isSet: true}
}

func (v NullablePluginExport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginExport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


