/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// DeleteFirewallRuleRequest struct for DeleteFirewallRuleRequest
type DeleteFirewallRuleRequest struct {
	// Rule to be deleted
	Rule string `json:"rule"`
}

// NewDeleteFirewallRuleRequest instantiates a new DeleteFirewallRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteFirewallRuleRequest(rule string) *DeleteFirewallRuleRequest {
	this := DeleteFirewallRuleRequest{}
	this.Rule = rule
	return &this
}

// NewDeleteFirewallRuleRequestWithDefaults instantiates a new DeleteFirewallRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteFirewallRuleRequestWithDefaults() *DeleteFirewallRuleRequest {
	this := DeleteFirewallRuleRequest{}
	return &this
}

// GetRule returns the Rule field value
func (o *DeleteFirewallRuleRequest) GetRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *DeleteFirewallRuleRequest) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *DeleteFirewallRuleRequest) SetRule(v string) {
	o.Rule = v
}

func (o DeleteFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rule"] = o.Rule
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteFirewallRuleRequest struct {
	value *DeleteFirewallRuleRequest
	isSet bool
}

func (v NullableDeleteFirewallRuleRequest) Get() *DeleteFirewallRuleRequest {
	return v.value
}

func (v *NullableDeleteFirewallRuleRequest) Set(val *DeleteFirewallRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteFirewallRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteFirewallRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteFirewallRuleRequest(val *DeleteFirewallRuleRequest) *NullableDeleteFirewallRuleRequest {
	return &NullableDeleteFirewallRuleRequest{value: val, isSet: true}
}

func (v NullableDeleteFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteFirewallRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


