/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// FirewallRuleOperationData struct for FirewallRuleOperationData
type FirewallRuleOperationData struct {
	Status *string `json:"status,omitempty"`
	Rule *string `json:"rule,omitempty"`
	Position *int32 `json:"position,omitempty"`
	// Task token
	Token *string `json:"token,omitempty"`
}

// NewFirewallRuleOperationData instantiates a new FirewallRuleOperationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallRuleOperationData() *FirewallRuleOperationData {
	this := FirewallRuleOperationData{}
	return &this
}

// NewFirewallRuleOperationDataWithDefaults instantiates a new FirewallRuleOperationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallRuleOperationDataWithDefaults() *FirewallRuleOperationData {
	this := FirewallRuleOperationData{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FirewallRuleOperationData) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleOperationData) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FirewallRuleOperationData) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FirewallRuleOperationData) SetStatus(v string) {
	o.Status = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *FirewallRuleOperationData) GetRule() string {
	if o == nil || o.Rule == nil {
		var ret string
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleOperationData) GetRuleOk() (*string, bool) {
	if o == nil || o.Rule == nil {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *FirewallRuleOperationData) HasRule() bool {
	if o != nil && o.Rule != nil {
		return true
	}

	return false
}

// SetRule gets a reference to the given string and assigns it to the Rule field.
func (o *FirewallRuleOperationData) SetRule(v string) {
	o.Rule = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FirewallRuleOperationData) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleOperationData) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FirewallRuleOperationData) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *FirewallRuleOperationData) SetPosition(v int32) {
	o.Position = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *FirewallRuleOperationData) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallRuleOperationData) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *FirewallRuleOperationData) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *FirewallRuleOperationData) SetToken(v string) {
	o.Token = &v
}

func (o FirewallRuleOperationData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Rule != nil {
		toSerialize["rule"] = o.Rule
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallRuleOperationData struct {
	value *FirewallRuleOperationData
	isSet bool
}

func (v NullableFirewallRuleOperationData) Get() *FirewallRuleOperationData {
	return v.value
}

func (v *NullableFirewallRuleOperationData) Set(val *FirewallRuleOperationData) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallRuleOperationData) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallRuleOperationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallRuleOperationData(val *FirewallRuleOperationData) *NullableFirewallRuleOperationData {
	return &NullableFirewallRuleOperationData{value: val, isSet: true}
}

func (v NullableFirewallRuleOperationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallRuleOperationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


