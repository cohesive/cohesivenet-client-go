/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// DeleteContainerImageDetail struct for DeleteContainerImageDetail
type DeleteContainerImageDetail struct {
	Uuid *string `json:"uuid,omitempty"`
	ImageDeleted *bool `json:"image_deleted,omitempty"`
}

// NewDeleteContainerImageDetail instantiates a new DeleteContainerImageDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteContainerImageDetail() *DeleteContainerImageDetail {
	this := DeleteContainerImageDetail{}
	return &this
}

// NewDeleteContainerImageDetailWithDefaults instantiates a new DeleteContainerImageDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteContainerImageDetailWithDefaults() *DeleteContainerImageDetail {
	this := DeleteContainerImageDetail{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *DeleteContainerImageDetail) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteContainerImageDetail) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *DeleteContainerImageDetail) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *DeleteContainerImageDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetImageDeleted returns the ImageDeleted field value if set, zero value otherwise.
func (o *DeleteContainerImageDetail) GetImageDeleted() bool {
	if o == nil || o.ImageDeleted == nil {
		var ret bool
		return ret
	}
	return *o.ImageDeleted
}

// GetImageDeletedOk returns a tuple with the ImageDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteContainerImageDetail) GetImageDeletedOk() (*bool, bool) {
	if o == nil || o.ImageDeleted == nil {
		return nil, false
	}
	return o.ImageDeleted, true
}

// HasImageDeleted returns a boolean if a field has been set.
func (o *DeleteContainerImageDetail) HasImageDeleted() bool {
	if o != nil && o.ImageDeleted != nil {
		return true
	}

	return false
}

// SetImageDeleted gets a reference to the given bool and assigns it to the ImageDeleted field.
func (o *DeleteContainerImageDetail) SetImageDeleted(v bool) {
	o.ImageDeleted = &v
}

func (o DeleteContainerImageDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.ImageDeleted != nil {
		toSerialize["image_deleted"] = o.ImageDeleted
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteContainerImageDetail struct {
	value *DeleteContainerImageDetail
	isSet bool
}

func (v NullableDeleteContainerImageDetail) Get() *DeleteContainerImageDetail {
	return v.value
}

func (v *NullableDeleteContainerImageDetail) Set(val *DeleteContainerImageDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteContainerImageDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteContainerImageDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteContainerImageDetail(val *DeleteContainerImageDetail) *NullableDeleteContainerImageDetail {
	return &NullableDeleteContainerImageDetail{value: val, isSet: true}
}

func (v NullableDeleteContainerImageDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteContainerImageDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


