/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// OverwriteRequestV2 struct for OverwriteRequestV2
type OverwriteRequestV2 struct {
	Rules OverwriteRequestV2Rules `json:"rules"`
}

// NewOverwriteRequestV2 instantiates a new OverwriteRequestV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverwriteRequestV2(rules OverwriteRequestV2Rules) *OverwriteRequestV2 {
	this := OverwriteRequestV2{}
	this.Rules = rules
	return &this
}

// NewOverwriteRequestV2WithDefaults instantiates a new OverwriteRequestV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverwriteRequestV2WithDefaults() *OverwriteRequestV2 {
	this := OverwriteRequestV2{}
	return &this
}

// GetRules returns the Rules field value
func (o *OverwriteRequestV2) GetRules() OverwriteRequestV2Rules {
	if o == nil {
		var ret OverwriteRequestV2Rules
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *OverwriteRequestV2) GetRulesOk() (*OverwriteRequestV2Rules, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *OverwriteRequestV2) SetRules(v OverwriteRequestV2Rules) {
	o.Rules = v
}

func (o OverwriteRequestV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableOverwriteRequestV2 struct {
	value *OverwriteRequestV2
	isSet bool
}

func (v NullableOverwriteRequestV2) Get() *OverwriteRequestV2 {
	return v.value
}

func (v *NullableOverwriteRequestV2) Set(val *OverwriteRequestV2) {
	v.value = val
	v.isSet = true
}

func (v NullableOverwriteRequestV2) IsSet() bool {
	return v.isSet
}

func (v *NullableOverwriteRequestV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverwriteRequestV2(val *OverwriteRequestV2) *NullableOverwriteRequestV2 {
	return &NullableOverwriteRequestV2{value: val, isSet: true}
}

func (v NullableOverwriteRequestV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverwriteRequestV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


