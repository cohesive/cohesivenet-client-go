/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// CreateFirewallRuleGroupRequest struct for CreateFirewallRuleGroupRequest
type CreateFirewallRuleGroupRequest struct {
	// Name of group
	Name string `json:"name"`
	RuleIds []string `json:"rule_ids,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewCreateFirewallRuleGroupRequest instantiates a new CreateFirewallRuleGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFirewallRuleGroupRequest(name string) *CreateFirewallRuleGroupRequest {
	this := CreateFirewallRuleGroupRequest{}
	this.Name = name
	return &this
}

// NewCreateFirewallRuleGroupRequestWithDefaults instantiates a new CreateFirewallRuleGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFirewallRuleGroupRequestWithDefaults() *CreateFirewallRuleGroupRequest {
	this := CreateFirewallRuleGroupRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateFirewallRuleGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateFirewallRuleGroupRequest) SetName(v string) {
	o.Name = v
}

// GetRuleIds returns the RuleIds field value if set, zero value otherwise.
func (o *CreateFirewallRuleGroupRequest) GetRuleIds() []string {
	if o == nil || o.RuleIds == nil {
		var ret []string
		return ret
	}
	return o.RuleIds
}

// GetRuleIdsOk returns a tuple with the RuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleGroupRequest) GetRuleIdsOk() ([]string, bool) {
	if o == nil || o.RuleIds == nil {
		return nil, false
	}
	return o.RuleIds, true
}

// HasRuleIds returns a boolean if a field has been set.
func (o *CreateFirewallRuleGroupRequest) HasRuleIds() bool {
	if o != nil && o.RuleIds != nil {
		return true
	}

	return false
}

// SetRuleIds gets a reference to the given []string and assigns it to the RuleIds field.
func (o *CreateFirewallRuleGroupRequest) SetRuleIds(v []string) {
	o.RuleIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateFirewallRuleGroupRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleGroupRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateFirewallRuleGroupRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateFirewallRuleGroupRequest) SetDescription(v string) {
	o.Description = &v
}

func (o CreateFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.RuleIds != nil {
		toSerialize["rule_ids"] = o.RuleIds
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFirewallRuleGroupRequest struct {
	value *CreateFirewallRuleGroupRequest
	isSet bool
}

func (v NullableCreateFirewallRuleGroupRequest) Get() *CreateFirewallRuleGroupRequest {
	return v.value
}

func (v *NullableCreateFirewallRuleGroupRequest) Set(val *CreateFirewallRuleGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirewallRuleGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirewallRuleGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirewallRuleGroupRequest(val *CreateFirewallRuleGroupRequest) *NullableCreateFirewallRuleGroupRequest {
	return &NullableCreateFirewallRuleGroupRequest{value: val, isSet: true}
}

func (v NullableCreateFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirewallRuleGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


