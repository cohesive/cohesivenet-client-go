/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf struct for FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf
type FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf struct {
	Error *string `json:"error,omitempty"`
}

// NewFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf instantiates a new FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf() *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf {
	this := FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf{}
	return &this
}

// NewFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOfWithDefaults instantiates a new FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOfWithDefaults() *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf {
	this := FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) SetError(v string) {
	o.Error = &v
}

func (o FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf struct {
	value *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf
	isSet bool
}

func (v NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) Get() *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf {
	return v.value
}

func (v *NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) Set(val *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf(val *FirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) *NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf {
	return &NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf{value: val, isSet: true}
}

func (v NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallFwsetSaveResponseResponseAllOfErrorsInnerAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


