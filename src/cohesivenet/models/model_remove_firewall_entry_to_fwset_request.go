/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// RemoveFirewallEntryToFwsetRequest struct for RemoveFirewallEntryToFwsetRequest
type RemoveFirewallEntryToFwsetRequest struct {
	// resolved or resolvable entry to delete
	Entry string `json:"entry"`
}

// NewRemoveFirewallEntryToFwsetRequest instantiates a new RemoveFirewallEntryToFwsetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveFirewallEntryToFwsetRequest(entry string) *RemoveFirewallEntryToFwsetRequest {
	this := RemoveFirewallEntryToFwsetRequest{}
	this.Entry = entry
	return &this
}

// NewRemoveFirewallEntryToFwsetRequestWithDefaults instantiates a new RemoveFirewallEntryToFwsetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveFirewallEntryToFwsetRequestWithDefaults() *RemoveFirewallEntryToFwsetRequest {
	this := RemoveFirewallEntryToFwsetRequest{}
	return &this
}

// GetEntry returns the Entry field value
func (o *RemoveFirewallEntryToFwsetRequest) GetEntry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *RemoveFirewallEntryToFwsetRequest) GetEntryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *RemoveFirewallEntryToFwsetRequest) SetEntry(v string) {
	o.Entry = v
}

func (o RemoveFirewallEntryToFwsetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}
	return json.Marshal(toSerialize)
}

type NullableRemoveFirewallEntryToFwsetRequest struct {
	value *RemoveFirewallEntryToFwsetRequest
	isSet bool
}

func (v NullableRemoveFirewallEntryToFwsetRequest) Get() *RemoveFirewallEntryToFwsetRequest {
	return v.value
}

func (v *NullableRemoveFirewallEntryToFwsetRequest) Set(val *RemoveFirewallEntryToFwsetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveFirewallEntryToFwsetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveFirewallEntryToFwsetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveFirewallEntryToFwsetRequest(val *RemoveFirewallEntryToFwsetRequest) *NullableRemoveFirewallEntryToFwsetRequest {
	return &NullableRemoveFirewallEntryToFwsetRequest{value: val, isSet: true}
}

func (v NullableRemoveFirewallEntryToFwsetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveFirewallEntryToFwsetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


