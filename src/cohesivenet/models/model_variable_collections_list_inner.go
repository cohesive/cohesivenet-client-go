/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// VariableCollectionsListInner struct for VariableCollectionsListInner
type VariableCollectionsListInner struct {
	Name *string `json:"name,omitempty"`
	// variable name prefix. All variables in collection start with prefix.
	Prefix *string `json:"prefix,omitempty"`
}

// NewVariableCollectionsListInner instantiates a new VariableCollectionsListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableCollectionsListInner() *VariableCollectionsListInner {
	this := VariableCollectionsListInner{}
	return &this
}

// NewVariableCollectionsListInnerWithDefaults instantiates a new VariableCollectionsListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableCollectionsListInnerWithDefaults() *VariableCollectionsListInner {
	this := VariableCollectionsListInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VariableCollectionsListInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableCollectionsListInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VariableCollectionsListInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VariableCollectionsListInner) SetName(v string) {
	o.Name = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *VariableCollectionsListInner) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariableCollectionsListInner) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *VariableCollectionsListInner) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *VariableCollectionsListInner) SetPrefix(v string) {
	o.Prefix = &v
}

func (o VariableCollectionsListInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	return json.Marshal(toSerialize)
}

type NullableVariableCollectionsListInner struct {
	value *VariableCollectionsListInner
	isSet bool
}

func (v NullableVariableCollectionsListInner) Get() *VariableCollectionsListInner {
	return v.value
}

func (v *NullableVariableCollectionsListInner) Set(val *VariableCollectionsListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableCollectionsListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableCollectionsListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableCollectionsListInner(val *VariableCollectionsListInner) *NullableVariableCollectionsListInner {
	return &NullableVariableCollectionsListInner{value: val, isSet: true}
}

func (v NullableVariableCollectionsListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableCollectionsListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


