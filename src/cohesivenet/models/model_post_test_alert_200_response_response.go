/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// PostTestAlert200ResponseResponse struct for PostTestAlert200ResponseResponse
type PostTestAlert200ResponseResponse struct {
	// success or failed
	Status *string `json:"status,omitempty"`
	// status code
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewPostTestAlert200ResponseResponse instantiates a new PostTestAlert200ResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestAlert200ResponseResponse() *PostTestAlert200ResponseResponse {
	this := PostTestAlert200ResponseResponse{}
	return &this
}

// NewPostTestAlert200ResponseResponseWithDefaults instantiates a new PostTestAlert200ResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestAlert200ResponseResponseWithDefaults() *PostTestAlert200ResponseResponse {
	this := PostTestAlert200ResponseResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostTestAlert200ResponseResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestAlert200ResponseResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostTestAlert200ResponseResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostTestAlert200ResponseResponse) SetStatus(v string) {
	o.Status = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PostTestAlert200ResponseResponse) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestAlert200ResponseResponse) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PostTestAlert200ResponseResponse) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PostTestAlert200ResponseResponse) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PostTestAlert200ResponseResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestAlert200ResponseResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PostTestAlert200ResponseResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PostTestAlert200ResponseResponse) SetMessage(v string) {
	o.Message = &v
}

func (o PostTestAlert200ResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestAlert200ResponseResponse struct {
	value *PostTestAlert200ResponseResponse
	isSet bool
}

func (v NullablePostTestAlert200ResponseResponse) Get() *PostTestAlert200ResponseResponse {
	return v.value
}

func (v *NullablePostTestAlert200ResponseResponse) Set(val *PostTestAlert200ResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestAlert200ResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestAlert200ResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestAlert200ResponseResponse(val *PostTestAlert200ResponseResponse) *NullablePostTestAlert200ResponseResponse {
	return &NullablePostTestAlert200ResponseResponse{value: val, isSet: true}
}

func (v NullablePostTestAlert200ResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestAlert200ResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


