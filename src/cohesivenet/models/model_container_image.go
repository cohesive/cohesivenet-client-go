/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
	"time"
)

// ContainerImage struct for ContainerImage
type ContainerImage struct {
	Id NullableString `json:"id,omitempty"`
	ImageName *string `json:"image_name,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMsg NullableString `json:"status_msg,omitempty"`
	ImportId *string `json:"import_id,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Description *string `json:"description,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	ContainerConfig NullableContainerConfig `json:"container_config,omitempty"`
}

// NewContainerImage instantiates a new ContainerImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerImage() *ContainerImage {
	this := ContainerImage{}
	return &this
}

// NewContainerImageWithDefaults instantiates a new ContainerImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerImageWithDefaults() *ContainerImage {
	this := ContainerImage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerImage) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerImage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ContainerImage) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ContainerImage) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ContainerImage) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ContainerImage) UnsetId() {
	o.Id.Unset()
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *ContainerImage) GetImageName() string {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetImageNameOk() (*string, bool) {
	if o == nil || o.ImageName == nil {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *ContainerImage) HasImageName() bool {
	if o != nil && o.ImageName != nil {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *ContainerImage) SetImageName(v string) {
	o.ImageName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ContainerImage) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ContainerImage) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ContainerImage) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMsg returns the StatusMsg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerImage) GetStatusMsg() string {
	if o == nil || o.StatusMsg.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMsg.Get()
}

// GetStatusMsgOk returns a tuple with the StatusMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerImage) GetStatusMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusMsg.Get(), o.StatusMsg.IsSet()
}

// HasStatusMsg returns a boolean if a field has been set.
func (o *ContainerImage) HasStatusMsg() bool {
	if o != nil && o.StatusMsg.IsSet() {
		return true
	}

	return false
}

// SetStatusMsg gets a reference to the given NullableString and assigns it to the StatusMsg field.
func (o *ContainerImage) SetStatusMsg(v string) {
	o.StatusMsg.Set(&v)
}
// SetStatusMsgNil sets the value for StatusMsg to be an explicit nil
func (o *ContainerImage) SetStatusMsgNil() {
	o.StatusMsg.Set(nil)
}

// UnsetStatusMsg ensures that no value is present for StatusMsg, not even an explicit nil
func (o *ContainerImage) UnsetStatusMsg() {
	o.StatusMsg.Unset()
}

// GetImportId returns the ImportId field value if set, zero value otherwise.
func (o *ContainerImage) GetImportId() string {
	if o == nil || o.ImportId == nil {
		var ret string
		return ret
	}
	return *o.ImportId
}

// GetImportIdOk returns a tuple with the ImportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetImportIdOk() (*string, bool) {
	if o == nil || o.ImportId == nil {
		return nil, false
	}
	return o.ImportId, true
}

// HasImportId returns a boolean if a field has been set.
func (o *ContainerImage) HasImportId() bool {
	if o != nil && o.ImportId != nil {
		return true
	}

	return false
}

// SetImportId gets a reference to the given string and assigns it to the ImportId field.
func (o *ContainerImage) SetImportId(v string) {
	o.ImportId = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ContainerImage) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ContainerImage) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ContainerImage) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ContainerImage) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ContainerImage) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ContainerImage) SetDescription(v string) {
	o.Description = &v
}

// GetTagName returns the TagName field value if set, zero value otherwise.
func (o *ContainerImage) GetTagName() string {
	if o == nil || o.TagName == nil {
		var ret string
		return ret
	}
	return *o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImage) GetTagNameOk() (*string, bool) {
	if o == nil || o.TagName == nil {
		return nil, false
	}
	return o.TagName, true
}

// HasTagName returns a boolean if a field has been set.
func (o *ContainerImage) HasTagName() bool {
	if o != nil && o.TagName != nil {
		return true
	}

	return false
}

// SetTagName gets a reference to the given string and assigns it to the TagName field.
func (o *ContainerImage) SetTagName(v string) {
	o.TagName = &v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerImage) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerImage) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *ContainerImage) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *ContainerImage) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *ContainerImage) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *ContainerImage) UnsetComment() {
	o.Comment.Unset()
}

// GetContainerConfig returns the ContainerConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerImage) GetContainerConfig() ContainerConfig {
	if o == nil || o.ContainerConfig.Get() == nil {
		var ret ContainerConfig
		return ret
	}
	return *o.ContainerConfig.Get()
}

// GetContainerConfigOk returns a tuple with the ContainerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerImage) GetContainerConfigOk() (*ContainerConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerConfig.Get(), o.ContainerConfig.IsSet()
}

// HasContainerConfig returns a boolean if a field has been set.
func (o *ContainerImage) HasContainerConfig() bool {
	if o != nil && o.ContainerConfig.IsSet() {
		return true
	}

	return false
}

// SetContainerConfig gets a reference to the given NullableContainerConfig and assigns it to the ContainerConfig field.
func (o *ContainerImage) SetContainerConfig(v ContainerConfig) {
	o.ContainerConfig.Set(&v)
}
// SetContainerConfigNil sets the value for ContainerConfig to be an explicit nil
func (o *ContainerImage) SetContainerConfigNil() {
	o.ContainerConfig.Set(nil)
}

// UnsetContainerConfig ensures that no value is present for ContainerConfig, not even an explicit nil
func (o *ContainerImage) UnsetContainerConfig() {
	o.ContainerConfig.Unset()
}

func (o ContainerImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.ImageName != nil {
		toSerialize["image_name"] = o.ImageName
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMsg.IsSet() {
		toSerialize["status_msg"] = o.StatusMsg.Get()
	}
	if o.ImportId != nil {
		toSerialize["import_id"] = o.ImportId
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.TagName != nil {
		toSerialize["tag_name"] = o.TagName
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if o.ContainerConfig.IsSet() {
		toSerialize["container_config"] = o.ContainerConfig.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableContainerImage struct {
	value *ContainerImage
	isSet bool
}

func (v NullableContainerImage) Get() *ContainerImage {
	return v.value
}

func (v *NullableContainerImage) Set(val *ContainerImage) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerImage) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerImage(val *ContainerImage) *NullableContainerImage {
	return &NullableContainerImage{value: val, isSet: true}
}

func (v NullableContainerImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


