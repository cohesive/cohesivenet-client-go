/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// IdentityRadiusSettingsRequest struct for IdentityRadiusSettingsRequest
type IdentityRadiusSettingsRequest struct {
	// IP address or resolvable hostname
	Server *string `json:"server,omitempty"`
	// Authentication port
	AuthPort *int32 `json:"auth_port,omitempty"`
	AccountingPort *int32 `json:"accounting_port,omitempty"`
	// Shared password
	Pass *string `json:"pass,omitempty"`
	Provider string `json:"provider"`
	Enabled bool `json:"enabled"`
}

// NewIdentityRadiusSettingsRequest instantiates a new IdentityRadiusSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityRadiusSettingsRequest(provider string, enabled bool) *IdentityRadiusSettingsRequest {
	this := IdentityRadiusSettingsRequest{}
	var authPort int32 = 1812
	this.AuthPort = &authPort
	var accountingPort int32 = 1812
	this.AccountingPort = &accountingPort
	this.Provider = provider
	this.Enabled = enabled
	return &this
}

// NewIdentityRadiusSettingsRequestWithDefaults instantiates a new IdentityRadiusSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityRadiusSettingsRequestWithDefaults() *IdentityRadiusSettingsRequest {
	this := IdentityRadiusSettingsRequest{}
	var authPort int32 = 1812
	this.AuthPort = &authPort
	var accountingPort int32 = 1812
	this.AccountingPort = &accountingPort
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *IdentityRadiusSettingsRequest) GetServer() string {
	if o == nil || o.Server == nil {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetServerOk() (*string, bool) {
	if o == nil || o.Server == nil {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *IdentityRadiusSettingsRequest) HasServer() bool {
	if o != nil && o.Server != nil {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *IdentityRadiusSettingsRequest) SetServer(v string) {
	o.Server = &v
}

// GetAuthPort returns the AuthPort field value if set, zero value otherwise.
func (o *IdentityRadiusSettingsRequest) GetAuthPort() int32 {
	if o == nil || o.AuthPort == nil {
		var ret int32
		return ret
	}
	return *o.AuthPort
}

// GetAuthPortOk returns a tuple with the AuthPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetAuthPortOk() (*int32, bool) {
	if o == nil || o.AuthPort == nil {
		return nil, false
	}
	return o.AuthPort, true
}

// HasAuthPort returns a boolean if a field has been set.
func (o *IdentityRadiusSettingsRequest) HasAuthPort() bool {
	if o != nil && o.AuthPort != nil {
		return true
	}

	return false
}

// SetAuthPort gets a reference to the given int32 and assigns it to the AuthPort field.
func (o *IdentityRadiusSettingsRequest) SetAuthPort(v int32) {
	o.AuthPort = &v
}

// GetAccountingPort returns the AccountingPort field value if set, zero value otherwise.
func (o *IdentityRadiusSettingsRequest) GetAccountingPort() int32 {
	if o == nil || o.AccountingPort == nil {
		var ret int32
		return ret
	}
	return *o.AccountingPort
}

// GetAccountingPortOk returns a tuple with the AccountingPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetAccountingPortOk() (*int32, bool) {
	if o == nil || o.AccountingPort == nil {
		return nil, false
	}
	return o.AccountingPort, true
}

// HasAccountingPort returns a boolean if a field has been set.
func (o *IdentityRadiusSettingsRequest) HasAccountingPort() bool {
	if o != nil && o.AccountingPort != nil {
		return true
	}

	return false
}

// SetAccountingPort gets a reference to the given int32 and assigns it to the AccountingPort field.
func (o *IdentityRadiusSettingsRequest) SetAccountingPort(v int32) {
	o.AccountingPort = &v
}

// GetPass returns the Pass field value if set, zero value otherwise.
func (o *IdentityRadiusSettingsRequest) GetPass() string {
	if o == nil || o.Pass == nil {
		var ret string
		return ret
	}
	return *o.Pass
}

// GetPassOk returns a tuple with the Pass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetPassOk() (*string, bool) {
	if o == nil || o.Pass == nil {
		return nil, false
	}
	return o.Pass, true
}

// HasPass returns a boolean if a field has been set.
func (o *IdentityRadiusSettingsRequest) HasPass() bool {
	if o != nil && o.Pass != nil {
		return true
	}

	return false
}

// SetPass gets a reference to the given string and assigns it to the Pass field.
func (o *IdentityRadiusSettingsRequest) SetPass(v string) {
	o.Pass = &v
}

// GetProvider returns the Provider field value
func (o *IdentityRadiusSettingsRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *IdentityRadiusSettingsRequest) SetProvider(v string) {
	o.Provider = v
}

// GetEnabled returns the Enabled field value
func (o *IdentityRadiusSettingsRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *IdentityRadiusSettingsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *IdentityRadiusSettingsRequest) SetEnabled(v bool) {
	o.Enabled = v
}

func (o IdentityRadiusSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Server != nil {
		toSerialize["server"] = o.Server
	}
	if o.AuthPort != nil {
		toSerialize["auth_port"] = o.AuthPort
	}
	if o.AccountingPort != nil {
		toSerialize["accounting_port"] = o.AccountingPort
	}
	if o.Pass != nil {
		toSerialize["pass"] = o.Pass
	}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityRadiusSettingsRequest struct {
	value *IdentityRadiusSettingsRequest
	isSet bool
}

func (v NullableIdentityRadiusSettingsRequest) Get() *IdentityRadiusSettingsRequest {
	return v.value
}

func (v *NullableIdentityRadiusSettingsRequest) Set(val *IdentityRadiusSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityRadiusSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityRadiusSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityRadiusSettingsRequest(val *IdentityRadiusSettingsRequest) *NullableIdentityRadiusSettingsRequest {
	return &NullableIdentityRadiusSettingsRequest{value: val, isSet: true}
}

func (v NullableIdentityRadiusSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityRadiusSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


