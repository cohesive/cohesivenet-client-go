/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
	"time"
)

// FirewallFwSetEntry struct for FirewallFwSetEntry
type FirewallFwSetEntry struct {
	Entry *string `json:"entry,omitempty"`
	Comment *string `json:"comment,omitempty"`
	EntryResolved *string `json:"entry_resolved,omitempty"`
	LastResolved *time.Time `json:"last_resolved,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewFirewallFwSetEntry instantiates a new FirewallFwSetEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirewallFwSetEntry() *FirewallFwSetEntry {
	this := FirewallFwSetEntry{}
	return &this
}

// NewFirewallFwSetEntryWithDefaults instantiates a new FirewallFwSetEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirewallFwSetEntryWithDefaults() *FirewallFwSetEntry {
	this := FirewallFwSetEntry{}
	return &this
}

// GetEntry returns the Entry field value if set, zero value otherwise.
func (o *FirewallFwSetEntry) GetEntry() string {
	if o == nil || o.Entry == nil {
		var ret string
		return ret
	}
	return *o.Entry
}

// GetEntryOk returns a tuple with the Entry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwSetEntry) GetEntryOk() (*string, bool) {
	if o == nil || o.Entry == nil {
		return nil, false
	}
	return o.Entry, true
}

// HasEntry returns a boolean if a field has been set.
func (o *FirewallFwSetEntry) HasEntry() bool {
	if o != nil && o.Entry != nil {
		return true
	}

	return false
}

// SetEntry gets a reference to the given string and assigns it to the Entry field.
func (o *FirewallFwSetEntry) SetEntry(v string) {
	o.Entry = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *FirewallFwSetEntry) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwSetEntry) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *FirewallFwSetEntry) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *FirewallFwSetEntry) SetComment(v string) {
	o.Comment = &v
}

// GetEntryResolved returns the EntryResolved field value if set, zero value otherwise.
func (o *FirewallFwSetEntry) GetEntryResolved() string {
	if o == nil || o.EntryResolved == nil {
		var ret string
		return ret
	}
	return *o.EntryResolved
}

// GetEntryResolvedOk returns a tuple with the EntryResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwSetEntry) GetEntryResolvedOk() (*string, bool) {
	if o == nil || o.EntryResolved == nil {
		return nil, false
	}
	return o.EntryResolved, true
}

// HasEntryResolved returns a boolean if a field has been set.
func (o *FirewallFwSetEntry) HasEntryResolved() bool {
	if o != nil && o.EntryResolved != nil {
		return true
	}

	return false
}

// SetEntryResolved gets a reference to the given string and assigns it to the EntryResolved field.
func (o *FirewallFwSetEntry) SetEntryResolved(v string) {
	o.EntryResolved = &v
}

// GetLastResolved returns the LastResolved field value if set, zero value otherwise.
func (o *FirewallFwSetEntry) GetLastResolved() time.Time {
	if o == nil || o.LastResolved == nil {
		var ret time.Time
		return ret
	}
	return *o.LastResolved
}

// GetLastResolvedOk returns a tuple with the LastResolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwSetEntry) GetLastResolvedOk() (*time.Time, bool) {
	if o == nil || o.LastResolved == nil {
		return nil, false
	}
	return o.LastResolved, true
}

// HasLastResolved returns a boolean if a field has been set.
func (o *FirewallFwSetEntry) HasLastResolved() bool {
	if o != nil && o.LastResolved != nil {
		return true
	}

	return false
}

// SetLastResolved gets a reference to the given time.Time and assigns it to the LastResolved field.
func (o *FirewallFwSetEntry) SetLastResolved(v time.Time) {
	o.LastResolved = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FirewallFwSetEntry) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirewallFwSetEntry) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FirewallFwSetEntry) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FirewallFwSetEntry) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o FirewallFwSetEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entry != nil {
		toSerialize["entry"] = o.Entry
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.EntryResolved != nil {
		toSerialize["entry_resolved"] = o.EntryResolved
	}
	if o.LastResolved != nil {
		toSerialize["last_resolved"] = o.LastResolved
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableFirewallFwSetEntry struct {
	value *FirewallFwSetEntry
	isSet bool
}

func (v NullableFirewallFwSetEntry) Get() *FirewallFwSetEntry {
	return v.value
}

func (v *NullableFirewallFwSetEntry) Set(val *FirewallFwSetEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableFirewallFwSetEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableFirewallFwSetEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirewallFwSetEntry(val *FirewallFwSetEntry) *NullableFirewallFwSetEntry {
	return &NullableFirewallFwSetEntry{value: val, isSet: true}
}

func (v NullableFirewallFwSetEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirewallFwSetEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


