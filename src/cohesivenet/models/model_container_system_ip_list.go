/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// ContainerSystemIPList struct for ContainerSystemIPList
type ContainerSystemIPList struct {
	Addresses []ContainerSystemIP `json:"addresses,omitempty"`
}

// NewContainerSystemIPList instantiates a new ContainerSystemIPList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSystemIPList() *ContainerSystemIPList {
	this := ContainerSystemIPList{}
	return &this
}

// NewContainerSystemIPListWithDefaults instantiates a new ContainerSystemIPList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSystemIPListWithDefaults() *ContainerSystemIPList {
	this := ContainerSystemIPList{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *ContainerSystemIPList) GetAddresses() []ContainerSystemIP {
	if o == nil || o.Addresses == nil {
		var ret []ContainerSystemIP
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSystemIPList) GetAddressesOk() ([]ContainerSystemIP, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ContainerSystemIPList) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []ContainerSystemIP and assigns it to the Addresses field.
func (o *ContainerSystemIPList) SetAddresses(v []ContainerSystemIP) {
	o.Addresses = v
}

func (o ContainerSystemIPList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableContainerSystemIPList struct {
	value *ContainerSystemIPList
	isSet bool
}

func (v NullableContainerSystemIPList) Get() *ContainerSystemIPList {
	return v.value
}

func (v *NullableContainerSystemIPList) Set(val *ContainerSystemIPList) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSystemIPList) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSystemIPList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSystemIPList(val *ContainerSystemIPList) *NullableContainerSystemIPList {
	return &NullableContainerSystemIPList{value: val, isSet: true}
}

func (v NullableContainerSystemIPList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSystemIPList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


