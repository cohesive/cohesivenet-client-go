/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// PostTestIdentityVPNSettings200ResponseResponse struct for PostTestIdentityVPNSettings200ResponseResponse
type PostTestIdentityVPNSettings200ResponseResponse struct {
	ConnectSuccess *bool `json:"connect_success,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewPostTestIdentityVPNSettings200ResponseResponse instantiates a new PostTestIdentityVPNSettings200ResponseResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTestIdentityVPNSettings200ResponseResponse() *PostTestIdentityVPNSettings200ResponseResponse {
	this := PostTestIdentityVPNSettings200ResponseResponse{}
	return &this
}

// NewPostTestIdentityVPNSettings200ResponseResponseWithDefaults instantiates a new PostTestIdentityVPNSettings200ResponseResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTestIdentityVPNSettings200ResponseResponseWithDefaults() *PostTestIdentityVPNSettings200ResponseResponse {
	this := PostTestIdentityVPNSettings200ResponseResponse{}
	return &this
}

// GetConnectSuccess returns the ConnectSuccess field value if set, zero value otherwise.
func (o *PostTestIdentityVPNSettings200ResponseResponse) GetConnectSuccess() bool {
	if o == nil || o.ConnectSuccess == nil {
		var ret bool
		return ret
	}
	return *o.ConnectSuccess
}

// GetConnectSuccessOk returns a tuple with the ConnectSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestIdentityVPNSettings200ResponseResponse) GetConnectSuccessOk() (*bool, bool) {
	if o == nil || o.ConnectSuccess == nil {
		return nil, false
	}
	return o.ConnectSuccess, true
}

// HasConnectSuccess returns a boolean if a field has been set.
func (o *PostTestIdentityVPNSettings200ResponseResponse) HasConnectSuccess() bool {
	if o != nil && o.ConnectSuccess != nil {
		return true
	}

	return false
}

// SetConnectSuccess gets a reference to the given bool and assigns it to the ConnectSuccess field.
func (o *PostTestIdentityVPNSettings200ResponseResponse) SetConnectSuccess(v bool) {
	o.ConnectSuccess = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PostTestIdentityVPNSettings200ResponseResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestIdentityVPNSettings200ResponseResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PostTestIdentityVPNSettings200ResponseResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PostTestIdentityVPNSettings200ResponseResponse) SetMessage(v string) {
	o.Message = &v
}

func (o PostTestIdentityVPNSettings200ResponseResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectSuccess != nil {
		toSerialize["connect_success"] = o.ConnectSuccess
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullablePostTestIdentityVPNSettings200ResponseResponse struct {
	value *PostTestIdentityVPNSettings200ResponseResponse
	isSet bool
}

func (v NullablePostTestIdentityVPNSettings200ResponseResponse) Get() *PostTestIdentityVPNSettings200ResponseResponse {
	return v.value
}

func (v *NullablePostTestIdentityVPNSettings200ResponseResponse) Set(val *PostTestIdentityVPNSettings200ResponseResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestIdentityVPNSettings200ResponseResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestIdentityVPNSettings200ResponseResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestIdentityVPNSettings200ResponseResponse(val *PostTestIdentityVPNSettings200ResponseResponse) *NullablePostTestIdentityVPNSettings200ResponseResponse {
	return &NullablePostTestIdentityVPNSettings200ResponseResponse{value: val, isSet: true}
}

func (v NullablePostTestIdentityVPNSettings200ResponseResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestIdentityVPNSettings200ResponseResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


