/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// GREEndpoint struct for GREEndpoint
type GREEndpoint struct {
	EndpointName *string `json:"endpoint_name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	IpInternal NullableString `json:"ip_internal,omitempty"`
	Mtu *int32 `json:"mtu,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	MaskBits NullableString `json:"mask_bits,omitempty"`
	Gateway NullableString `json:"gateway,omitempty"`
	SystemDefault *bool `json:"system_default,omitempty"`
	LocalConnectionIp NullableString `json:"local_connection_ip,omitempty"`
	RemoteConnectionIp NullableString `json:"remote_connection_ip,omitempty"`
	Ttl *int32 `json:"ttl,omitempty"`
	Id *int32 `json:"id,omitempty"`
	InterfaceId *int32 `json:"interface_id,omitempty"`
	IpExternal NullableString `json:"ip_external,omitempty"`
	Name *string `json:"name,omitempty"`
	// system or system_virtual
	InterfaceType *string `json:"interface_type,omitempty"`
	// Availability of interface, Up or Down
	Status *string `json:"status,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewGREEndpoint instantiates a new GREEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGREEndpoint() *GREEndpoint {
	this := GREEndpoint{}
	var enabled bool = false
	this.Enabled = &enabled
	var systemDefault bool = false
	this.SystemDefault = &systemDefault
	var ttl int32 = 255
	this.Ttl = &ttl
	return &this
}

// NewGREEndpointWithDefaults instantiates a new GREEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGREEndpointWithDefaults() *GREEndpoint {
	this := GREEndpoint{}
	var enabled bool = false
	this.Enabled = &enabled
	var systemDefault bool = false
	this.SystemDefault = &systemDefault
	var ttl int32 = 255
	this.Ttl = &ttl
	return &this
}

// GetEndpointName returns the EndpointName field value if set, zero value otherwise.
func (o *GREEndpoint) GetEndpointName() string {
	if o == nil || o.EndpointName == nil {
		var ret string
		return ret
	}
	return *o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetEndpointNameOk() (*string, bool) {
	if o == nil || o.EndpointName == nil {
		return nil, false
	}
	return o.EndpointName, true
}

// HasEndpointName returns a boolean if a field has been set.
func (o *GREEndpoint) HasEndpointName() bool {
	if o != nil && o.EndpointName != nil {
		return true
	}

	return false
}

// SetEndpointName gets a reference to the given string and assigns it to the EndpointName field.
func (o *GREEndpoint) SetEndpointName(v string) {
	o.EndpointName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GREEndpoint) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GREEndpoint) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GREEndpoint) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GREEndpoint) UnsetDescription() {
	o.Description.Unset()
}

// GetIpInternal returns the IpInternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetIpInternal() string {
	if o == nil || o.IpInternal.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpInternal.Get()
}

// GetIpInternalOk returns a tuple with the IpInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetIpInternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpInternal.Get(), o.IpInternal.IsSet()
}

// HasIpInternal returns a boolean if a field has been set.
func (o *GREEndpoint) HasIpInternal() bool {
	if o != nil && o.IpInternal.IsSet() {
		return true
	}

	return false
}

// SetIpInternal gets a reference to the given NullableString and assigns it to the IpInternal field.
func (o *GREEndpoint) SetIpInternal(v string) {
	o.IpInternal.Set(&v)
}
// SetIpInternalNil sets the value for IpInternal to be an explicit nil
func (o *GREEndpoint) SetIpInternalNil() {
	o.IpInternal.Set(nil)
}

// UnsetIpInternal ensures that no value is present for IpInternal, not even an explicit nil
func (o *GREEndpoint) UnsetIpInternal() {
	o.IpInternal.Unset()
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *GREEndpoint) GetMtu() int32 {
	if o == nil || o.Mtu == nil {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetMtuOk() (*int32, bool) {
	if o == nil || o.Mtu == nil {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *GREEndpoint) HasMtu() bool {
	if o != nil && o.Mtu != nil {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *GREEndpoint) SetMtu(v int32) {
	o.Mtu = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GREEndpoint) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GREEndpoint) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GREEndpoint) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaskBits returns the MaskBits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetMaskBits() string {
	if o == nil || o.MaskBits.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaskBits.Get()
}

// GetMaskBitsOk returns a tuple with the MaskBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetMaskBitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaskBits.Get(), o.MaskBits.IsSet()
}

// HasMaskBits returns a boolean if a field has been set.
func (o *GREEndpoint) HasMaskBits() bool {
	if o != nil && o.MaskBits.IsSet() {
		return true
	}

	return false
}

// SetMaskBits gets a reference to the given NullableString and assigns it to the MaskBits field.
func (o *GREEndpoint) SetMaskBits(v string) {
	o.MaskBits.Set(&v)
}
// SetMaskBitsNil sets the value for MaskBits to be an explicit nil
func (o *GREEndpoint) SetMaskBitsNil() {
	o.MaskBits.Set(nil)
}

// UnsetMaskBits ensures that no value is present for MaskBits, not even an explicit nil
func (o *GREEndpoint) UnsetMaskBits() {
	o.MaskBits.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *GREEndpoint) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *GREEndpoint) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *GREEndpoint) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *GREEndpoint) UnsetGateway() {
	o.Gateway.Unset()
}

// GetSystemDefault returns the SystemDefault field value if set, zero value otherwise.
func (o *GREEndpoint) GetSystemDefault() bool {
	if o == nil || o.SystemDefault == nil {
		var ret bool
		return ret
	}
	return *o.SystemDefault
}

// GetSystemDefaultOk returns a tuple with the SystemDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetSystemDefaultOk() (*bool, bool) {
	if o == nil || o.SystemDefault == nil {
		return nil, false
	}
	return o.SystemDefault, true
}

// HasSystemDefault returns a boolean if a field has been set.
func (o *GREEndpoint) HasSystemDefault() bool {
	if o != nil && o.SystemDefault != nil {
		return true
	}

	return false
}

// SetSystemDefault gets a reference to the given bool and assigns it to the SystemDefault field.
func (o *GREEndpoint) SetSystemDefault(v bool) {
	o.SystemDefault = &v
}

// GetLocalConnectionIp returns the LocalConnectionIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetLocalConnectionIp() string {
	if o == nil || o.LocalConnectionIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.LocalConnectionIp.Get()
}

// GetLocalConnectionIpOk returns a tuple with the LocalConnectionIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetLocalConnectionIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalConnectionIp.Get(), o.LocalConnectionIp.IsSet()
}

// HasLocalConnectionIp returns a boolean if a field has been set.
func (o *GREEndpoint) HasLocalConnectionIp() bool {
	if o != nil && o.LocalConnectionIp.IsSet() {
		return true
	}

	return false
}

// SetLocalConnectionIp gets a reference to the given NullableString and assigns it to the LocalConnectionIp field.
func (o *GREEndpoint) SetLocalConnectionIp(v string) {
	o.LocalConnectionIp.Set(&v)
}
// SetLocalConnectionIpNil sets the value for LocalConnectionIp to be an explicit nil
func (o *GREEndpoint) SetLocalConnectionIpNil() {
	o.LocalConnectionIp.Set(nil)
}

// UnsetLocalConnectionIp ensures that no value is present for LocalConnectionIp, not even an explicit nil
func (o *GREEndpoint) UnsetLocalConnectionIp() {
	o.LocalConnectionIp.Unset()
}

// GetRemoteConnectionIp returns the RemoteConnectionIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetRemoteConnectionIp() string {
	if o == nil || o.RemoteConnectionIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteConnectionIp.Get()
}

// GetRemoteConnectionIpOk returns a tuple with the RemoteConnectionIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetRemoteConnectionIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoteConnectionIp.Get(), o.RemoteConnectionIp.IsSet()
}

// HasRemoteConnectionIp returns a boolean if a field has been set.
func (o *GREEndpoint) HasRemoteConnectionIp() bool {
	if o != nil && o.RemoteConnectionIp.IsSet() {
		return true
	}

	return false
}

// SetRemoteConnectionIp gets a reference to the given NullableString and assigns it to the RemoteConnectionIp field.
func (o *GREEndpoint) SetRemoteConnectionIp(v string) {
	o.RemoteConnectionIp.Set(&v)
}
// SetRemoteConnectionIpNil sets the value for RemoteConnectionIp to be an explicit nil
func (o *GREEndpoint) SetRemoteConnectionIpNil() {
	o.RemoteConnectionIp.Set(nil)
}

// UnsetRemoteConnectionIp ensures that no value is present for RemoteConnectionIp, not even an explicit nil
func (o *GREEndpoint) UnsetRemoteConnectionIp() {
	o.RemoteConnectionIp.Unset()
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GREEndpoint) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GREEndpoint) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GREEndpoint) SetTtl(v int32) {
	o.Ttl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GREEndpoint) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GREEndpoint) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GREEndpoint) SetId(v int32) {
	o.Id = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *GREEndpoint) GetInterfaceId() int32 {
	if o == nil || o.InterfaceId == nil {
		var ret int32
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetInterfaceIdOk() (*int32, bool) {
	if o == nil || o.InterfaceId == nil {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *GREEndpoint) HasInterfaceId() bool {
	if o != nil && o.InterfaceId != nil {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given int32 and assigns it to the InterfaceId field.
func (o *GREEndpoint) SetInterfaceId(v int32) {
	o.InterfaceId = &v
}

// GetIpExternal returns the IpExternal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GREEndpoint) GetIpExternal() string {
	if o == nil || o.IpExternal.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpExternal.Get()
}

// GetIpExternalOk returns a tuple with the IpExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GREEndpoint) GetIpExternalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpExternal.Get(), o.IpExternal.IsSet()
}

// HasIpExternal returns a boolean if a field has been set.
func (o *GREEndpoint) HasIpExternal() bool {
	if o != nil && o.IpExternal.IsSet() {
		return true
	}

	return false
}

// SetIpExternal gets a reference to the given NullableString and assigns it to the IpExternal field.
func (o *GREEndpoint) SetIpExternal(v string) {
	o.IpExternal.Set(&v)
}
// SetIpExternalNil sets the value for IpExternal to be an explicit nil
func (o *GREEndpoint) SetIpExternalNil() {
	o.IpExternal.Set(nil)
}

// UnsetIpExternal ensures that no value is present for IpExternal, not even an explicit nil
func (o *GREEndpoint) UnsetIpExternal() {
	o.IpExternal.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GREEndpoint) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GREEndpoint) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GREEndpoint) SetName(v string) {
	o.Name = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *GREEndpoint) GetInterfaceType() string {
	if o == nil || o.InterfaceType == nil {
		var ret string
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetInterfaceTypeOk() (*string, bool) {
	if o == nil || o.InterfaceType == nil {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *GREEndpoint) HasInterfaceType() bool {
	if o != nil && o.InterfaceType != nil {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given string and assigns it to the InterfaceType field.
func (o *GREEndpoint) SetInterfaceType(v string) {
	o.InterfaceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GREEndpoint) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GREEndpoint) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GREEndpoint) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GREEndpoint) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GREEndpoint) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GREEndpoint) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GREEndpoint) SetTags(v []string) {
	o.Tags = v
}

func (o GREEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndpointName != nil {
		toSerialize["endpoint_name"] = o.EndpointName
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IpInternal.IsSet() {
		toSerialize["ip_internal"] = o.IpInternal.Get()
	}
	if o.Mtu != nil {
		toSerialize["mtu"] = o.Mtu
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MaskBits.IsSet() {
		toSerialize["mask_bits"] = o.MaskBits.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.SystemDefault != nil {
		toSerialize["system_default"] = o.SystemDefault
	}
	if o.LocalConnectionIp.IsSet() {
		toSerialize["local_connection_ip"] = o.LocalConnectionIp.Get()
	}
	if o.RemoteConnectionIp.IsSet() {
		toSerialize["remote_connection_ip"] = o.RemoteConnectionIp.Get()
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InterfaceId != nil {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if o.IpExternal.IsSet() {
		toSerialize["ip_external"] = o.IpExternal.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InterfaceType != nil {
		toSerialize["interface_type"] = o.InterfaceType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableGREEndpoint struct {
	value *GREEndpoint
	isSet bool
}

func (v NullableGREEndpoint) Get() *GREEndpoint {
	return v.value
}

func (v *NullableGREEndpoint) Set(val *GREEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableGREEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableGREEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGREEndpoint(val *GREEndpoint) *NullableGREEndpoint {
	return &NullableGREEndpoint{value: val, isSet: true}
}

func (v NullableGREEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGREEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


