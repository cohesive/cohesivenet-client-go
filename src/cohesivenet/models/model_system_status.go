/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// SystemStatus struct for SystemStatus
type SystemStatus struct {
	Timestamp *string `json:"timestamp,omitempty"`
	TimestampI *int32 `json:"timestamp_i,omitempty"`
	Vns3Version *string `json:"vns3_version,omitempty"`
	KernelVersion *string `json:"kernel_version,omitempty"`
	Uptime *int32 `json:"uptime,omitempty"`
	Loadavg []string `json:"loadavg,omitempty"`
	Diskinfo [][]string `json:"diskinfo,omitempty"`
	Meminfo []string `json:"meminfo,omitempty"`
	Swapinfo []string `json:"swapinfo,omitempty"`
	ContainerSystem *ContainerSystem `json:"container_system,omitempty"`
	Data *SystemStatusData `json:"data,omitempty"`
}

// NewSystemStatus instantiates a new SystemStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemStatus() *SystemStatus {
	this := SystemStatus{}
	return &this
}

// NewSystemStatusWithDefaults instantiates a new SystemStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemStatusWithDefaults() *SystemStatus {
	this := SystemStatus{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SystemStatus) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SystemStatus) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *SystemStatus) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetTimestampI returns the TimestampI field value if set, zero value otherwise.
func (o *SystemStatus) GetTimestampI() int32 {
	if o == nil || o.TimestampI == nil {
		var ret int32
		return ret
	}
	return *o.TimestampI
}

// GetTimestampIOk returns a tuple with the TimestampI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetTimestampIOk() (*int32, bool) {
	if o == nil || o.TimestampI == nil {
		return nil, false
	}
	return o.TimestampI, true
}

// HasTimestampI returns a boolean if a field has been set.
func (o *SystemStatus) HasTimestampI() bool {
	if o != nil && o.TimestampI != nil {
		return true
	}

	return false
}

// SetTimestampI gets a reference to the given int32 and assigns it to the TimestampI field.
func (o *SystemStatus) SetTimestampI(v int32) {
	o.TimestampI = &v
}

// GetVns3Version returns the Vns3Version field value if set, zero value otherwise.
func (o *SystemStatus) GetVns3Version() string {
	if o == nil || o.Vns3Version == nil {
		var ret string
		return ret
	}
	return *o.Vns3Version
}

// GetVns3VersionOk returns a tuple with the Vns3Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetVns3VersionOk() (*string, bool) {
	if o == nil || o.Vns3Version == nil {
		return nil, false
	}
	return o.Vns3Version, true
}

// HasVns3Version returns a boolean if a field has been set.
func (o *SystemStatus) HasVns3Version() bool {
	if o != nil && o.Vns3Version != nil {
		return true
	}

	return false
}

// SetVns3Version gets a reference to the given string and assigns it to the Vns3Version field.
func (o *SystemStatus) SetVns3Version(v string) {
	o.Vns3Version = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *SystemStatus) GetKernelVersion() string {
	if o == nil || o.KernelVersion == nil {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetKernelVersionOk() (*string, bool) {
	if o == nil || o.KernelVersion == nil {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *SystemStatus) HasKernelVersion() bool {
	if o != nil && o.KernelVersion != nil {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *SystemStatus) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *SystemStatus) GetUptime() int32 {
	if o == nil || o.Uptime == nil {
		var ret int32
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetUptimeOk() (*int32, bool) {
	if o == nil || o.Uptime == nil {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *SystemStatus) HasUptime() bool {
	if o != nil && o.Uptime != nil {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int32 and assigns it to the Uptime field.
func (o *SystemStatus) SetUptime(v int32) {
	o.Uptime = &v
}

// GetLoadavg returns the Loadavg field value if set, zero value otherwise.
func (o *SystemStatus) GetLoadavg() []string {
	if o == nil || o.Loadavg == nil {
		var ret []string
		return ret
	}
	return o.Loadavg
}

// GetLoadavgOk returns a tuple with the Loadavg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetLoadavgOk() ([]string, bool) {
	if o == nil || o.Loadavg == nil {
		return nil, false
	}
	return o.Loadavg, true
}

// HasLoadavg returns a boolean if a field has been set.
func (o *SystemStatus) HasLoadavg() bool {
	if o != nil && o.Loadavg != nil {
		return true
	}

	return false
}

// SetLoadavg gets a reference to the given []string and assigns it to the Loadavg field.
func (o *SystemStatus) SetLoadavg(v []string) {
	o.Loadavg = v
}

// GetDiskinfo returns the Diskinfo field value if set, zero value otherwise.
func (o *SystemStatus) GetDiskinfo() [][]string {
	if o == nil || o.Diskinfo == nil {
		var ret [][]string
		return ret
	}
	return o.Diskinfo
}

// GetDiskinfoOk returns a tuple with the Diskinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetDiskinfoOk() ([][]string, bool) {
	if o == nil || o.Diskinfo == nil {
		return nil, false
	}
	return o.Diskinfo, true
}

// HasDiskinfo returns a boolean if a field has been set.
func (o *SystemStatus) HasDiskinfo() bool {
	if o != nil && o.Diskinfo != nil {
		return true
	}

	return false
}

// SetDiskinfo gets a reference to the given [][]string and assigns it to the Diskinfo field.
func (o *SystemStatus) SetDiskinfo(v [][]string) {
	o.Diskinfo = v
}

// GetMeminfo returns the Meminfo field value if set, zero value otherwise.
func (o *SystemStatus) GetMeminfo() []string {
	if o == nil || o.Meminfo == nil {
		var ret []string
		return ret
	}
	return o.Meminfo
}

// GetMeminfoOk returns a tuple with the Meminfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetMeminfoOk() ([]string, bool) {
	if o == nil || o.Meminfo == nil {
		return nil, false
	}
	return o.Meminfo, true
}

// HasMeminfo returns a boolean if a field has been set.
func (o *SystemStatus) HasMeminfo() bool {
	if o != nil && o.Meminfo != nil {
		return true
	}

	return false
}

// SetMeminfo gets a reference to the given []string and assigns it to the Meminfo field.
func (o *SystemStatus) SetMeminfo(v []string) {
	o.Meminfo = v
}

// GetSwapinfo returns the Swapinfo field value if set, zero value otherwise.
func (o *SystemStatus) GetSwapinfo() []string {
	if o == nil || o.Swapinfo == nil {
		var ret []string
		return ret
	}
	return o.Swapinfo
}

// GetSwapinfoOk returns a tuple with the Swapinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetSwapinfoOk() ([]string, bool) {
	if o == nil || o.Swapinfo == nil {
		return nil, false
	}
	return o.Swapinfo, true
}

// HasSwapinfo returns a boolean if a field has been set.
func (o *SystemStatus) HasSwapinfo() bool {
	if o != nil && o.Swapinfo != nil {
		return true
	}

	return false
}

// SetSwapinfo gets a reference to the given []string and assigns it to the Swapinfo field.
func (o *SystemStatus) SetSwapinfo(v []string) {
	o.Swapinfo = v
}

// GetContainerSystem returns the ContainerSystem field value if set, zero value otherwise.
func (o *SystemStatus) GetContainerSystem() ContainerSystem {
	if o == nil || o.ContainerSystem == nil {
		var ret ContainerSystem
		return ret
	}
	return *o.ContainerSystem
}

// GetContainerSystemOk returns a tuple with the ContainerSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetContainerSystemOk() (*ContainerSystem, bool) {
	if o == nil || o.ContainerSystem == nil {
		return nil, false
	}
	return o.ContainerSystem, true
}

// HasContainerSystem returns a boolean if a field has been set.
func (o *SystemStatus) HasContainerSystem() bool {
	if o != nil && o.ContainerSystem != nil {
		return true
	}

	return false
}

// SetContainerSystem gets a reference to the given ContainerSystem and assigns it to the ContainerSystem field.
func (o *SystemStatus) SetContainerSystem(v ContainerSystem) {
	o.ContainerSystem = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SystemStatus) GetData() SystemStatusData {
	if o == nil || o.Data == nil {
		var ret SystemStatusData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetDataOk() (*SystemStatusData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SystemStatus) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given SystemStatusData and assigns it to the Data field.
func (o *SystemStatus) SetData(v SystemStatusData) {
	o.Data = &v
}

func (o SystemStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.TimestampI != nil {
		toSerialize["timestamp_i"] = o.TimestampI
	}
	if o.Vns3Version != nil {
		toSerialize["vns3_version"] = o.Vns3Version
	}
	if o.KernelVersion != nil {
		toSerialize["kernel_version"] = o.KernelVersion
	}
	if o.Uptime != nil {
		toSerialize["uptime"] = o.Uptime
	}
	if o.Loadavg != nil {
		toSerialize["loadavg"] = o.Loadavg
	}
	if o.Diskinfo != nil {
		toSerialize["diskinfo"] = o.Diskinfo
	}
	if o.Meminfo != nil {
		toSerialize["meminfo"] = o.Meminfo
	}
	if o.Swapinfo != nil {
		toSerialize["swapinfo"] = o.Swapinfo
	}
	if o.ContainerSystem != nil {
		toSerialize["container_system"] = o.ContainerSystem
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSystemStatus struct {
	value *SystemStatus
	isSet bool
}

func (v NullableSystemStatus) Get() *SystemStatus {
	return v.value
}

func (v *NullableSystemStatus) Set(val *SystemStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemStatus(val *SystemStatus) *NullableSystemStatus {
	return &NullableSystemStatus{value: val, isSet: true}
}

func (v NullableSystemStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


