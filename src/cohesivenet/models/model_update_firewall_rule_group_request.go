/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// UpdateFirewallRuleGroupRequest struct for UpdateFirewallRuleGroupRequest
type UpdateFirewallRuleGroupRequest struct {
	// New name for rule group. This will change the URI as the name is the unique ID
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	RuleIds []string `json:"rule_ids,omitempty"`
}

// NewUpdateFirewallRuleGroupRequest instantiates a new UpdateFirewallRuleGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFirewallRuleGroupRequest() *UpdateFirewallRuleGroupRequest {
	this := UpdateFirewallRuleGroupRequest{}
	return &this
}

// NewUpdateFirewallRuleGroupRequestWithDefaults instantiates a new UpdateFirewallRuleGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFirewallRuleGroupRequestWithDefaults() *UpdateFirewallRuleGroupRequest {
	this := UpdateFirewallRuleGroupRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateFirewallRuleGroupRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallRuleGroupRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateFirewallRuleGroupRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateFirewallRuleGroupRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateFirewallRuleGroupRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallRuleGroupRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateFirewallRuleGroupRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateFirewallRuleGroupRequest) SetDescription(v string) {
	o.Description = &v
}

// GetRuleIds returns the RuleIds field value if set, zero value otherwise.
func (o *UpdateFirewallRuleGroupRequest) GetRuleIds() []string {
	if o == nil || o.RuleIds == nil {
		var ret []string
		return ret
	}
	return o.RuleIds
}

// GetRuleIdsOk returns a tuple with the RuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallRuleGroupRequest) GetRuleIdsOk() ([]string, bool) {
	if o == nil || o.RuleIds == nil {
		return nil, false
	}
	return o.RuleIds, true
}

// HasRuleIds returns a boolean if a field has been set.
func (o *UpdateFirewallRuleGroupRequest) HasRuleIds() bool {
	if o != nil && o.RuleIds != nil {
		return true
	}

	return false
}

// SetRuleIds gets a reference to the given []string and assigns it to the RuleIds field.
func (o *UpdateFirewallRuleGroupRequest) SetRuleIds(v []string) {
	o.RuleIds = v
}

func (o UpdateFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.RuleIds != nil {
		toSerialize["rule_ids"] = o.RuleIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateFirewallRuleGroupRequest struct {
	value *UpdateFirewallRuleGroupRequest
	isSet bool
}

func (v NullableUpdateFirewallRuleGroupRequest) Get() *UpdateFirewallRuleGroupRequest {
	return v.value
}

func (v *NullableUpdateFirewallRuleGroupRequest) Set(val *UpdateFirewallRuleGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFirewallRuleGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFirewallRuleGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFirewallRuleGroupRequest(val *UpdateFirewallRuleGroupRequest) *NullableUpdateFirewallRuleGroupRequest {
	return &NullableUpdateFirewallRuleGroupRequest{value: val, isSet: true}
}

func (v NullableUpdateFirewallRuleGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFirewallRuleGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


