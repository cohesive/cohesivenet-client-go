/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// PeerSelfRequest struct for PeerSelfRequest
type PeerSelfRequest struct {
	// Cannot be the same as the id of another manager in the topology, and  cannot be greater than the number of controllers in the topology 
	Id int32 `json:"id"`
	Force *bool `json:"force,omitempty"`
}

// NewPeerSelfRequest instantiates a new PeerSelfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeerSelfRequest(id int32) *PeerSelfRequest {
	this := PeerSelfRequest{}
	this.Id = id
	return &this
}

// NewPeerSelfRequestWithDefaults instantiates a new PeerSelfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeerSelfRequestWithDefaults() *PeerSelfRequest {
	this := PeerSelfRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PeerSelfRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PeerSelfRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PeerSelfRequest) SetId(v int32) {
	o.Id = v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *PeerSelfRequest) GetForce() bool {
	if o == nil || o.Force == nil {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerSelfRequest) GetForceOk() (*bool, bool) {
	if o == nil || o.Force == nil {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *PeerSelfRequest) HasForce() bool {
	if o != nil && o.Force != nil {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *PeerSelfRequest) SetForce(v bool) {
	o.Force = &v
}

func (o PeerSelfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Force != nil {
		toSerialize["force"] = o.Force
	}
	return json.Marshal(toSerialize)
}

type NullablePeerSelfRequest struct {
	value *PeerSelfRequest
	isSet bool
}

func (v NullablePeerSelfRequest) Get() *PeerSelfRequest {
	return v.value
}

func (v *NullablePeerSelfRequest) Set(val *PeerSelfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePeerSelfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePeerSelfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeerSelfRequest(val *PeerSelfRequest) *NullablePeerSelfRequest {
	return &NullablePeerSelfRequest{value: val, isSet: true}
}

func (v NullablePeerSelfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeerSelfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


