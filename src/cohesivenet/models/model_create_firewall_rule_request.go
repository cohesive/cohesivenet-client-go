/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// CreateFirewallRuleRequest struct for CreateFirewallRuleRequest
type CreateFirewallRuleRequest struct {
	// New firewall rule string that needs to be compatible with a Linux \"iptables\" statement
	Rule *string `json:"rule,omitempty"`
	// Position which the rule will be inserted in the list of Firewall rules.  Default is -1, which will post as the next rule in the list 
	Position *int32 `json:"position,omitempty"`
	Comment *string `json:"comment,omitempty"`
	// List of rules to create
	Rules []string `json:"rules,omitempty"`
	// List of groups to add this rule to
	Groups []string `json:"groups,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
}

// NewCreateFirewallRuleRequest instantiates a new CreateFirewallRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFirewallRuleRequest(rule string) *CreateFirewallRuleRequest {
	this := CreateFirewallRuleRequest{}
	this.Rule = &rule
	var position int32 = -1
	this.Position = &position
	return &this
}

// NewCreateFirewallRuleRequestWithDefaults instantiates a new CreateFirewallRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFirewallRuleRequestWithDefaults() *CreateFirewallRuleRequest {
	this := CreateFirewallRuleRequest{}
	var position int32 = -1
	this.Position = &position
	return &this
}

// GetRule returns the Rule field value
func (o *CreateFirewallRuleRequest) GetRule() string {
	if o == nil {
		var ret string
		return ret
	}

	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rule, true
}

// SetRule sets field value
func (o *CreateFirewallRuleRequest) SetRule(v string) {
	o.Rule = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *CreateFirewallRuleRequest) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRuleRequest) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *CreateFirewallRuleRequest) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *CreateFirewallRuleRequest) SetPosition(v int32) {
	o.Position = &v
}

func (o CreateFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rule != nil {
		toSerialize["rule"] = o.Rule
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}

	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}

	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}

	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}

	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFirewallRuleRequest struct {
	value *CreateFirewallRuleRequest
	isSet bool
}

func (v NullableCreateFirewallRuleRequest) Get() *CreateFirewallRuleRequest {
	return v.value
}

func (v *NullableCreateFirewallRuleRequest) Set(val *CreateFirewallRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirewallRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirewallRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirewallRuleRequest(val *CreateFirewallRuleRequest) *NullableCreateFirewallRuleRequest {
	return &NullableCreateFirewallRuleRequest{value: val, isSet: true}
}

func (v NullableCreateFirewallRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirewallRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


