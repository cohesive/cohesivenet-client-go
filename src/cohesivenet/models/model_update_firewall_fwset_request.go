/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// UpdateFirewallFwsetRequest struct for UpdateFirewallFwsetRequest
type UpdateFirewallFwsetRequest struct {
	// Name of fwset. Alphanumeric, _, - characters allowed. No spaces. This will change resource URI.
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Entries []CreateFirewallFwsetRequestEntriesOneOfInner `json:"entries,omitempty"`
}

// NewUpdateFirewallFwsetRequest instantiates a new UpdateFirewallFwsetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFirewallFwsetRequest() *UpdateFirewallFwsetRequest {
	this := UpdateFirewallFwsetRequest{}
	return &this
}

// NewUpdateFirewallFwsetRequestWithDefaults instantiates a new UpdateFirewallFwsetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFirewallFwsetRequestWithDefaults() *UpdateFirewallFwsetRequest {
	this := UpdateFirewallFwsetRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateFirewallFwsetRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallFwsetRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateFirewallFwsetRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateFirewallFwsetRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateFirewallFwsetRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallFwsetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateFirewallFwsetRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateFirewallFwsetRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *UpdateFirewallFwsetRequest) GetEntries() []CreateFirewallFwsetRequestEntriesOneOfInner {
	if o == nil || o.Entries == nil {
		var ret []CreateFirewallFwsetRequestEntriesOneOfInner
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFirewallFwsetRequest) GetEntriesOk() ([]CreateFirewallFwsetRequestEntriesOneOfInner, bool) {
	if o == nil || o.Entries == nil {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *UpdateFirewallFwsetRequest) HasEntries() bool {
	if o != nil && o.Entries != nil {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []CreateFirewallFwsetRequestEntriesOneOfInner and assigns it to the Entries field.
func (o *UpdateFirewallFwsetRequest) SetEntries(v []CreateFirewallFwsetRequestEntriesOneOfInner) {
	o.Entries = v
}

func (o UpdateFirewallFwsetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Entries != nil {
		toSerialize["entries"] = o.Entries
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateFirewallFwsetRequest struct {
	value *UpdateFirewallFwsetRequest
	isSet bool
}

func (v NullableUpdateFirewallFwsetRequest) Get() *UpdateFirewallFwsetRequest {
	return v.value
}

func (v *NullableUpdateFirewallFwsetRequest) Set(val *UpdateFirewallFwsetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFirewallFwsetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFirewallFwsetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFirewallFwsetRequest(val *UpdateFirewallFwsetRequest) *NullableUpdateFirewallFwsetRequest {
	return &NullableUpdateFirewallFwsetRequest{value: val, isSet: true}
}

func (v NullableUpdateFirewallFwsetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFirewallFwsetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


