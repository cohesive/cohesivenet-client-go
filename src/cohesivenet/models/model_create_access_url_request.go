/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// CreateAccessURLRequest struct for CreateAccessURLRequest
type CreateAccessURLRequest struct {
	// Number of seconds before expiration
	Expires *int32 `json:"expires,omitempty"`
	// Optional name
	Name *string `json:"name,omitempty"`
	// Optional name (deprecated)
	Description *string `json:"description,omitempty"`
	// Type of access, remote support (rs) or clientpack (cp:100_1_64_0)
	Access *string `json:"access,omitempty"`
}

// NewCreateAccessURLRequest instantiates a new CreateAccessURLRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessURLRequest() *CreateAccessURLRequest {
	this := CreateAccessURLRequest{}
	var expires int32 = 3600
	this.Expires = &expires
	var access string = "rs"
	this.Access = &access
	return &this
}

// NewCreateAccessURLRequestWithDefaults instantiates a new CreateAccessURLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessURLRequestWithDefaults() *CreateAccessURLRequest {
	this := CreateAccessURLRequest{}
	var expires int32 = 3600
	this.Expires = &expires
	var access string = "rs"
	this.Access = &access
	return &this
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *CreateAccessURLRequest) GetExpires() int32 {
	if o == nil || o.Expires == nil {
		var ret int32
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessURLRequest) GetExpiresOk() (*int32, bool) {
	if o == nil || o.Expires == nil {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *CreateAccessURLRequest) HasExpires() bool {
	if o != nil && o.Expires != nil {
		return true
	}

	return false
}

// SetExpires gets a reference to the given int32 and assigns it to the Expires field.
func (o *CreateAccessURLRequest) SetExpires(v int32) {
	o.Expires = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateAccessURLRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessURLRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateAccessURLRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateAccessURLRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateAccessURLRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessURLRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAccessURLRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateAccessURLRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *CreateAccessURLRequest) GetAccess() string {
	if o == nil || o.Access == nil {
		var ret string
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessURLRequest) GetAccessOk() (*string, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *CreateAccessURLRequest) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given string and assigns it to the Access field.
func (o *CreateAccessURLRequest) SetAccess(v string) {
	o.Access = &v
}

func (o CreateAccessURLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expires != nil {
		toSerialize["expires"] = o.Expires
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessURLRequest struct {
	value *CreateAccessURLRequest
	isSet bool
}

func (v NullableCreateAccessURLRequest) Get() *CreateAccessURLRequest {
	return v.value
}

func (v *NullableCreateAccessURLRequest) Set(val *CreateAccessURLRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessURLRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessURLRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessURLRequest(val *CreateAccessURLRequest) *NullableCreateAccessURLRequest {
	return &NullableCreateAccessURLRequest{value: val, isSet: true}
}

func (v NullableCreateAccessURLRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessURLRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


