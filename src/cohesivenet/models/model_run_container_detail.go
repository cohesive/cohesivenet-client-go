/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet_models

import (
	"encoding/json"
)

// RunContainerDetail struct for RunContainerDetail
type RunContainerDetail struct {
	Uuid *string `json:"uuid,omitempty"`
	ContainerStarted *bool `json:"container_started,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
	// Container system status for allocated container
	Status *string `json:"status,omitempty"`
}

// NewRunContainerDetail instantiates a new RunContainerDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunContainerDetail() *RunContainerDetail {
	this := RunContainerDetail{}
	return &this
}

// NewRunContainerDetailWithDefaults instantiates a new RunContainerDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunContainerDetailWithDefaults() *RunContainerDetail {
	this := RunContainerDetail{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *RunContainerDetail) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunContainerDetail) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *RunContainerDetail) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *RunContainerDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetContainerStarted returns the ContainerStarted field value if set, zero value otherwise.
func (o *RunContainerDetail) GetContainerStarted() bool {
	if o == nil || o.ContainerStarted == nil {
		var ret bool
		return ret
	}
	return *o.ContainerStarted
}

// GetContainerStartedOk returns a tuple with the ContainerStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunContainerDetail) GetContainerStartedOk() (*bool, bool) {
	if o == nil || o.ContainerStarted == nil {
		return nil, false
	}
	return o.ContainerStarted, true
}

// HasContainerStarted returns a boolean if a field has been set.
func (o *RunContainerDetail) HasContainerStarted() bool {
	if o != nil && o.ContainerStarted != nil {
		return true
	}

	return false
}

// SetContainerStarted gets a reference to the given bool and assigns it to the ContainerStarted field.
func (o *RunContainerDetail) SetContainerStarted(v bool) {
	o.ContainerStarted = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *RunContainerDetail) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunContainerDetail) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *RunContainerDetail) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *RunContainerDetail) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RunContainerDetail) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunContainerDetail) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RunContainerDetail) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *RunContainerDetail) SetStatus(v string) {
	o.Status = &v
}

func (o RunContainerDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.ContainerStarted != nil {
		toSerialize["container_started"] = o.ContainerStarted
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableRunContainerDetail struct {
	value *RunContainerDetail
	isSet bool
}

func (v NullableRunContainerDetail) Get() *RunContainerDetail {
	return v.value
}

func (v *NullableRunContainerDetail) Set(val *RunContainerDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableRunContainerDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableRunContainerDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunContainerDetail(val *RunContainerDetail) *NullableRunContainerDetail {
	return &NullableRunContainerDetail{value: val, isSet: true}
}

func (v NullableRunContainerDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunContainerDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


