/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// SetLicenseParametersRequest struct for SetLicenseParametersRequest
type SetLicenseParametersRequest struct {
	// Specifies the CIDR of the virtual network created for use with the VNS3 Manager
	Subnet *string `json:"subnet,omitempty"`
	// Whitespace delimited address string in the subnet to use for the VNS3 Controllers' virtual interfaces.
	Managers *string `json:"managers,omitempty"`
	// Whitespace delimited string of ASNs (autonomous system numbers) corresponding to the order of the controllers
	Asns *string `json:"asns,omitempty"`
	// Comma delimited, or hyphenated sequence of addresses for use as client addresses in the virtual network.
	Clients *string `json:"clients,omitempty"`
	// IPAddress that must be allocated from the subnet, and be the same for all controllers
	MyManagerVip *string `json:"my_manager_vip,omitempty"`
	// Specifices whether to use defualt topology addressing as specified by the license
	Default *bool `json:"default,omitempty"`
}

// NewSetLicenseParametersRequest instantiates a new SetLicenseParametersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetLicenseParametersRequest(isDefault bool) *SetLicenseParametersRequest {
	this := SetLicenseParametersRequest{}
	var default_ bool = isDefault
	this.Default = &default_
	return &this
}

// NewSetLicenseParametersRequestWithDefaults instantiates a new SetLicenseParametersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetLicenseParametersRequestWithDefaults() *SetLicenseParametersRequest {
	this := SetLicenseParametersRequest{}
	var default_ bool = false
	this.Default = &default_
	return &this
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetSubnet() string {
	if o == nil || o.Subnet == nil {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetSubnetOk() (*string, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *SetLicenseParametersRequest) SetSubnet(v string) {
	o.Subnet = &v
}

// GetManagers returns the Managers field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetManagers() string {
	if o == nil || o.Managers == nil {
		var ret string
		return ret
	}
	return *o.Managers
}

// GetManagersOk returns a tuple with the Managers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetManagersOk() (*string, bool) {
	if o == nil || o.Managers == nil {
		return nil, false
	}
	return o.Managers, true
}

// HasManagers returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasManagers() bool {
	if o != nil && o.Managers != nil {
		return true
	}

	return false
}

// SetManagers gets a reference to the given string and assigns it to the Managers field.
func (o *SetLicenseParametersRequest) SetManagers(v string) {
	o.Managers = &v
}

// GetAsns returns the Asns field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetAsns() string {
	if o == nil || o.Asns == nil {
		var ret string
		return ret
	}
	return *o.Asns
}

// GetAsnsOk returns a tuple with the Asns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetAsnsOk() (*string, bool) {
	if o == nil || o.Asns == nil {
		return nil, false
	}
	return o.Asns, true
}

// HasAsns returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasAsns() bool {
	if o != nil && o.Asns != nil {
		return true
	}

	return false
}

// SetAsns gets a reference to the given string and assigns it to the Asns field.
func (o *SetLicenseParametersRequest) SetAsns(v string) {
	o.Asns = &v
}

// GetClients returns the Clients field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetClients() string {
	if o == nil || o.Clients == nil {
		var ret string
		return ret
	}
	return *o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetClientsOk() (*string, bool) {
	if o == nil || o.Clients == nil {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasClients() bool {
	if o != nil && o.Clients != nil {
		return true
	}

	return false
}

// SetClients gets a reference to the given string and assigns it to the Clients field.
func (o *SetLicenseParametersRequest) SetClients(v string) {
	o.Clients = &v
}

// GetMyManagerVip returns the MyManagerVip field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetMyManagerVip() string {
	if o == nil || o.MyManagerVip == nil {
		var ret string
		return ret
	}
	return *o.MyManagerVip
}

// GetMyManagerVipOk returns a tuple with the MyManagerVip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetMyManagerVipOk() (*string, bool) {
	if o == nil || o.MyManagerVip == nil {
		return nil, false
	}
	return o.MyManagerVip, true
}

// HasMyManagerVip returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasMyManagerVip() bool {
	if o != nil && o.MyManagerVip != nil {
		return true
	}

	return false
}

// SetMyManagerVip gets a reference to the given string and assigns it to the MyManagerVip field.
func (o *SetLicenseParametersRequest) SetMyManagerVip(v string) {
	o.MyManagerVip = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *SetLicenseParametersRequest) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLicenseParametersRequest) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *SetLicenseParametersRequest) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *SetLicenseParametersRequest) SetDefault(v bool) {
	o.Default = &v
}

func (o SetLicenseParametersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.Managers != nil {
		toSerialize["managers"] = o.Managers
	}
	if o.Asns != nil {
		toSerialize["asns"] = o.Asns
	}
	if o.Clients != nil {
		toSerialize["clients"] = o.Clients
	}
	if o.MyManagerVip != nil {
		toSerialize["my_manager_vip"] = o.MyManagerVip
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullableSetLicenseParametersRequest struct {
	value *SetLicenseParametersRequest
	isSet bool
}

func (v NullableSetLicenseParametersRequest) Get() *SetLicenseParametersRequest {
	return v.value
}

func (v *NullableSetLicenseParametersRequest) Set(val *SetLicenseParametersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetLicenseParametersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetLicenseParametersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetLicenseParametersRequest(val *SetLicenseParametersRequest) *NullableSetLicenseParametersRequest {
	return &NullableSetLicenseParametersRequest{value: val, isSet: true}
}

func (v NullableSetLicenseParametersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetLicenseParametersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


