/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// CreatePluginInstanceExportRequest struct for CreatePluginInstanceExportRequest
type CreatePluginInstanceExportRequest struct {
	Name string `json:"name"`
}

// NewCreatePluginInstanceExportRequest instantiates a new CreatePluginInstanceExportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePluginInstanceExportRequest(name string) *CreatePluginInstanceExportRequest {
	this := CreatePluginInstanceExportRequest{}
	this.Name = name
	return &this
}

// NewCreatePluginInstanceExportRequestWithDefaults instantiates a new CreatePluginInstanceExportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePluginInstanceExportRequestWithDefaults() *CreatePluginInstanceExportRequest {
	this := CreatePluginInstanceExportRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreatePluginInstanceExportRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreatePluginInstanceExportRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreatePluginInstanceExportRequest) SetName(v string) {
	o.Name = v
}

func (o CreatePluginInstanceExportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePluginInstanceExportRequest struct {
	value *CreatePluginInstanceExportRequest
	isSet bool
}

func (v NullableCreatePluginInstanceExportRequest) Get() *CreatePluginInstanceExportRequest {
	return v.value
}

func (v *NullableCreatePluginInstanceExportRequest) Set(val *CreatePluginInstanceExportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePluginInstanceExportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePluginInstanceExportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePluginInstanceExportRequest(val *CreatePluginInstanceExportRequest) *NullableCreatePluginInstanceExportRequest {
	return &NullableCreatePluginInstanceExportRequest{value: val, isSet: true}
}

func (v NullableCreatePluginInstanceExportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePluginInstanceExportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


