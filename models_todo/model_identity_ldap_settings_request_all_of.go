/*
VNS3 Controller API

Cohesive networks VNS3 provides complete control of your network's addressing, routes, rules and edge enabling a secure, connected and reactive cloud network. 

API version: 6.0.0
Contact: support@cohesive.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cohesivenet

import (
	"encoding/json"
)

// IdentityLdapSettingsRequestAllOf struct for IdentityLdapSettingsRequestAllOf
type IdentityLdapSettingsRequestAllOf struct {
	Provider string `json:"provider"`
	Enabled bool `json:"enabled"`
}

// NewIdentityLdapSettingsRequestAllOf instantiates a new IdentityLdapSettingsRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityLdapSettingsRequestAllOf(provider string, enabled bool) *IdentityLdapSettingsRequestAllOf {
	this := IdentityLdapSettingsRequestAllOf{}
	this.Provider = provider
	this.Enabled = enabled
	return &this
}

// NewIdentityLdapSettingsRequestAllOfWithDefaults instantiates a new IdentityLdapSettingsRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityLdapSettingsRequestAllOfWithDefaults() *IdentityLdapSettingsRequestAllOf {
	this := IdentityLdapSettingsRequestAllOf{}
	return &this
}

// GetProvider returns the Provider field value
func (o *IdentityLdapSettingsRequestAllOf) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *IdentityLdapSettingsRequestAllOf) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *IdentityLdapSettingsRequestAllOf) SetProvider(v string) {
	o.Provider = v
}

// GetEnabled returns the Enabled field value
func (o *IdentityLdapSettingsRequestAllOf) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *IdentityLdapSettingsRequestAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *IdentityLdapSettingsRequestAllOf) SetEnabled(v bool) {
	o.Enabled = v
}

func (o IdentityLdapSettingsRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityLdapSettingsRequestAllOf struct {
	value *IdentityLdapSettingsRequestAllOf
	isSet bool
}

func (v NullableIdentityLdapSettingsRequestAllOf) Get() *IdentityLdapSettingsRequestAllOf {
	return v.value
}

func (v *NullableIdentityLdapSettingsRequestAllOf) Set(val *IdentityLdapSettingsRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityLdapSettingsRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityLdapSettingsRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityLdapSettingsRequestAllOf(val *IdentityLdapSettingsRequestAllOf) *NullableIdentityLdapSettingsRequestAllOf {
	return &NullableIdentityLdapSettingsRequestAllOf{value: val, isSet: true}
}

func (v NullableIdentityLdapSettingsRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityLdapSettingsRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


